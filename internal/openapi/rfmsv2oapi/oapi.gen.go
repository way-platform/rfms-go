// Package rfmsv2oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package rfmsv2oapi

import (
	"time"
)

// Defines values for AlternatorInfoTypeAlternatorStatus.
const (
	AlternatorInfoTypeAlternatorStatusCHARGING     AlternatorInfoTypeAlternatorStatus = "CHARGING"
	AlternatorInfoTypeAlternatorStatusERROR        AlternatorInfoTypeAlternatorStatus = "ERROR"
	AlternatorInfoTypeAlternatorStatusNOTAVAILABLE AlternatorInfoTypeAlternatorStatus = "NOT_AVAILABLE"
	AlternatorInfoTypeAlternatorStatusNOTCHARGING  AlternatorInfoTypeAlternatorStatus = "NOT_CHARGING"
)

// Defines values for DoorStatusTypeDoorEnabledStatus.
const (
	DoorStatusTypeDoorEnabledStatusDISABLED     DoorStatusTypeDoorEnabledStatus = "DISABLED"
	DoorStatusTypeDoorEnabledStatusENABLED      DoorStatusTypeDoorEnabledStatus = "ENABLED"
	DoorStatusTypeDoorEnabledStatusERROR        DoorStatusTypeDoorEnabledStatus = "ERROR"
	DoorStatusTypeDoorEnabledStatusNOTAVAILABLE DoorStatusTypeDoorEnabledStatus = "NOT_AVAILABLE"
)

// Defines values for DoorStatusTypeDoorLockStatus.
const (
	DoorStatusTypeDoorLockStatusERROR        DoorStatusTypeDoorLockStatus = "ERROR"
	DoorStatusTypeDoorLockStatusLOCKED       DoorStatusTypeDoorLockStatus = "LOCKED"
	DoorStatusTypeDoorLockStatusNOTAVAILABLE DoorStatusTypeDoorLockStatus = "NOT_AVAILABLE"
	DoorStatusTypeDoorLockStatusUNLOCKED     DoorStatusTypeDoorLockStatus = "UNLOCKED"
)

// Defines values for DoorStatusTypeDoorOpenStatus.
const (
	DoorStatusTypeDoorOpenStatusCLOSED       DoorStatusTypeDoorOpenStatus = "CLOSED"
	DoorStatusTypeDoorOpenStatusERROR        DoorStatusTypeDoorOpenStatus = "ERROR"
	DoorStatusTypeDoorOpenStatusNOTAVAILABLE DoorStatusTypeDoorOpenStatus = "NOT_AVAILABLE"
	DoorStatusTypeDoorOpenStatusOPEN         DoorStatusTypeDoorOpenStatus = "OPEN"
)

// Defines values for SnapshotTypeDriver1WorkingState.
const (
	SnapshotTypeDriver1WorkingStateDRIVE           SnapshotTypeDriver1WorkingState = "DRIVE"
	SnapshotTypeDriver1WorkingStateDRIVERAVAILABLE SnapshotTypeDriver1WorkingState = "DRIVER_AVAILABLE"
	SnapshotTypeDriver1WorkingStateERROR           SnapshotTypeDriver1WorkingState = "ERROR"
	SnapshotTypeDriver1WorkingStateNOTAVAILABLE    SnapshotTypeDriver1WorkingState = "NOT_AVAILABLE"
	SnapshotTypeDriver1WorkingStateREST            SnapshotTypeDriver1WorkingState = "REST"
	SnapshotTypeDriver1WorkingStateWORK            SnapshotTypeDriver1WorkingState = "WORK"
)

// Defines values for SnapshotTypeDriver2WorkingState.
const (
	SnapshotTypeDriver2WorkingStateDRIVE           SnapshotTypeDriver2WorkingState = "DRIVE"
	SnapshotTypeDriver2WorkingStateDRIVERAVAILABLE SnapshotTypeDriver2WorkingState = "DRIVER_AVAILABLE"
	SnapshotTypeDriver2WorkingStateERROR           SnapshotTypeDriver2WorkingState = "ERROR"
	SnapshotTypeDriver2WorkingStateNOTAVAILABLE    SnapshotTypeDriver2WorkingState = "NOT_AVAILABLE"
	SnapshotTypeDriver2WorkingStateREST            SnapshotTypeDriver2WorkingState = "REST"
	SnapshotTypeDriver2WorkingStateWORK            SnapshotTypeDriver2WorkingState = "WORK"
)

// Defines values for TachoDriverIdentificationTypeDriverAuthenticationEquipment.
const (
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentCOMPANYCARD       TachoDriverIdentificationTypeDriverAuthenticationEquipment = "COMPANY_CARD"
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentCONTROLCARD       TachoDriverIdentificationTypeDriverAuthenticationEquipment = "CONTROL_CARD"
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentDRIVERCARD        TachoDriverIdentificationTypeDriverAuthenticationEquipment = "DRIVER_CARD"
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentMANUFACTURINGCARD TachoDriverIdentificationTypeDriverAuthenticationEquipment = "MANUFACTURING_CARD"
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentMOTIONSENSOR      TachoDriverIdentificationTypeDriverAuthenticationEquipment = "MOTION_SENSOR"
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentRESERVED          TachoDriverIdentificationTypeDriverAuthenticationEquipment = "RESERVED"
	TachoDriverIdentificationTypeDriverAuthenticationEquipmentVEHICLEUNIT       TachoDriverIdentificationTypeDriverAuthenticationEquipment = "VEHICLE_UNIT"
)

// Defines values for TellTaleInfoTypeState.
const (
	TellTaleInfoTypeStateINFO         TellTaleInfoTypeState = "INFO"
	TellTaleInfoTypeStateNOTAVAILABLE TellTaleInfoTypeState = "NOT_AVAILABLE"
	TellTaleInfoTypeStateOFF          TellTaleInfoTypeState = "OFF"
	TellTaleInfoTypeStateRED          TellTaleInfoTypeState = "RED"
	TellTaleInfoTypeStateRESERVED4    TellTaleInfoTypeState = "RESERVED_4"
	TellTaleInfoTypeStateRESERVED5    TellTaleInfoTypeState = "RESERVED_5"
	TellTaleInfoTypeStateRESERVED6    TellTaleInfoTypeState = "RESERVED_6"
	TellTaleInfoTypeStateYELLOW       TellTaleInfoTypeState = "YELLOW"
)

// Defines values for TellTaleInfoTypeTellTale.
const (
	TellTaleInfoTypeTellTaleABSTRAILER                      TellTaleInfoTypeTellTale = "ABS_TRAILER"
	TellTaleInfoTypeTellTaleACC                             TellTaleInfoTypeTellTale = "ACC"
	TellTaleInfoTypeTellTaleADBLUELEVEL                     TellTaleInfoTypeTellTale = "ADBLUE_LEVEL"
	TellTaleInfoTypeTellTaleADVANCEDEMERGENCYBREAKING       TellTaleInfoTypeTellTale = "ADVANCED_EMERGENCY_BREAKING"
	TellTaleInfoTypeTellTaleAIRBAG                          TellTaleInfoTypeTellTale = "AIRBAG"
	TellTaleInfoTypeTellTaleAIRFILTERCLOGGED                TellTaleInfoTypeTellTale = "AIR_FILTER_CLOGGED"
	TellTaleInfoTypeTellTaleANTILOCKBRAKEFAILURE            TellTaleInfoTypeTellTale = "ANTI_LOCK_BRAKE_FAILURE"
	TellTaleInfoTypeTellTaleARTICULATION                    TellTaleInfoTypeTellTale = "ARTICULATION"
	TellTaleInfoTypeTellTaleAUXILLARYAIRPRESSURE            TellTaleInfoTypeTellTale = "AUXILLARY_AIR_PRESSURE"
	TellTaleInfoTypeTellTaleBATTERYCHARGINGCONDITION        TellTaleInfoTypeTellTale = "BATTERY_CHARGING_CONDITION"
	TellTaleInfoTypeTellTaleBRAKELIGHTS                     TellTaleInfoTypeTellTale = "BRAKE_LIGHTS"
	TellTaleInfoTypeTellTaleBRAKEMALFUNCTION                TellTaleInfoTypeTellTale = "BRAKE_MALFUNCTION"
	TellTaleInfoTypeTellTaleBUSSTOPBRAKE                    TellTaleInfoTypeTellTale = "BUS_STOP_BRAKE"
	TellTaleInfoTypeTellTaleCOOLINGAIRCONDITIONING          TellTaleInfoTypeTellTale = "COOLING_AIR_CONDITIONING"
	TellTaleInfoTypeTellTaleEBS                             TellTaleInfoTypeTellTale = "EBS"
	TellTaleInfoTypeTellTaleEBSTRAILER12                    TellTaleInfoTypeTellTale = "EBS_TRAILER_1_2"
	TellTaleInfoTypeTellTaleENGINECOMPARTMENTTEMPERATURE    TellTaleInfoTypeTellTale = "ENGINE_COMPARTMENT_TEMPERATURE"
	TellTaleInfoTypeTellTaleENGINECOOLANTLEVEL              TellTaleInfoTypeTellTale = "ENGINE_COOLANT_LEVEL"
	TellTaleInfoTypeTellTaleENGINECOOLANTTEMPERATURE        TellTaleInfoTypeTellTale = "ENGINE_COOLANT_TEMPERATURE"
	TellTaleInfoTypeTellTaleENGINEEMISSIONFAILURE           TellTaleInfoTypeTellTale = "ENGINE_EMISSION_FAILURE"
	TellTaleInfoTypeTellTaleENGINEMILINDICATOR              TellTaleInfoTypeTellTale = "ENGINE_MIL_INDICATOR"
	TellTaleInfoTypeTellTaleENGINEOIL                       TellTaleInfoTypeTellTale = "ENGINE_OIL"
	TellTaleInfoTypeTellTaleENGINEOILLEVEL                  TellTaleInfoTypeTellTale = "ENGINE_OIL_LEVEL"
	TellTaleInfoTypeTellTaleENGINEOILTEMPERATURE            TellTaleInfoTypeTellTale = "ENGINE_OIL_TEMPERATURE"
	TellTaleInfoTypeTellTaleESCINDICATOR                    TellTaleInfoTypeTellTale = "ESC_INDICATOR"
	TellTaleInfoTypeTellTaleESCSWITCHEDOFF                  TellTaleInfoTypeTellTale = "ESC_SWITCHED_OFF"
	TellTaleInfoTypeTellTaleFRONTFOGLIGHT                   TellTaleInfoTypeTellTale = "FRONT_FOG_LIGHT"
	TellTaleInfoTypeTellTaleFUELFILTERDIFFPRESSURE          TellTaleInfoTypeTellTale = "FUEL_FILTER_DIFF_PRESSURE"
	TellTaleInfoTypeTellTaleFUELLEVEL                       TellTaleInfoTypeTellTale = "FUEL_LEVEL"
	TellTaleInfoTypeTellTaleGENERALFAILURE                  TellTaleInfoTypeTellTale = "GENERAL_FAILURE"
	TellTaleInfoTypeTellTaleHATCHOPEN                       TellTaleInfoTypeTellTale = "HATCH_OPEN"
	TellTaleInfoTypeTellTaleHAZARDWARNING                   TellTaleInfoTypeTellTale = "HAZARD_WARNING"
	TellTaleInfoTypeTellTaleHEIGHTCONTROL                   TellTaleInfoTypeTellTale = "HEIGHT_CONTROL"
	TellTaleInfoTypeTellTaleHIGHBEAMMAINBEAM                TellTaleInfoTypeTellTale = "HIGH_BEAM_MAIN_BEAM"
	TellTaleInfoTypeTellTaleKNEELING                        TellTaleInfoTypeTellTale = "KNEELING"
	TellTaleInfoTypeTellTaleLANEDEPARTUREINDICATOR          TellTaleInfoTypeTellTale = "LANE_DEPARTURE_INDICATOR"
	TellTaleInfoTypeTellTaleLANEDEPARTUREWARNINGSWITCHEDOFF TellTaleInfoTypeTellTale = "LANE_DEPARTURE_WARNING_SWITCHED_OFF"
	TellTaleInfoTypeTellTaleLOWBEAMDIPPEDBEAM               TellTaleInfoTypeTellTale = "LOW_BEAM_DIPPED_BEAM"
	TellTaleInfoTypeTellTaleLOWERING                        TellTaleInfoTypeTellTale = "LOWERING"
	TellTaleInfoTypeTellTaleOEMSPECIFICTELLTALE             TellTaleInfoTypeTellTale = "OEM_SPECIFIC_TELL_TALE"
	TellTaleInfoTypeTellTalePARKINGBRAKE                    TellTaleInfoTypeTellTale = "PARKING_BRAKE"
	TellTaleInfoTypeTellTalePARKINGHEATER                   TellTaleInfoTypeTellTale = "PARKING_HEATER"
	TellTaleInfoTypeTellTalePOSITIONLIGHTS                  TellTaleInfoTypeTellTale = "POSITION_LIGHTS"
	TellTaleInfoTypeTellTalePRAMREQUEST                     TellTaleInfoTypeTellTale = "PRAM_REQUEST"
	TellTaleInfoTypeTellTalePROVISIONINGHANDICAPPEDPERSON   TellTaleInfoTypeTellTale = "PROVISIONING_HANDICAPPED_PERSON"
	TellTaleInfoTypeTellTaleRAISING                         TellTaleInfoTypeTellTale = "RAISING"
	TellTaleInfoTypeTellTaleREARFOGLIGHT                    TellTaleInfoTypeTellTale = "REAR_FOG_LIGHT"
	TellTaleInfoTypeTellTaleRETARDER                        TellTaleInfoTypeTellTale = "RETARDER"
	TellTaleInfoTypeTellTaleSEATBELT                        TellTaleInfoTypeTellTale = "SEAT_BELT"
	TellTaleInfoTypeTellTaleSERVICECALLFORMAINTENANCE       TellTaleInfoTypeTellTale = "SERVICE_CALL_FOR_MAINTENANCE"
	TellTaleInfoTypeTellTaleSTEERINGFAILURE                 TellTaleInfoTypeTellTale = "STEERING_FAILURE"
	TellTaleInfoTypeTellTaleSTEERINGFLUIDLEVEL              TellTaleInfoTypeTellTale = "STEERING_FLUID_LEVEL"
	TellTaleInfoTypeTellTaleSTOPREQUEST                     TellTaleInfoTypeTellTale = "STOP_REQUEST"
	TellTaleInfoTypeTellTaleTACHOGRAPHINDICATOR             TellTaleInfoTypeTellTale = "TACHOGRAPH_INDICATOR"
	TellTaleInfoTypeTellTaleTIREMALFUNCTION                 TellTaleInfoTypeTellTale = "TIRE_MALFUNCTION"
	TellTaleInfoTypeTellTaleTRAILERCONNECTED                TellTaleInfoTypeTellTale = "TRAILER_CONNECTED"
	TellTaleInfoTypeTellTaleTRANSMISSIONFLUIDTEMPERATURE    TellTaleInfoTypeTellTale = "TRANSMISSION_FLUID_TEMPERATURE"
	TellTaleInfoTypeTellTaleTRANSMISSIONMALFUNCTION         TellTaleInfoTypeTellTale = "TRANSMISSION_MALFUNCTION"
	TellTaleInfoTypeTellTaleTURNSIGNALS                     TellTaleInfoTypeTellTale = "TURN_SIGNALS"
	TellTaleInfoTypeTellTaleWINDSCREENWASHERFLUID           TellTaleInfoTypeTellTale = "WINDSCREEN_WASHER_FLUID"
	TellTaleInfoTypeTellTaleWORNBRAKELININGS                TellTaleInfoTypeTellTale = "WORN_BRAKE_LININGS"
)

// Defines values for VehicleStatusTypeStatus2OfDoors.
const (
	VehicleStatusTypeStatus2OfDoorsALLDOORSDISABLED      VehicleStatusTypeStatus2OfDoors = "ALL_DOORS_DISABLED"
	VehicleStatusTypeStatus2OfDoorsATLEASTONEDOORENABLED VehicleStatusTypeStatus2OfDoors = "AT_LEAST_ONE_DOOR_ENABLED"
	VehicleStatusTypeStatus2OfDoorsERROR                 VehicleStatusTypeStatus2OfDoors = "ERROR"
	VehicleStatusTypeStatus2OfDoorsNOTAVAILABLE          VehicleStatusTypeStatus2OfDoors = "NOT_AVAILABLE"
)

// AccumulatedType defines model for AccumulatedType.
type AccumulatedType struct {
	AccelerationClass                     *FromToClassesType `json:"AccelerationClass,omitempty"`
	AccelerationDuringBrakeClass          *FromToClassesType `json:"AccelerationDuringBrakeClass,omitempty"`
	AccelerationPedalPositionClass        *FromToClassesType `json:"AccelerationPedalPositionClass,omitempty"`
	BrakePedalCounterSpeedOverZero        *int64             `json:"BrakePedalCounterSpeedOverZero,omitempty"`
	ChairliftCounter                      *int64             `json:"ChairliftCounter,omitempty"`
	CurrentGearClass                      *LabelClassesType  `json:"CurrentGearClass,omitempty"`
	DistanceBrakePedalActiveSpeedOverZero *int64             `json:"DistanceBrakePedalActiveSpeedOverZero,omitempty"`
	DistanceCruiseControlActive           *int64             `json:"DistanceCruiseControlActive,omitempty"`
	DrivingWithoutTorqueClass             *LabelClassesType  `json:"DrivingWithoutTorqueClass,omitempty"`
	DurationCruiseControlActive           *int64             `json:"DurationCruiseControlActive,omitempty"`
	DurationWheelbaseSpeedOverZero        *int64             `json:"DurationWheelbaseSpeedOverZero,omitempty"`
	DurationWheelbaseSpeedZero            *int64             `json:"DurationWheelbaseSpeedZero,omitempty"`
	EngineSpeedClass                      *FromToClassesType `json:"EngineSpeedClass,omitempty"`
	EngineTorqueAtCurrentSpeedClass       *FromToClassesType `json:"EngineTorqueAtCurrentSpeedClass,omitempty"`
	EngineTorqueClass                     *FromToClassesType `json:"EngineTorqueClass,omitempty"`
	FuelConsumptionCruiseControlActive    *int64             `json:"FuelConsumptionCruiseControlActive,omitempty"`
	FuelWheelbaseSpeedOverZero            *int64             `json:"FuelWheelbaseSpeedOverZero,omitempty"`
	FuelWheelbaseSpeedZero                *int64             `json:"FuelWheelbaseSpeedZero,omitempty"`
	HighAccelerationClass                 *FromToClassesType `json:"HighAccelerationClass,omitempty"`
	KneelingCounter                       *int64             `json:"KneelingCounter,omitempty"`
	PramRequestCounter                    *int64             `json:"PramRequestCounter,omitempty"`
	PtoActiveClass                        *LabelClassesType  `json:"PtoActiveClass,omitempty"`
	RetarderTorqueClass                   *FromToClassesType `json:"RetarderTorqueClass,omitempty"`
	SelectedGearClass                     *LabelClassesType  `json:"SelectedGearClass,omitempty"`
	StopRequestCounter                    *int64             `json:"StopRequestCounter,omitempty"`
	VehicleSpeedClass                     *FromToClassesType `json:"VehicleSpeedClass,omitempty"`
}

// AlternatorInfoType defines model for AlternatorInfoType.
type AlternatorInfoType struct {
	AlternatorNumber *int64                              `json:"AlternatorNumber,omitempty"`
	AlternatorStatus *AlternatorInfoTypeAlternatorStatus `json:"AlternatorStatus,omitempty"`
}

// AlternatorInfoTypeAlternatorStatus defines model for AlternatorInfoType.AlternatorStatus.
type AlternatorInfoTypeAlternatorStatus string

// DoorStatusType defines model for DoorStatusType.
type DoorStatusType struct {
	DoorEnabledStatus *DoorStatusTypeDoorEnabledStatus `json:"DoorEnabledStatus,omitempty"`
	DoorLockStatus    *DoorStatusTypeDoorLockStatus    `json:"DoorLockStatus,omitempty"`
	DoorNumber        *int64                           `json:"DoorNumber,omitempty"`
	DoorOpenStatus    *DoorStatusTypeDoorOpenStatus    `json:"DoorOpenStatus,omitempty"`
}

// DoorStatusTypeDoorEnabledStatus defines model for DoorStatusType.DoorEnabledStatus.
type DoorStatusTypeDoorEnabledStatus string

// DoorStatusTypeDoorLockStatus defines model for DoorStatusType.DoorLockStatus.
type DoorStatusTypeDoorLockStatus string

// DoorStatusTypeDoorOpenStatus defines model for DoorStatusType.DoorOpenStatus.
type DoorStatusTypeDoorOpenStatus string

// DriverIDType defines model for DriverIdType.
type DriverIDType struct {
	OEMDriverIdentification   *OEMDriverIdentificationType   `json:"OemDriverIdentification,omitempty"`
	TachoDriverIdentification *TachoDriverIdentificationType `json:"TachoDriverIdentification,omitempty"`
}

// FromToClassType defines model for FromToClassType.
type FromToClassType struct {
	From        *float64 `json:"From,omitempty"`
	Meters      *int64   `json:"Meters,omitempty"`
	MilliLitres *int64   `json:"MilliLitres,omitempty"`
	Seconds     *int64   `json:"Seconds,omitempty"`
	To          *float64 `json:"To,omitempty"`
}

// FromToClassesType defines model for FromToClassesType.
type FromToClassesType struct {
	Value []FromToClassType `json:"Value,omitempty"`
}

// GNSSPositionType defines model for GNSSPositionType.
type GNSSPositionType struct {
	Altitude         *int64     `json:"Altitude,omitempty"`
	Heading          *int32     `json:"Heading,omitempty"`
	Latitude         *float64   `json:"Latitude,omitempty"`
	Longitude        *float64   `json:"Longitude,omitempty"`
	PositionDateTime *time.Time `json:"PositionDateTime,omitempty"`
	Speed            *float64   `json:"Speed,omitempty"`
}

// LabelClassType defines model for LabelClassType.
type LabelClassType struct {
	Label       *string `json:"Label,omitempty"`
	Meters      *int64  `json:"Meters,omitempty"`
	MilliLitres *int64  `json:"MilliLitres,omitempty"`
	Seconds     *int64  `json:"Seconds,omitempty"`
}

// LabelClassesType defines model for LabelClassesType.
type LabelClassesType struct {
	Value []LabelClassType `json:"Value,omitempty"`
}

// OEMDriverIdentificationType defines model for OemDriverIdentificationType.
type OEMDriverIdentificationType struct {
	IDType                  *string `json:"IdType,omitempty"`
	OEMDriverIdentification *string `json:"OemDriverIdentification,omitempty"`
}

// ProductionDateType defines model for ProductionDateType.
type ProductionDateType struct {
	Day   *int32 `json:"Day,omitempty"`
	Month *int32 `json:"Month,omitempty"`
	Year  *int32 `json:"Year,omitempty"`
}

// SnapshotType defines model for SnapshotType.
type SnapshotType struct {
	AmbientAirTemperature *float64                         `json:"AmbientAirTemperature,omitempty"`
	CatalystFuelLevel     *float64                         `json:"CatalystFuelLevel,omitempty"`
	Driver1WorkingState   *SnapshotTypeDriver1WorkingState `json:"Driver1WorkingState,omitempty"`
	Driver2ID             *DriverIDType                    `json:"Driver2Id,omitempty"`
	Driver2WorkingState   *SnapshotTypeDriver2WorkingState `json:"Driver2WorkingState,omitempty"`
	EngineSpeed           *float64                         `json:"EngineSpeed,omitempty"`
	FuelLevel1            *float64                         `json:"FuelLevel1,omitempty"`
	GNSSPosition          *GNSSPositionType                `json:"GNSSPosition,omitempty"`
	TachographSpeed       *float64                         `json:"TachographSpeed,omitempty"`
	WheelBasedSpeed       *float64                         `json:"WheelBasedSpeed,omitempty"`
}

// SnapshotTypeDriver1WorkingState defines model for SnapshotType.Driver1WorkingState.
type SnapshotTypeDriver1WorkingState string

// SnapshotTypeDriver2WorkingState defines model for SnapshotType.Driver2WorkingState.
type SnapshotTypeDriver2WorkingState string

// TachoDriverIdentificationType defines model for TachoDriverIdentificationType.
type TachoDriverIdentificationType struct {
	CardIssuingMemberState        *string                                                     `json:"CardIssuingMemberState,omitempty"`
	CardRenewalIndex              *string                                                     `json:"CardRenewalIndex,omitempty"`
	CardReplacementIndex          *string                                                     `json:"CardReplacementIndex,omitempty"`
	DriverAuthenticationEquipment *TachoDriverIdentificationTypeDriverAuthenticationEquipment `json:"DriverAuthenticationEquipment,omitempty"`
	DriverIdentification          *string                                                     `json:"DriverIdentification,omitempty"`
}

// TachoDriverIdentificationTypeDriverAuthenticationEquipment defines model for TachoDriverIdentificationType.DriverAuthenticationEquipment.
type TachoDriverIdentificationTypeDriverAuthenticationEquipment string

// TellTaleInfoType defines model for TellTaleInfoType.
type TellTaleInfoType struct {
	State    *TellTaleInfoTypeState    `json:"State,omitempty"`
	TellTale *TellTaleInfoTypeTellTale `json:"TellTale,omitempty"`
}

// TellTaleInfoTypeState defines model for TellTaleInfoType.State.
type TellTaleInfoTypeState string

// TellTaleInfoTypeTellTale defines model for TellTaleInfoType.TellTale.
type TellTaleInfoTypeTellTale string

// TriggerType defines model for TriggerType.
type TriggerType struct {
	Context      *string            `json:"Context,omitempty"`
	DriverID     *DriverIDType      `json:"DriverId,omitempty"`
	PtoID        *string            `json:"PtoId,omitempty"`
	TellTaleInfo []TellTaleInfoType `json:"TellTaleInfo,omitempty"`
	TriggerInfo  []string           `json:"TriggerInfo,omitempty"`
	TriggerType  *string            `json:"TriggerType,omitempty"`
}

// UptimeType defines model for UptimeType.
type UptimeType struct {
	AlternatorInfo                  []AlternatorInfoType `json:"AlternatorInfo,omitempty"`
	BellowPressureFrontAxleLeft     *int64               `json:"BellowPressureFrontAxleLeft,omitempty"`
	BellowPressureFrontAxleRight    *int64               `json:"BellowPressureFrontAxleRight,omitempty"`
	BellowPressureRearAxleLeft      *int64               `json:"BellowPressureRearAxleLeft,omitempty"`
	BellowPressureRearAxleRight     *int64               `json:"BellowPressureRearAxleRight,omitempty"`
	DurationAtLeastOneDoorOpen      *int64               `json:"DurationAtLeastOneDoorOpen,omitempty"`
	EngineCoolantTemperature        *float64             `json:"EngineCoolantTemperature,omitempty"`
	ServiceBrakeAirPressureCircuit1 *int64               `json:"ServiceBrakeAirPressureCircuit1,omitempty"`
	ServiceBrakeAirPressureCircuit2 *int64               `json:"ServiceBrakeAirPressureCircuit2,omitempty"`
	ServiceDistance                 *int64               `json:"ServiceDistance,omitempty"`
	TellTaleInfo                    []TellTaleInfoType   `json:"TellTaleInfo,omitempty"`
}

// VehiclePositionType defines model for VehiclePositionType.
type VehiclePositionType struct {
	CreatedDateTime  *time.Time        `json:"CreatedDateTime,omitempty"`
	GNSSPosition     *GNSSPositionType `json:"GNSSPosition,omitempty"`
	ReceivedDateTime *time.Time        `json:"ReceivedDateTime,omitempty"`
	TachographSpeed  *float64          `json:"TachographSpeed,omitempty"`
	TriggerType      *TriggerType      `json:"TriggerType,omitempty"`
	VIN              *string           `json:"VIN,omitempty"`
	WheelBasedSpeed  *float64          `json:"WheelBasedSpeed,omitempty"`
}

// VehiclePositions defines model for VehiclePositions.
type VehiclePositions struct {
	MoreDataAvailable     *bool                 `json:"MoreDataAvailable,omitempty"`
	RequestServerDateTime *time.Time            `json:"RequestServerDateTime,omitempty"`
	VehiclePosition       []VehiclePositionType `json:"VehiclePosition,omitempty"`
}

// VehicleStatusType defines model for VehicleStatusType.
type VehicleStatusType struct {
	AccumulatedData               *AccumulatedType                 `json:"AccumulatedData,omitempty"`
	CreatedDateTime               *time.Time                       `json:"CreatedDateTime,omitempty"`
	DoorStatus                    []DoorStatusType                 `json:"DoorStatus,omitempty"`
	Driver1ID                     *DriverIDType                    `json:"Driver1Id,omitempty"`
	EngineTotalFuelUsed           *int64                           `json:"EngineTotalFuelUsed,omitempty"`
	GrossCombinationVehicleWeight *int32                           `json:"GrossCombinationVehicleWeight,omitempty"`
	HRTotalVehicleDistance        *int64                           `json:"HRTotalVehicleDistance,omitempty"`
	ReceivedDateTime              *time.Time                       `json:"ReceivedDateTime,omitempty"`
	SnapshotData                  *SnapshotType                    `json:"SnapshotData,omitempty"`
	Status2OfDoors                *VehicleStatusTypeStatus2OfDoors `json:"Status2OfDoors,omitempty"`
	TotalEngineHours              *float64                         `json:"TotalEngineHours,omitempty"`
	TriggerType                   *TriggerType                     `json:"TriggerType,omitempty"`
	UptimeData                    *UptimeType                      `json:"UptimeData,omitempty"`
	VIN                           *string                          `json:"Vin,omitempty"`
}

// VehicleStatusTypeStatus2OfDoors defines model for VehicleStatusType.Status2OfDoors.
type VehicleStatusTypeStatus2OfDoors string

// VehicleStatuses defines model for VehicleStatuses.
type VehicleStatuses struct {
	MoreDataAvailable     *bool               `json:"MoreDataAvailable,omitempty"`
	RequestServerDateTime *time.Time          `json:"RequestServerDateTime,omitempty"`
	VehicleStatus         []VehicleStatusType `json:"VehicleStatus,omitempty"`
}

// VehicleType defines model for VehicleType.
type VehicleType struct {
	BodyType            *string             `json:"BodyType,omitempty"`
	Brand               *string             `json:"Brand,omitempty"`
	ChassisType         *string             `json:"ChassisType,omitempty"`
	CustomerVehicleName *string             `json:"CustomerVehicleName,omitempty"`
	DoorConfiguration   []int32             `json:"DoorConfiguration,omitempty"`
	EmissionLevel       *string             `json:"EmissionLevel,omitempty"`
	GearboxType         *string             `json:"GearboxType,omitempty"`
	HasRampOrLift       *bool               `json:"HasRampOrLift,omitempty"`
	Model               *string             `json:"Model,omitempty"`
	NoOfAxles           *int32              `json:"NoOfAxles,omitempty"`
	PossibleFuelType    []string            `json:"PossibleFuelType,omitempty"`
	ProductionDate      *ProductionDateType `json:"ProductionDate,omitempty"`
	TachographType      *string             `json:"TachographType,omitempty"`
	TellTaleCode        *string             `json:"TellTaleCode,omitempty"`
	TotalFuelTankVolume *int64              `json:"TotalFuelTankVolume,omitempty"`
	Type                *string             `json:"Type,omitempty"`
	VIN                 *string             `json:"VIN,omitempty"`
}

// Vehicles defines model for Vehicles.
type Vehicles struct {
	MoreDataAvailable *bool         `json:"MoreDataAvailable,omitempty"`
	Vehicle           []VehicleType `json:"Vehicle,omitempty"`
}
