edition = "2023";

package wayplatform.connect.rfms.v5;

import "wayplatform/connect/rfms/v5/charging_connection_state.proto";
import "wayplatform/connect/rfms/v5/driver_identification.proto";
import "wayplatform/connect/rfms/v5/tell_tale.proto";

// The type of trigger that caused the vehicle position to be sent.
message Trigger {
  // Trigger type for context RFMS.
  Type type = 1;

  // The type of trigger that caused the vehicle position to be sent.
  enum Type {
    // Default value. This value is not used.
    TYPE_UNSPECIFIED = 0;

    // Unknown trigger type.
    TYPE_UNKNOWN = 1;

    // Data was sent due to a timer trigger. (Timer value set outside rFMS scope)
    TIMER = 2;

    // Data was sent due to an ignition on.
    IGNITION_ON = 3;

    // Data was sent due to an ignition off.
    IGNITION_OFF = 4;

    // Data was sent due to that a PTO was enabled, will be sent for each PTO that gets enabled.
    PTO_ENABLED = 5;

    // Data was sent due to that a PTO was disabled, will be sent for each PTO that gets disabled.
    PTO_DISABLED = 6;

    // Data was sent due to a successful driver login.
    DRIVER_LOGIN = 7;

    // Data was sent due to a driver logout.
    DRIVER_LOGOUT = 8;

    // Data was sent due to that at least one tell tale changed state.
    TELL_TALE = 9;

    // Data was sent due to an engine on. For electric motor crank is on.
    ENGINE_ON = 10;

    // Data was sent due to an engine off. For electric motor crank is off.
    ENGINE_OFF = 11;

    // Data was sent due to that driver 1 changed working state.
    DRIVER_1_WORKING_STATE_CHANGED = 12;

    // Data was sent due to that driver 2 changed working state.
    DRIVER_2_WORKING_STATE_CHANGED = 13;

    // Data was sent due to that a set distance was travelled. (Distance set outside rFMS scope)
    DISTANCE_TRAVELLED = 14;

    // Data was sent due to that the type of fuel currently being utilized by the vehicle changed.
    FUEL_TYPE_CHANGE = 15;

    // Data was sent due to that the parking brake state has changed.
    PARKING_BRAKE_SWITCH_CHANGE = 16;

    // Data was sent due to a change in the battery pack charging status.
    BATTERY_PACK_CHARGING_STATUS_CHANGE = 17;

    // Data was sent due to a change in the battery pack charging connection status.
    BATTERY_PACK_CHARGING_CONNECTION_STATUS_CHANGE = 18;

    // One or several trailers were connected.
    TRAILER_CONNECTED = 19;

    // One or several trailers were disconnected.
    TRAILER_DISCONNECTED = 20;

    // An alarm was armed, disarmed or triggered.
    ALARM = 21;
  }

  // The unknown trigger type. Used when the type is TYPE_UNKNOWN.
  string unknown_type = 2;

  // The context of the trigger.
  Context context = 3;

  // The unknown context. Used when the context is CONTEXT_UNKNOWN.
  string unknown_context = 4;

  // Additional OEM specific trigger info content.
  // Can be used for both OEM specific and rFMS defined triggers.
  // E.g. TRAILER_CONNECTED [id of trailer].
  repeated string trigger_info = 5;

  // The driver identification.
  // Provided when the trigger type is DRIVER_LOGIN, DRIVER_LOGOUT, DRIVER_1_WORKING_STATE_CHANGED or DRIVER_2_WORKING_STATE_CHANGED.
  // For DRIVER_LOGIN it is the id of the driver that logged in.
  // For DRIVER_LOGOUT it is the id of the driver that logged out.
  // For DRIVER_1_WORKING_STATE_CHANGED it is the id of driver 1.
  // For DRIVER_2_WORKING_STATE_CHANGED it is the id of driver 2.
  DriverIdentification driver_id = 6;

  // The id of a power take off.
  // Provided when the trigger type is PTO_ENABLED or PTO_DISABLED.
  string pto_id = 7;

  // Additional tell tale information.
  // Provided when the trigger type is TELL_TALE.
  TellTale tell_tale_info = 8;

  // Additional charging status information.
  // Provided when the trigger type is BATTERY_PACK_CHARGING_STATUS_CHANGE.
  ChargingStatusInfo charging_status_info = 9;

  // Additional charging connection status information.
  // Provided when the trigger type is BATTERY_PACK_CHARGING_CONNECTION_STATUS_CHANGE.
  ChargingConnectionStatusInfo charging_connection_status_info = 10;

  // Additional alarm information.
  // Provided when the trigger type is ALARM.
  AlarmInfo alarm_info = 11;

  // The context of a trigger.
  enum Context {
    // Default value. This value is not used.
    CONTEXT_UNSPECIFIED = 0;

    // The context is unknown.
    CONTEXT_UNKNOWN = 1;

    // RFMS.
    RFMS = 2;

    // VOLVO TRUCKS.
    VOLVO_TRUCKS = 3;

    // SCANIA.
    SCANIA = 4;

    // DAIMLER.
    DAIMLER = 5;

    // IVECO.
    IVECO = 6;

    // DAF.
    DAF = 7;

    // MAN.
    MAN = 8;

    // RENAULT TRUCKS.
    RENAULT_TRUCKS = 9;

    // VDL.
    VDL = 10;

    // VOLVO BUSES.
    VOLVO_BUSES = 11;

    // IVECO BUS.
    IVECO_BUS = 12;

    // IRISBUS.
    IRISBUS = 13;
  }

  // Information about a charging status.
  message ChargingStatusInfo {
    // The event that caused the charging status to be sent.
    Event event = 1;

    // The charging status event.
    enum Event {
      // Default value. This value is not used.
      EVENT_UNSPECIFIED = 0;

      // The event is unknown.
      EVENT_UNKNOWN = 1;

      // An error occurred when charging.
      EVENT_ERROR = 2;

      // Charging has started.
      CHARGING_STARTED = 3;

      // Charging is completed.
      CHARGING_COMPLETED = 4;

      // Charging has been interrupted (no error).
      CHARGING_INTERRUPTED = 5;

      // The estimated time for completed charging has changed. (Threshold is outside scope of rFMS).
      ESTIMATED_COMPLETION_TIME_CHANGED = 6;

      // A predefined time has passed since last charge status update. (Frequency is outside the scope of rFMS).
      TIMER = 7;

      // The charging level has reached a predefined level. (Charging levels are outside the scope of rFMS).
      CHARGING_LEVEL = 8;
    }

    // The unknown event. Used when the event is EVENT_UNKNOWN.
    string unknown_event = 2;

    // Event detail.
    string detail = 3;
  }

  // Additonal information about the charging connection status.
  message ChargingConnectionStatusInfo {
    // The event that caused the charging connection status to be sent.
    ChargingConnectionState state = 1;

    // The unknown state. Used when the state is STATE_UNKNOWN.
    string unknown_state = 2;
  }

  // Information about an alarm.
  message AlarmInfo {
    // The type of alarm.
    Type type = 1;

    // The type of alarm.
    enum Type {
      // Default value. This value is not used.
      TYPE_UNSPECIFIED = 0;
      // The alarm type is unknown.
      TYPE_UNKNOWN = 1;
      // Theft alarm.
      THEFT = 2;
      // Fuel theft alarm.
      FUEL_THEFT = 3;
      // Fire alarm.
      FIRE = 4;
      // Panic alarm.
      PANIC = 5;
      // Cargo temperature alarm.
      CARGO_TEMPERATURE = 6;
    }

    // The unknown type. Used when the type is TYPE_UNKNOWN.
    string unknown_type = 2;

    // The state of the alarm.
    State state = 3;

    // State of an alarm.
    enum State {
      // Default value. This value is not used.
      STATE_UNSPECIFIED = 0;
      // The state is unknown.
      STATE_UNKNOWN = 1;
      // An error has occurred in the alarm system.
      STATE_ERROR = 2;
      // The alarm is armed.
      ARMED = 3;
      // The alarm is armed with errors.
      ARMED_WITH_ERROR = 4;
      // The alarm is disarmed.
      DISARMED = 5;
      // The alarm is triggered.
      TRIGGERED = 6;
      // The alarm is untriggered in an authorized way.
      UNTRIGGERED = 7;
    }

    // The unknown state. Used when the state is STATE_UNKNOWN.
    string unknown_state = 4;

    // OEM specific details.
    repeated string details = 5;
  }
}
