// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/rfms/v5/emission_level.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Well-known emission levels.
type EmissionLevel int32

const (
	// Default value. This value is not used.
	EmissionLevel_EMISSION_LEVEL_UNSPECIFIED EmissionLevel = 0
	// Unknown emission level.
	EmissionLevel_EMISSION_LEVEL_UNKNOWN EmissionLevel = 1
	// European Union, Heavy-Duty Truck and Bus Engines.
	EmissionLevel_EURO_III     EmissionLevel = 2
	EmissionLevel_EURO_III_EEV EmissionLevel = 3
	EmissionLevel_EURO_IV      EmissionLevel = 4
	EmissionLevel_EURO_V       EmissionLevel = 5
	EmissionLevel_EURO_VI      EmissionLevel = 6
	EmissionLevel_EURO_VII     EmissionLevel = 7
	// European Union, Nonroad Engines.
	EmissionLevel_EURO_STAGE_III EmissionLevel = 8
	EmissionLevel_EURO_STAGE_IV  EmissionLevel = 9
	EmissionLevel_EURO_STAGE_V   EmissionLevel = 10
	// United_States, Heavy-Duty Truck and Bus Engines.
	EmissionLevel_EPA_2004       EmissionLevel = 11
	EmissionLevel_EPA_2007       EmissionLevel = 12
	EmissionLevel_EPA_2010       EmissionLevel = 13
	EmissionLevel_EPA_2015_NOX10 EmissionLevel = 14
	EmissionLevel_EPA_2015_NOX05 EmissionLevel = 15
	EmissionLevel_EPA_2015_NOX02 EmissionLevel = 16
	// United_States, Nonroad Engines.
	EmissionLevel_EPA_TIER_2      EmissionLevel = 17
	EmissionLevel_EPA_TIER_3      EmissionLevel = 18
	EmissionLevel_EPA_TIER_4_2008 EmissionLevel = 19
	EmissionLevel_EPA_TIER_4_2013 EmissionLevel = 20
	// Brazil, Heavy-Duty Truck and Bus Engines.
	EmissionLevel_PROCONVE_P5 EmissionLevel = 21
	EmissionLevel_PROCONVE_P6 EmissionLevel = 22
	EmissionLevel_PROCONVE_P7 EmissionLevel = 23
	// Brazil, Nonroad Engines.
	EmissionLevel_PROCONVE_MARI EmissionLevel = 24
)

// Enum value maps for EmissionLevel.
var (
	EmissionLevel_name = map[int32]string{
		0:  "EMISSION_LEVEL_UNSPECIFIED",
		1:  "EMISSION_LEVEL_UNKNOWN",
		2:  "EURO_III",
		3:  "EURO_III_EEV",
		4:  "EURO_IV",
		5:  "EURO_V",
		6:  "EURO_VI",
		7:  "EURO_VII",
		8:  "EURO_STAGE_III",
		9:  "EURO_STAGE_IV",
		10: "EURO_STAGE_V",
		11: "EPA_2004",
		12: "EPA_2007",
		13: "EPA_2010",
		14: "EPA_2015_NOX10",
		15: "EPA_2015_NOX05",
		16: "EPA_2015_NOX02",
		17: "EPA_TIER_2",
		18: "EPA_TIER_3",
		19: "EPA_TIER_4_2008",
		20: "EPA_TIER_4_2013",
		21: "PROCONVE_P5",
		22: "PROCONVE_P6",
		23: "PROCONVE_P7",
		24: "PROCONVE_MARI",
	}
	EmissionLevel_value = map[string]int32{
		"EMISSION_LEVEL_UNSPECIFIED": 0,
		"EMISSION_LEVEL_UNKNOWN":     1,
		"EURO_III":                   2,
		"EURO_III_EEV":               3,
		"EURO_IV":                    4,
		"EURO_V":                     5,
		"EURO_VI":                    6,
		"EURO_VII":                   7,
		"EURO_STAGE_III":             8,
		"EURO_STAGE_IV":              9,
		"EURO_STAGE_V":               10,
		"EPA_2004":                   11,
		"EPA_2007":                   12,
		"EPA_2010":                   13,
		"EPA_2015_NOX10":             14,
		"EPA_2015_NOX05":             15,
		"EPA_2015_NOX02":             16,
		"EPA_TIER_2":                 17,
		"EPA_TIER_3":                 18,
		"EPA_TIER_4_2008":            19,
		"EPA_TIER_4_2013":            20,
		"PROCONVE_P5":                21,
		"PROCONVE_P6":                22,
		"PROCONVE_P7":                23,
		"PROCONVE_MARI":              24,
	}
)

func (x EmissionLevel) Enum() *EmissionLevel {
	p := new(EmissionLevel)
	*p = x
	return p
}

func (x EmissionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmissionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_rfms_v5_emission_level_proto_enumTypes[0].Descriptor()
}

func (EmissionLevel) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_rfms_v5_emission_level_proto_enumTypes[0]
}

func (x EmissionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_rfms_v5_emission_level_proto protoreflect.FileDescriptor

const file_wayplatform_connect_rfms_v5_emission_level_proto_rawDesc = "" +
	"\n" +
	"0wayplatform/connect/rfms/v5/emission_level.proto\x12\x13wayplatform.rfms.v5*\xce\x03\n" +
	"\rEmissionLevel\x12\x1e\n" +
	"\x1aEMISSION_LEVEL_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16EMISSION_LEVEL_UNKNOWN\x10\x01\x12\f\n" +
	"\bEURO_III\x10\x02\x12\x10\n" +
	"\fEURO_III_EEV\x10\x03\x12\v\n" +
	"\aEURO_IV\x10\x04\x12\n" +
	"\n" +
	"\x06EURO_V\x10\x05\x12\v\n" +
	"\aEURO_VI\x10\x06\x12\f\n" +
	"\bEURO_VII\x10\a\x12\x12\n" +
	"\x0eEURO_STAGE_III\x10\b\x12\x11\n" +
	"\rEURO_STAGE_IV\x10\t\x12\x10\n" +
	"\fEURO_STAGE_V\x10\n" +
	"\x12\f\n" +
	"\bEPA_2004\x10\v\x12\f\n" +
	"\bEPA_2007\x10\f\x12\f\n" +
	"\bEPA_2010\x10\r\x12\x12\n" +
	"\x0eEPA_2015_NOX10\x10\x0e\x12\x12\n" +
	"\x0eEPA_2015_NOX05\x10\x0f\x12\x12\n" +
	"\x0eEPA_2015_NOX02\x10\x10\x12\x0e\n" +
	"\n" +
	"EPA_TIER_2\x10\x11\x12\x0e\n" +
	"\n" +
	"EPA_TIER_3\x10\x12\x12\x13\n" +
	"\x0fEPA_TIER_4_2008\x10\x13\x12\x13\n" +
	"\x0fEPA_TIER_4_2013\x10\x14\x12\x0f\n" +
	"\vPROCONVE_P5\x10\x15\x12\x0f\n" +
	"\vPROCONVE_P6\x10\x16\x12\x0f\n" +
	"\vPROCONVE_P7\x10\x17\x12\x11\n" +
	"\rPROCONVE_MARI\x10\x18B\xec\x01\n" +
	"\x17com.wayplatform.rfms.v5B\x12EmissionLevelProtoP\x01ZOgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/connect/rfms/v5;rfmsv5\xa2\x02\x03WRX\xaa\x02\x13Wayplatform.Rfms.V5\xca\x02\x13Wayplatform\\Rfms\\V5\xe2\x02\x1fWayplatform\\Rfms\\V5\\GPBMetadata\xea\x02\x15Wayplatform::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_connect_rfms_v5_emission_level_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_rfms_v5_emission_level_proto_goTypes = []any{
	(EmissionLevel)(0), // 0: wayplatform.rfms.v5.EmissionLevel
}
var file_wayplatform_connect_rfms_v5_emission_level_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_rfms_v5_emission_level_proto_init() }
func file_wayplatform_connect_rfms_v5_emission_level_proto_init() {
	if File_wayplatform_connect_rfms_v5_emission_level_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_rfms_v5_emission_level_proto_rawDesc), len(file_wayplatform_connect_rfms_v5_emission_level_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_rfms_v5_emission_level_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_rfms_v5_emission_level_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_rfms_v5_emission_level_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_rfms_v5_emission_level_proto = out.File
	file_wayplatform_connect_rfms_v5_emission_level_proto_goTypes = nil
	file_wayplatform_connect_rfms_v5_emission_level_proto_depIdxs = nil
}
