// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/rfms/v5/vehicle_axle.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A vehicle axle.
type VehicleAxle struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Position    int32                  `protobuf:"varint,1,opt,name=position"`
	xxx_hidden_LoadKg      float64                `protobuf:"fixed64,2,opt,name=load_kg,json=loadKg"`
	xxx_hidden_Tires       *[]*VehicleAxle_Tire   `protobuf:"bytes,3,rep,name=tires"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VehicleAxle) Reset() {
	*x = VehicleAxle{}
	mi := &file_wayplatform_connect_rfms_v5_vehicle_axle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleAxle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAxle) ProtoMessage() {}

func (x *VehicleAxle) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_vehicle_axle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VehicleAxle) GetPosition() int32 {
	if x != nil {
		return x.xxx_hidden_Position
	}
	return 0
}

func (x *VehicleAxle) GetLoadKg() float64 {
	if x != nil {
		return x.xxx_hidden_LoadKg
	}
	return 0
}

func (x *VehicleAxle) GetTires() []*VehicleAxle_Tire {
	if x != nil {
		if x.xxx_hidden_Tires != nil {
			return *x.xxx_hidden_Tires
		}
	}
	return nil
}

func (x *VehicleAxle) SetPosition(v int32) {
	x.xxx_hidden_Position = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *VehicleAxle) SetLoadKg(v float64) {
	x.xxx_hidden_LoadKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *VehicleAxle) SetTires(v []*VehicleAxle_Tire) {
	x.xxx_hidden_Tires = &v
}

func (x *VehicleAxle) HasPosition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VehicleAxle) HasLoadKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VehicleAxle) ClearPosition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Position = 0
}

func (x *VehicleAxle) ClearLoadKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LoadKg = 0
}

type VehicleAxle_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The position of the axle.
	Position *int32
	// The static vertical load of the axle. (kg)
	LoadKg *float64
	// The tires on the axle.
	Tires []*VehicleAxle_Tire
}

func (b0 VehicleAxle_builder) Build() *VehicleAxle {
	m0 := &VehicleAxle{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Position != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Position = *b.Position
	}
	if b.LoadKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_LoadKg = *b.LoadKg
	}
	x.xxx_hidden_Tires = &b.Tires
	return m0
}

// A tire on an axle.
type VehicleAxle_Tire struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Position    int32                  `protobuf:"varint,1,opt,name=position"`
	xxx_hidden_PressureKpa float64                `protobuf:"fixed64,2,opt,name=pressure_kpa,json=pressureKpa"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VehicleAxle_Tire) Reset() {
	*x = VehicleAxle_Tire{}
	mi := &file_wayplatform_connect_rfms_v5_vehicle_axle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleAxle_Tire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAxle_Tire) ProtoMessage() {}

func (x *VehicleAxle_Tire) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_vehicle_axle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VehicleAxle_Tire) GetPosition() int32 {
	if x != nil {
		return x.xxx_hidden_Position
	}
	return 0
}

func (x *VehicleAxle_Tire) GetPressureKpa() float64 {
	if x != nil {
		return x.xxx_hidden_PressureKpa
	}
	return 0
}

func (x *VehicleAxle_Tire) SetPosition(v int32) {
	x.xxx_hidden_Position = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VehicleAxle_Tire) SetPressureKpa(v float64) {
	x.xxx_hidden_PressureKpa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VehicleAxle_Tire) HasPosition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VehicleAxle_Tire) HasPressureKpa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VehicleAxle_Tire) ClearPosition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Position = 0
}

func (x *VehicleAxle_Tire) ClearPressureKpa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PressureKpa = 0
}

type VehicleAxle_Tire_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Tire position (on the specified axle) from 1 to 15,
	// counting left to right when facing in the direction of
	// normal vehicle travel (forward).
	Position *int32
	// Tire pressure. (kPa)
	PressureKpa *float64
}

func (b0 VehicleAxle_Tire_builder) Build() *VehicleAxle_Tire {
	m0 := &VehicleAxle_Tire{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Position != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Position = *b.Position
	}
	if b.PressureKpa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_PressureKpa = *b.PressureKpa
	}
	return m0
}

var File_wayplatform_connect_rfms_v5_vehicle_axle_proto protoreflect.FileDescriptor

const file_wayplatform_connect_rfms_v5_vehicle_axle_proto_rawDesc = "" +
	"\n" +
	".wayplatform/connect/rfms/v5/vehicle_axle.proto\x12\x1bwayplatform.connect.rfms.v5\"\xce\x01\n" +
	"\vVehicleAxle\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\x05R\bposition\x12\x17\n" +
	"\aload_kg\x18\x02 \x01(\x01R\x06loadKg\x12C\n" +
	"\x05tires\x18\x03 \x03(\v2-.wayplatform.connect.rfms.v5.VehicleAxle.TireR\x05tires\x1aE\n" +
	"\x04Tire\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\x05R\bposition\x12!\n" +
	"\fpressure_kpa\x18\x02 \x01(\x01R\vpressureKpaB\x93\x02\n" +
	"\x1fcom.wayplatform.connect.rfms.v5B\x10VehicleAxleProtoP\x01ZOgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/connect/rfms/v5;rfmsv5\xa2\x02\x03WCR\xaa\x02\x1bWayplatform.Connect.Rfms.V5\xca\x02\x1bWayplatform\\Connect\\Rfms\\V5\xe2\x02'Wayplatform\\Connect\\Rfms\\V5\\GPBMetadata\xea\x02\x1eWayplatform::Connect::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_connect_rfms_v5_vehicle_axle_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_rfms_v5_vehicle_axle_proto_goTypes = []any{
	(*VehicleAxle)(nil),      // 0: wayplatform.connect.rfms.v5.VehicleAxle
	(*VehicleAxle_Tire)(nil), // 1: wayplatform.connect.rfms.v5.VehicleAxle.Tire
}
var file_wayplatform_connect_rfms_v5_vehicle_axle_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.rfms.v5.VehicleAxle.tires:type_name -> wayplatform.connect.rfms.v5.VehicleAxle.Tire
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_rfms_v5_vehicle_axle_proto_init() }
func file_wayplatform_connect_rfms_v5_vehicle_axle_proto_init() {
	if File_wayplatform_connect_rfms_v5_vehicle_axle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_rfms_v5_vehicle_axle_proto_rawDesc), len(file_wayplatform_connect_rfms_v5_vehicle_axle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_rfms_v5_vehicle_axle_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_rfms_v5_vehicle_axle_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_rfms_v5_vehicle_axle_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_rfms_v5_vehicle_axle_proto = out.File
	file_wayplatform_connect_rfms_v5_vehicle_axle_proto_goTypes = nil
	file_wayplatform_connect_rfms_v5_vehicle_axle_proto_depIdxs = nil
}
