// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/rfms/v5/accumulated_data.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Accumulated data for a vehicle.
//
// The data items in the accumulated data section contains
// values that start from zero.The OEM specifies if the values are reset
// only when the vehicle is produced, or also at owner change and/or service activation.
type AccumulatedData struct {
	state                                                         protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_WheelBasedSpeedOverZeroDurationS                   float64                                   `protobuf:"fixed64,1,opt,name=wheel_based_speed_over_zero_duration_s,json=wheelBasedSpeedOverZeroDurationS"`
	xxx_hidden_WheelBasedSpeedOverZeroFuelMl                      float64                                   `protobuf:"fixed64,2,opt,name=wheel_based_speed_over_zero_fuel_ml,json=wheelBasedSpeedOverZeroFuelMl"`
	xxx_hidden_WheelBasedSpeedOverZeroFuelGaseousKg               float64                                   `protobuf:"fixed64,3,opt,name=wheel_based_speed_over_zero_fuel_gaseous_kg,json=wheelBasedSpeedOverZeroFuelGaseousKg"`
	xxx_hidden_WheelBasedSpeedOverZeroElectricEnergyConsumptionWh float64                                   `protobuf:"fixed64,4,opt,name=wheel_based_speed_over_zero_electric_energy_consumption_wh,json=wheelBasedSpeedOverZeroElectricEnergyConsumptionWh"`
	xxx_hidden_WheelBasedSpeedZeroDurationS                       float64                                   `protobuf:"fixed64,5,opt,name=wheel_based_speed_zero_duration_s,json=wheelBasedSpeedZeroDurationS"`
	xxx_hidden_WheelBasedSpeedZeroDistanceM                       float64                                   `protobuf:"fixed64,6,opt,name=wheel_based_speed_zero_distance_m,json=wheelBasedSpeedZeroDistanceM"`
	xxx_hidden_WheelBasedSpeedZeroFuelMl                          float64                                   `protobuf:"fixed64,7,opt,name=wheel_based_speed_zero_fuel_ml,json=wheelBasedSpeedZeroFuelMl"`
	xxx_hidden_WheelBasedSpeedZeroFuelGaseousKg                   float64                                   `protobuf:"fixed64,8,opt,name=wheel_based_speed_zero_fuel_gaseous_kg,json=wheelBasedSpeedZeroFuelGaseousKg"`
	xxx_hidden_WheelBasedSpeedZeroElectricEnergyConsumptionWh     float64                                   `protobuf:"fixed64,9,opt,name=wheel_based_speed_zero_electric_energy_consumption_wh,json=wheelBasedSpeedZeroElectricEnergyConsumptionWh"`
	xxx_hidden_CruiseControlActiveDistanceM                       float64                                   `protobuf:"fixed64,10,opt,name=cruise_control_active_distance_m,json=cruiseControlActiveDistanceM"`
	xxx_hidden_CruiseControlActiveDurationS                       float64                                   `protobuf:"fixed64,11,opt,name=cruise_control_active_duration_s,json=cruiseControlActiveDurationS"`
	xxx_hidden_CruiseControlActiveFuelConsumptionMl               float64                                   `protobuf:"fixed64,12,opt,name=cruise_control_active_fuel_consumption_ml,json=cruiseControlActiveFuelConsumptionMl"`
	xxx_hidden_CruiseControlActiveFuelConsumptionGaseousKg        float64                                   `protobuf:"fixed64,13,opt,name=cruise_control_active_fuel_consumption_gaseous_kg,json=cruiseControlActiveFuelConsumptionGaseousKg"`
	xxx_hidden_CruiseControlActiveElectricEnergyConsumptionWh     float64                                   `protobuf:"fixed64,14,opt,name=cruise_control_active_electric_energy_consumption_wh,json=cruiseControlActiveElectricEnergyConsumptionWh"`
	xxx_hidden_AuxElectricEnergyConsumptionWh                     float64                                   `protobuf:"fixed64,15,opt,name=aux_electric_energy_consumption_wh,json=auxElectricEnergyConsumptionWh"`
	xxx_hidden_PtoActiveClass                                     *[]*AccumulatedData_LabelClass            `protobuf:"bytes,16,rep,name=pto_active_class,json=ptoActiveClass"`
	xxx_hidden_BrakePedalSpeedOverZeroCount                       int32                                     `protobuf:"varint,17,opt,name=brake_pedal_speed_over_zero_count,json=brakePedalSpeedOverZeroCount"`
	xxx_hidden_BrakePedalSpeedOverZeroDistanceM                   float64                                   `protobuf:"fixed64,18,opt,name=brake_pedal_speed_over_zero_distance_m,json=brakePedalSpeedOverZeroDistanceM"`
	xxx_hidden_AccelerationPedalPositionClassPercent              *[]*AccumulatedData_FromToClass           `protobuf:"bytes,19,rep,name=acceleration_pedal_position_class_percent,json=accelerationPedalPositionClassPercent"`
	xxx_hidden_BrakePedalPositionClassPercent                     *[]*AccumulatedData_FromToClass           `protobuf:"bytes,20,rep,name=brake_pedal_position_class_percent,json=brakePedalPositionClassPercent"`
	xxx_hidden_AccelerationClassMps2                              *[]*AccumulatedData_FromToClass           `protobuf:"bytes,21,rep,name=acceleration_class_mps2,json=accelerationClassMps2"`
	xxx_hidden_HighAccelerationClassMps2                          *[]*AccumulatedData_FromToClass           `protobuf:"bytes,22,rep,name=high_acceleration_class_mps2,json=highAccelerationClassMps2"`
	xxx_hidden_RetarderTorqueClassPercent                         *[]*AccumulatedData_FromToClass           `protobuf:"bytes,23,rep,name=retarder_torque_class_percent,json=retarderTorqueClassPercent"`
	xxx_hidden_DrivingWithoutTorqueClass                          *[]*AccumulatedData_LabelClass            `protobuf:"bytes,24,rep,name=driving_without_torque_class,json=drivingWithoutTorqueClass"`
	xxx_hidden_EngineTorqueClassPercent                           *[]*AccumulatedData_FromToClassCombustion `protobuf:"bytes,25,rep,name=engine_torque_class_percent,json=engineTorqueClassPercent"`
	xxx_hidden_ElectricMotorTorqueClassPercent                    *[]*AccumulatedData_FromToClassElectrical `protobuf:"bytes,26,rep,name=electric_motor_torque_class_percent,json=electricMotorTorqueClassPercent"`
	xxx_hidden_EngineTorqueAtCurrentSpeedClassPercent             *[]*AccumulatedData_FromToClassCombustion `protobuf:"bytes,27,rep,name=engine_torque_at_current_speed_class_percent,json=engineTorqueAtCurrentSpeedClassPercent"`
	xxx_hidden_ElectricMotorTorqueAtCurrentSpeedClassPercent      *[]*AccumulatedData_FromToClassElectrical `protobuf:"bytes,28,rep,name=electric_motor_torque_at_current_speed_class_percent,json=electricMotorTorqueAtCurrentSpeedClassPercent"`
	xxx_hidden_VehicleSpeedClassKmh                               *[]*AccumulatedData_FromToClass           `protobuf:"bytes,29,rep,name=vehicle_speed_class_kmh,json=vehicleSpeedClassKmh"`
	xxx_hidden_EngineSpeedClassRpm                                *[]*AccumulatedData_FromToClass           `protobuf:"bytes,30,rep,name=engine_speed_class_rpm,json=engineSpeedClassRpm"`
	xxx_hidden_AccelerationDuringBrakeClassMps2                   *[]*AccumulatedData_FromToClass           `protobuf:"bytes,31,rep,name=acceleration_during_brake_class_mps2,json=accelerationDuringBrakeClassMps2"`
	xxx_hidden_SelectedGearClass                                  *[]*AccumulatedData_LabelClass            `protobuf:"bytes,32,rep,name=selected_gear_class,json=selectedGearClass"`
	xxx_hidden_CurrentGearClass                                   *[]*AccumulatedData_LabelClass            `protobuf:"bytes,33,rep,name=current_gear_class,json=currentGearClass"`
	xxx_hidden_ChairliftCount                                     int32                                     `protobuf:"varint,34,opt,name=chairlift_count,json=chairliftCount"`
	xxx_hidden_StopRequestCount                                   int32                                     `protobuf:"varint,35,opt,name=stop_request_count,json=stopRequestCount"`
	xxx_hidden_KneelingCount                                      int32                                     `protobuf:"varint,36,opt,name=kneeling_count,json=kneelingCount"`
	xxx_hidden_PramRequestCount                                   int32                                     `protobuf:"varint,37,opt,name=pram_request_count,json=pramRequestCount"`
	xxx_hidden_ElectricPowerRecuperationClassKw                   *[]*AccumulatedData_FromToClassElectrical `protobuf:"bytes,38,rep,name=electric_power_recuperation_class_kw,json=electricPowerRecuperationClassKw"`
	XXX_raceDetectHookData                                        protoimpl.RaceDetectHookData
	XXX_presence                                                  [2]uint32
	unknownFields                                                 protoimpl.UnknownFields
	sizeCache                                                     protoimpl.SizeCache
}

func (x *AccumulatedData) Reset() {
	*x = AccumulatedData{}
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccumulatedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumulatedData) ProtoMessage() {}

func (x *AccumulatedData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccumulatedData) GetWheelBasedSpeedOverZeroDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedOverZeroDurationS
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedOverZeroFuelMl() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedOverZeroFuelMl
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedOverZeroFuelGaseousKg() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedOverZeroFuelGaseousKg
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedOverZeroElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedOverZeroElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedZeroDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedZeroDurationS
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedZeroDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedZeroDistanceM
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedZeroFuelMl() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedZeroFuelMl
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedZeroFuelGaseousKg() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedZeroFuelGaseousKg
	}
	return 0
}

func (x *AccumulatedData) GetWheelBasedSpeedZeroElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedZeroElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData) GetCruiseControlActiveDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_CruiseControlActiveDistanceM
	}
	return 0
}

func (x *AccumulatedData) GetCruiseControlActiveDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_CruiseControlActiveDurationS
	}
	return 0
}

func (x *AccumulatedData) GetCruiseControlActiveFuelConsumptionMl() float64 {
	if x != nil {
		return x.xxx_hidden_CruiseControlActiveFuelConsumptionMl
	}
	return 0
}

func (x *AccumulatedData) GetCruiseControlActiveFuelConsumptionGaseousKg() float64 {
	if x != nil {
		return x.xxx_hidden_CruiseControlActiveFuelConsumptionGaseousKg
	}
	return 0
}

func (x *AccumulatedData) GetCruiseControlActiveElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_CruiseControlActiveElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData) GetAuxElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_AuxElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData) GetPtoActiveClass() []*AccumulatedData_LabelClass {
	if x != nil {
		if x.xxx_hidden_PtoActiveClass != nil {
			return *x.xxx_hidden_PtoActiveClass
		}
	}
	return nil
}

func (x *AccumulatedData) GetBrakePedalSpeedOverZeroCount() int32 {
	if x != nil {
		return x.xxx_hidden_BrakePedalSpeedOverZeroCount
	}
	return 0
}

func (x *AccumulatedData) GetBrakePedalSpeedOverZeroDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_BrakePedalSpeedOverZeroDistanceM
	}
	return 0
}

func (x *AccumulatedData) GetAccelerationPedalPositionClassPercent() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_AccelerationPedalPositionClassPercent != nil {
			return *x.xxx_hidden_AccelerationPedalPositionClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetBrakePedalPositionClassPercent() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_BrakePedalPositionClassPercent != nil {
			return *x.xxx_hidden_BrakePedalPositionClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetAccelerationClassMps2() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_AccelerationClassMps2 != nil {
			return *x.xxx_hidden_AccelerationClassMps2
		}
	}
	return nil
}

func (x *AccumulatedData) GetHighAccelerationClassMps2() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_HighAccelerationClassMps2 != nil {
			return *x.xxx_hidden_HighAccelerationClassMps2
		}
	}
	return nil
}

func (x *AccumulatedData) GetRetarderTorqueClassPercent() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_RetarderTorqueClassPercent != nil {
			return *x.xxx_hidden_RetarderTorqueClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetDrivingWithoutTorqueClass() []*AccumulatedData_LabelClass {
	if x != nil {
		if x.xxx_hidden_DrivingWithoutTorqueClass != nil {
			return *x.xxx_hidden_DrivingWithoutTorqueClass
		}
	}
	return nil
}

func (x *AccumulatedData) GetEngineTorqueClassPercent() []*AccumulatedData_FromToClassCombustion {
	if x != nil {
		if x.xxx_hidden_EngineTorqueClassPercent != nil {
			return *x.xxx_hidden_EngineTorqueClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetElectricMotorTorqueClassPercent() []*AccumulatedData_FromToClassElectrical {
	if x != nil {
		if x.xxx_hidden_ElectricMotorTorqueClassPercent != nil {
			return *x.xxx_hidden_ElectricMotorTorqueClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetEngineTorqueAtCurrentSpeedClassPercent() []*AccumulatedData_FromToClassCombustion {
	if x != nil {
		if x.xxx_hidden_EngineTorqueAtCurrentSpeedClassPercent != nil {
			return *x.xxx_hidden_EngineTorqueAtCurrentSpeedClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetElectricMotorTorqueAtCurrentSpeedClassPercent() []*AccumulatedData_FromToClassElectrical {
	if x != nil {
		if x.xxx_hidden_ElectricMotorTorqueAtCurrentSpeedClassPercent != nil {
			return *x.xxx_hidden_ElectricMotorTorqueAtCurrentSpeedClassPercent
		}
	}
	return nil
}

func (x *AccumulatedData) GetVehicleSpeedClassKmh() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_VehicleSpeedClassKmh != nil {
			return *x.xxx_hidden_VehicleSpeedClassKmh
		}
	}
	return nil
}

func (x *AccumulatedData) GetEngineSpeedClassRpm() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_EngineSpeedClassRpm != nil {
			return *x.xxx_hidden_EngineSpeedClassRpm
		}
	}
	return nil
}

func (x *AccumulatedData) GetAccelerationDuringBrakeClassMps2() []*AccumulatedData_FromToClass {
	if x != nil {
		if x.xxx_hidden_AccelerationDuringBrakeClassMps2 != nil {
			return *x.xxx_hidden_AccelerationDuringBrakeClassMps2
		}
	}
	return nil
}

func (x *AccumulatedData) GetSelectedGearClass() []*AccumulatedData_LabelClass {
	if x != nil {
		if x.xxx_hidden_SelectedGearClass != nil {
			return *x.xxx_hidden_SelectedGearClass
		}
	}
	return nil
}

func (x *AccumulatedData) GetCurrentGearClass() []*AccumulatedData_LabelClass {
	if x != nil {
		if x.xxx_hidden_CurrentGearClass != nil {
			return *x.xxx_hidden_CurrentGearClass
		}
	}
	return nil
}

func (x *AccumulatedData) GetChairliftCount() int32 {
	if x != nil {
		return x.xxx_hidden_ChairliftCount
	}
	return 0
}

func (x *AccumulatedData) GetStopRequestCount() int32 {
	if x != nil {
		return x.xxx_hidden_StopRequestCount
	}
	return 0
}

func (x *AccumulatedData) GetKneelingCount() int32 {
	if x != nil {
		return x.xxx_hidden_KneelingCount
	}
	return 0
}

func (x *AccumulatedData) GetPramRequestCount() int32 {
	if x != nil {
		return x.xxx_hidden_PramRequestCount
	}
	return 0
}

func (x *AccumulatedData) GetElectricPowerRecuperationClassKw() []*AccumulatedData_FromToClassElectrical {
	if x != nil {
		if x.xxx_hidden_ElectricPowerRecuperationClassKw != nil {
			return *x.xxx_hidden_ElectricPowerRecuperationClassKw
		}
	}
	return nil
}

func (x *AccumulatedData) SetWheelBasedSpeedOverZeroDurationS(v float64) {
	x.xxx_hidden_WheelBasedSpeedOverZeroDurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedOverZeroFuelMl(v float64) {
	x.xxx_hidden_WheelBasedSpeedOverZeroFuelMl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedOverZeroFuelGaseousKg(v float64) {
	x.xxx_hidden_WheelBasedSpeedOverZeroFuelGaseousKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedOverZeroElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_WheelBasedSpeedOverZeroElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedZeroDurationS(v float64) {
	x.xxx_hidden_WheelBasedSpeedZeroDurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedZeroDistanceM(v float64) {
	x.xxx_hidden_WheelBasedSpeedZeroDistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedZeroFuelMl(v float64) {
	x.xxx_hidden_WheelBasedSpeedZeroFuelMl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedZeroFuelGaseousKg(v float64) {
	x.xxx_hidden_WheelBasedSpeedZeroFuelGaseousKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 38)
}

func (x *AccumulatedData) SetWheelBasedSpeedZeroElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_WheelBasedSpeedZeroElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 38)
}

func (x *AccumulatedData) SetCruiseControlActiveDistanceM(v float64) {
	x.xxx_hidden_CruiseControlActiveDistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 38)
}

func (x *AccumulatedData) SetCruiseControlActiveDurationS(v float64) {
	x.xxx_hidden_CruiseControlActiveDurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 38)
}

func (x *AccumulatedData) SetCruiseControlActiveFuelConsumptionMl(v float64) {
	x.xxx_hidden_CruiseControlActiveFuelConsumptionMl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 38)
}

func (x *AccumulatedData) SetCruiseControlActiveFuelConsumptionGaseousKg(v float64) {
	x.xxx_hidden_CruiseControlActiveFuelConsumptionGaseousKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 38)
}

func (x *AccumulatedData) SetCruiseControlActiveElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_CruiseControlActiveElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 38)
}

func (x *AccumulatedData) SetAuxElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_AuxElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 38)
}

func (x *AccumulatedData) SetPtoActiveClass(v []*AccumulatedData_LabelClass) {
	x.xxx_hidden_PtoActiveClass = &v
}

func (x *AccumulatedData) SetBrakePedalSpeedOverZeroCount(v int32) {
	x.xxx_hidden_BrakePedalSpeedOverZeroCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 38)
}

func (x *AccumulatedData) SetBrakePedalSpeedOverZeroDistanceM(v float64) {
	x.xxx_hidden_BrakePedalSpeedOverZeroDistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 38)
}

func (x *AccumulatedData) SetAccelerationPedalPositionClassPercent(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_AccelerationPedalPositionClassPercent = &v
}

func (x *AccumulatedData) SetBrakePedalPositionClassPercent(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_BrakePedalPositionClassPercent = &v
}

func (x *AccumulatedData) SetAccelerationClassMps2(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_AccelerationClassMps2 = &v
}

func (x *AccumulatedData) SetHighAccelerationClassMps2(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_HighAccelerationClassMps2 = &v
}

func (x *AccumulatedData) SetRetarderTorqueClassPercent(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_RetarderTorqueClassPercent = &v
}

func (x *AccumulatedData) SetDrivingWithoutTorqueClass(v []*AccumulatedData_LabelClass) {
	x.xxx_hidden_DrivingWithoutTorqueClass = &v
}

func (x *AccumulatedData) SetEngineTorqueClassPercent(v []*AccumulatedData_FromToClassCombustion) {
	x.xxx_hidden_EngineTorqueClassPercent = &v
}

func (x *AccumulatedData) SetElectricMotorTorqueClassPercent(v []*AccumulatedData_FromToClassElectrical) {
	x.xxx_hidden_ElectricMotorTorqueClassPercent = &v
}

func (x *AccumulatedData) SetEngineTorqueAtCurrentSpeedClassPercent(v []*AccumulatedData_FromToClassCombustion) {
	x.xxx_hidden_EngineTorqueAtCurrentSpeedClassPercent = &v
}

func (x *AccumulatedData) SetElectricMotorTorqueAtCurrentSpeedClassPercent(v []*AccumulatedData_FromToClassElectrical) {
	x.xxx_hidden_ElectricMotorTorqueAtCurrentSpeedClassPercent = &v
}

func (x *AccumulatedData) SetVehicleSpeedClassKmh(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_VehicleSpeedClassKmh = &v
}

func (x *AccumulatedData) SetEngineSpeedClassRpm(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_EngineSpeedClassRpm = &v
}

func (x *AccumulatedData) SetAccelerationDuringBrakeClassMps2(v []*AccumulatedData_FromToClass) {
	x.xxx_hidden_AccelerationDuringBrakeClassMps2 = &v
}

func (x *AccumulatedData) SetSelectedGearClass(v []*AccumulatedData_LabelClass) {
	x.xxx_hidden_SelectedGearClass = &v
}

func (x *AccumulatedData) SetCurrentGearClass(v []*AccumulatedData_LabelClass) {
	x.xxx_hidden_CurrentGearClass = &v
}

func (x *AccumulatedData) SetChairliftCount(v int32) {
	x.xxx_hidden_ChairliftCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 33, 38)
}

func (x *AccumulatedData) SetStopRequestCount(v int32) {
	x.xxx_hidden_StopRequestCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 34, 38)
}

func (x *AccumulatedData) SetKneelingCount(v int32) {
	x.xxx_hidden_KneelingCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 35, 38)
}

func (x *AccumulatedData) SetPramRequestCount(v int32) {
	x.xxx_hidden_PramRequestCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 36, 38)
}

func (x *AccumulatedData) SetElectricPowerRecuperationClassKw(v []*AccumulatedData_FromToClassElectrical) {
	x.xxx_hidden_ElectricPowerRecuperationClassKw = &v
}

func (x *AccumulatedData) HasWheelBasedSpeedOverZeroDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccumulatedData) HasWheelBasedSpeedOverZeroFuelMl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AccumulatedData) HasWheelBasedSpeedOverZeroFuelGaseousKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AccumulatedData) HasWheelBasedSpeedOverZeroElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AccumulatedData) HasWheelBasedSpeedZeroDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AccumulatedData) HasWheelBasedSpeedZeroDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AccumulatedData) HasWheelBasedSpeedZeroFuelMl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *AccumulatedData) HasWheelBasedSpeedZeroFuelGaseousKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *AccumulatedData) HasWheelBasedSpeedZeroElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *AccumulatedData) HasCruiseControlActiveDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *AccumulatedData) HasCruiseControlActiveDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *AccumulatedData) HasCruiseControlActiveFuelConsumptionMl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *AccumulatedData) HasCruiseControlActiveFuelConsumptionGaseousKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *AccumulatedData) HasCruiseControlActiveElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *AccumulatedData) HasAuxElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *AccumulatedData) HasBrakePedalSpeedOverZeroCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *AccumulatedData) HasBrakePedalSpeedOverZeroDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *AccumulatedData) HasChairliftCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 33)
}

func (x *AccumulatedData) HasStopRequestCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 34)
}

func (x *AccumulatedData) HasKneelingCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 35)
}

func (x *AccumulatedData) HasPramRequestCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 36)
}

func (x *AccumulatedData) ClearWheelBasedSpeedOverZeroDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_WheelBasedSpeedOverZeroDurationS = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedOverZeroFuelMl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_WheelBasedSpeedOverZeroFuelMl = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedOverZeroFuelGaseousKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_WheelBasedSpeedOverZeroFuelGaseousKg = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedOverZeroElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_WheelBasedSpeedOverZeroElectricEnergyConsumptionWh = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedZeroDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_WheelBasedSpeedZeroDurationS = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedZeroDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_WheelBasedSpeedZeroDistanceM = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedZeroFuelMl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_WheelBasedSpeedZeroFuelMl = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedZeroFuelGaseousKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_WheelBasedSpeedZeroFuelGaseousKg = 0
}

func (x *AccumulatedData) ClearWheelBasedSpeedZeroElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_WheelBasedSpeedZeroElectricEnergyConsumptionWh = 0
}

func (x *AccumulatedData) ClearCruiseControlActiveDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_CruiseControlActiveDistanceM = 0
}

func (x *AccumulatedData) ClearCruiseControlActiveDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_CruiseControlActiveDurationS = 0
}

func (x *AccumulatedData) ClearCruiseControlActiveFuelConsumptionMl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_CruiseControlActiveFuelConsumptionMl = 0
}

func (x *AccumulatedData) ClearCruiseControlActiveFuelConsumptionGaseousKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_CruiseControlActiveFuelConsumptionGaseousKg = 0
}

func (x *AccumulatedData) ClearCruiseControlActiveElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_CruiseControlActiveElectricEnergyConsumptionWh = 0
}

func (x *AccumulatedData) ClearAuxElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_AuxElectricEnergyConsumptionWh = 0
}

func (x *AccumulatedData) ClearBrakePedalSpeedOverZeroCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_BrakePedalSpeedOverZeroCount = 0
}

func (x *AccumulatedData) ClearBrakePedalSpeedOverZeroDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_BrakePedalSpeedOverZeroDistanceM = 0
}

func (x *AccumulatedData) ClearChairliftCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 33)
	x.xxx_hidden_ChairliftCount = 0
}

func (x *AccumulatedData) ClearStopRequestCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 34)
	x.xxx_hidden_StopRequestCount = 0
}

func (x *AccumulatedData) ClearKneelingCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 35)
	x.xxx_hidden_KneelingCount = 0
}

func (x *AccumulatedData) ClearPramRequestCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 36)
	x.xxx_hidden_PramRequestCount = 0
}

type AccumulatedData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The duration the vehicle speed has been over zero. (s)
	WheelBasedSpeedOverZeroDurationS *float64
	// The fuel the vehicle has consumed while driven with speed over zero. (ml)
	// Engine on (RPM>0) and no PTO active.
	WheelBasedSpeedOverZeroFuelMl *float64
	// The fuel the vehicle has consumed while driven with speed over zero. (kg)
	// Engine on (RPM>0) and no PTO active.
	WheelBasedSpeedOverZeroFuelGaseousKg *float64
	// The electric energy the vehicle has consumed while driven with speed over zero. (Wh)
	WheelBasedSpeedOverZeroElectricEnergyConsumptionWh *float64
	// The duration the vehicle speed has been zero. (s)
	// Engine on (RPM>0 or electic motor in crank mode) and no PTO active
	WheelBasedSpeedZeroDurationS *float64
	// The distance the vehicle has been driven with speed zero. (m)
	WheelBasedSpeedZeroDistanceM *float64
	// The fuel the vehicle has consumed while driven with speed zero. (ml)
	// Engine on (RPM>0) and no PTO active.
	WheelBasedSpeedZeroFuelMl *float64
	// The fuel the vehicle has consumed while driven with speed zero. (ml)
	// Engine on (RPM>0) and no PTO active.
	WheelBasedSpeedZeroFuelGaseousKg *float64
	// The electric energy the vehicle has consumed while driven with speed zero. (Wh)
	WheelBasedSpeedZeroElectricEnergyConsumptionWh *float64
	// The distance the vehicle has been driven with cruise control active. (m)
	CruiseControlActiveDistanceM *float64
	// The duration the vehicle has been driven with cruise control active. (s)
	CruiseControlActiveDurationS *float64
	// The fuel the vehicle has consumed while driven with cruise control active. (ml)
	CruiseControlActiveFuelConsumptionMl *float64
	// The fuel the vehicle has consumed while driven with cruise control active. (kg)
	CruiseControlActiveFuelConsumptionGaseousKg *float64
	// The electric energy the vehicle has consumed while driven with cruise control active. (Wh)
	CruiseControlActiveElectricEnergyConsumptionWh *float64
	// The electric energy the auxiliary systems have consumed. (Wh)
	AuxElectricEnergyConsumptionWh *float64
	PtoActiveClass                 []*AccumulatedData_LabelClass
	// The total number of times the brake pedal has been used while
	BrakePedalSpeedOverZeroCount *int32
	// The total distance the vehicle has driven where the brake pedal has been used. (m)
	BrakePedalSpeedOverZeroDistanceM *float64
	// Histogram of stats for acceleration pedal position intervals. (percent)
	//
	// Default:
	//
	//	Min interval: [0%, 20%)
	//	Max interval: [80%, 100%]
	//	Bucket count: 5
	//	Bucket width: 20%
	AccelerationPedalPositionClassPercent []*AccumulatedData_FromToClass
	// Histogram of stats for brake pedal position intervals. (percent)
	//
	// Default:
	//
	//	Min interval: [0%, 20%)
	//	Max interval: [80%, 100%]
	//	Bucket count: 5
	//	Bucket width: 20%
	BrakePedalPositionClassPercent []*AccumulatedData_FromToClass
	// Histogram of stats for acceleration intervals. (m/s2)
	//
	// Default:
	//
	//	Min interval: (...,  -1.1)
	//	Mid interval: (-0.1, 0.1)
	//	Max interval: [1.1,  ...)
	//	Bucket count: 11
	//	Bucket width: 0.2
	AccelerationClassMps2 []*AccumulatedData_FromToClass
	// Histogram of stats for acceleration intervals. (m/s2)
	//
	// Default:
	//
	//	Min interval: (...,  -1.1)
	//	Mid interval: (-0.1, 0.1)
	//	Max interval: [1.1,  ...)
	//	Bucket count: 11
	//	Bucket width: 0.2
	HighAccelerationClassMps2 []*AccumulatedData_FromToClass
	// Histogram of stats by retarder usage. (%)
	//
	// Default:
	//
	//	Min interval: (0%, 20%)
	//	Max interval: [80%, 100%]
	//	Bucket count: 5
	//	Bucket width: 20%
	RetarderTorqueClassPercent []*AccumulatedData_FromToClass
	// Histogram of stats when driving without torque, with gear (clutch is engaged).
	//
	// Labels:
	//
	//	DRIVING_WITHOUT_TORQUE
	DrivingWithoutTorqueClass []*AccumulatedData_LabelClass
	// Histogram of stats by EEC1 value (Actual Engine-Percent Torque). (%)
	//
	// Default:
	//
	//	Min interval: [0%, 10%)
	//	Max interval: [90%, 100%]
	//	Bucket count: 10
	//	Bucket width: 10%
	EngineTorqueClassPercent []*AccumulatedData_FromToClassCombustion
	// Histogram of stats by electric engine torque (Actual Engine-Percent Torque). (%)
	//
	// Default:
	//
	//	Min interval: [0%, 10%)
	//	Max interval: [90%, 100%]
	//	Bucket count: 10
	//	Bucket width: 10%
	ElectricMotorTorqueClassPercent []*AccumulatedData_FromToClassElectrical
	// Histogram of stats based on EEC2 value (Engine Percent Load At Current Speed). (%)
	//
	// Default:
	//
	//	Min interval: [0%, 10%)
	//	Max interval: [90%, 100%]
	//	Bucket count: 10
	//	Bucket width: 10%
	EngineTorqueAtCurrentSpeedClassPercent []*AccumulatedData_FromToClassCombustion
	// Histogram of stats based on electric motor EEC2 value. (Engine Percent Load At Current Speed).
	//
	// Default:
	//
	//	Min interval: [0%, 10%)
	//	Max interval: [90%, 100%]
	//	Bucket count: 10
	//	Bucket width: 10%
	ElectricMotorTorqueAtCurrentSpeedClassPercent []*AccumulatedData_FromToClassElectrical
	// Histogram of stats based on vehicle speed. (km/h)
	// Engine on (RPM>0 or electric motor in crank mode).
	//
	// Default:
	//
	//	Min interval: [0km/h, 4km/h)
	//	Max interval: [156km/h, ...)
	//	Bucket count: 40
	//	Bucket width: 4km/h
	VehicleSpeedClassKmh []*AccumulatedData_FromToClass
	// Histogram of stats based on the RPM of the combustion engine. (rpm)
	// Only mandatory if the vehicle has a combustion engine for propulsion.
	//
	// Default:
	//
	//	Min interval: [0rpm, 400pm)
	//	Max interval: [3600rpm, ...)
	//	Bucket count: 10
	//	Bucket width: 400rpm
	EngineSpeedClassRpm []*AccumulatedData_FromToClass
	// Histogram of stats based on the acceleration during braking. (m/s2)
	//
	// Default:
	//
	//	Min interval: [..., -1.1m/s2)
	//	Mid interval: (-0.1m/s2, 0.1m/s2)
	//	Max interval: [1.1m/s2, ...)
	//	Bucket count: 13
	//	Bucket width: 0.2m/s2
	AccelerationDuringBrakeClassMps2 []*AccumulatedData_FromToClass
	// Histogram of stats based on the currently selected gear.
	// On class per gear. Park is also a gear.
	// Gear is formatted according to SPN 524 and supplied as a decimal value.
	//
	// Example:
	//
	//	0 = Neutral
	//	1 = 1st gear
	//	2 = 2nd gear
	//
	// This is mainly used for buses.
	SelectedGearClass []*AccumulatedData_LabelClass
	// Histogram of stats based on the currently used gear.
	// On class per gear. Park is also a gear.
	// Gear is formatted according to SPN 524 and supplied as a decimal value.
	//
	// Example:
	//
	//	0 = Neutral
	//	1 = 1st gear
	//	2 = 2nd gear
	//
	// This is mainly used for buses.
	CurrentGearClass []*AccumulatedData_LabelClass
	// The total number of times the chairlift has been outside the bus.
	// This is mainly used for buses.
	ChairliftCount *int32
	// The total number of stop requests made.
	// This is mainly used for buses.
	StopRequestCount *int32
	// The total number of times the bus has knelt.
	// This is mainly used for buses.
	KneelingCount *int32
	// The total number of pram requests made.
	// This is mainly used for buses.
	PramRequestCount *int32
	// Classes refer to the recuperated electric power. (kw)
	// Minimum 11 classes.
	// [0, 100) [100, 200) [200, 300) ... [900, 1000), [1000, ...]
	ElectricPowerRecuperationClassKw []*AccumulatedData_FromToClassElectrical
}

func (b0 AccumulatedData_builder) Build() *AccumulatedData {
	m0 := &AccumulatedData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.WheelBasedSpeedOverZeroDurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 38)
		x.xxx_hidden_WheelBasedSpeedOverZeroDurationS = *b.WheelBasedSpeedOverZeroDurationS
	}
	if b.WheelBasedSpeedOverZeroFuelMl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 38)
		x.xxx_hidden_WheelBasedSpeedOverZeroFuelMl = *b.WheelBasedSpeedOverZeroFuelMl
	}
	if b.WheelBasedSpeedOverZeroFuelGaseousKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 38)
		x.xxx_hidden_WheelBasedSpeedOverZeroFuelGaseousKg = *b.WheelBasedSpeedOverZeroFuelGaseousKg
	}
	if b.WheelBasedSpeedOverZeroElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 38)
		x.xxx_hidden_WheelBasedSpeedOverZeroElectricEnergyConsumptionWh = *b.WheelBasedSpeedOverZeroElectricEnergyConsumptionWh
	}
	if b.WheelBasedSpeedZeroDurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 38)
		x.xxx_hidden_WheelBasedSpeedZeroDurationS = *b.WheelBasedSpeedZeroDurationS
	}
	if b.WheelBasedSpeedZeroDistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 38)
		x.xxx_hidden_WheelBasedSpeedZeroDistanceM = *b.WheelBasedSpeedZeroDistanceM
	}
	if b.WheelBasedSpeedZeroFuelMl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 38)
		x.xxx_hidden_WheelBasedSpeedZeroFuelMl = *b.WheelBasedSpeedZeroFuelMl
	}
	if b.WheelBasedSpeedZeroFuelGaseousKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 38)
		x.xxx_hidden_WheelBasedSpeedZeroFuelGaseousKg = *b.WheelBasedSpeedZeroFuelGaseousKg
	}
	if b.WheelBasedSpeedZeroElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 38)
		x.xxx_hidden_WheelBasedSpeedZeroElectricEnergyConsumptionWh = *b.WheelBasedSpeedZeroElectricEnergyConsumptionWh
	}
	if b.CruiseControlActiveDistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 38)
		x.xxx_hidden_CruiseControlActiveDistanceM = *b.CruiseControlActiveDistanceM
	}
	if b.CruiseControlActiveDurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 38)
		x.xxx_hidden_CruiseControlActiveDurationS = *b.CruiseControlActiveDurationS
	}
	if b.CruiseControlActiveFuelConsumptionMl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 38)
		x.xxx_hidden_CruiseControlActiveFuelConsumptionMl = *b.CruiseControlActiveFuelConsumptionMl
	}
	if b.CruiseControlActiveFuelConsumptionGaseousKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 38)
		x.xxx_hidden_CruiseControlActiveFuelConsumptionGaseousKg = *b.CruiseControlActiveFuelConsumptionGaseousKg
	}
	if b.CruiseControlActiveElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 38)
		x.xxx_hidden_CruiseControlActiveElectricEnergyConsumptionWh = *b.CruiseControlActiveElectricEnergyConsumptionWh
	}
	if b.AuxElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 38)
		x.xxx_hidden_AuxElectricEnergyConsumptionWh = *b.AuxElectricEnergyConsumptionWh
	}
	x.xxx_hidden_PtoActiveClass = &b.PtoActiveClass
	if b.BrakePedalSpeedOverZeroCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 38)
		x.xxx_hidden_BrakePedalSpeedOverZeroCount = *b.BrakePedalSpeedOverZeroCount
	}
	if b.BrakePedalSpeedOverZeroDistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 38)
		x.xxx_hidden_BrakePedalSpeedOverZeroDistanceM = *b.BrakePedalSpeedOverZeroDistanceM
	}
	x.xxx_hidden_AccelerationPedalPositionClassPercent = &b.AccelerationPedalPositionClassPercent
	x.xxx_hidden_BrakePedalPositionClassPercent = &b.BrakePedalPositionClassPercent
	x.xxx_hidden_AccelerationClassMps2 = &b.AccelerationClassMps2
	x.xxx_hidden_HighAccelerationClassMps2 = &b.HighAccelerationClassMps2
	x.xxx_hidden_RetarderTorqueClassPercent = &b.RetarderTorqueClassPercent
	x.xxx_hidden_DrivingWithoutTorqueClass = &b.DrivingWithoutTorqueClass
	x.xxx_hidden_EngineTorqueClassPercent = &b.EngineTorqueClassPercent
	x.xxx_hidden_ElectricMotorTorqueClassPercent = &b.ElectricMotorTorqueClassPercent
	x.xxx_hidden_EngineTorqueAtCurrentSpeedClassPercent = &b.EngineTorqueAtCurrentSpeedClassPercent
	x.xxx_hidden_ElectricMotorTorqueAtCurrentSpeedClassPercent = &b.ElectricMotorTorqueAtCurrentSpeedClassPercent
	x.xxx_hidden_VehicleSpeedClassKmh = &b.VehicleSpeedClassKmh
	x.xxx_hidden_EngineSpeedClassRpm = &b.EngineSpeedClassRpm
	x.xxx_hidden_AccelerationDuringBrakeClassMps2 = &b.AccelerationDuringBrakeClassMps2
	x.xxx_hidden_SelectedGearClass = &b.SelectedGearClass
	x.xxx_hidden_CurrentGearClass = &b.CurrentGearClass
	if b.ChairliftCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 33, 38)
		x.xxx_hidden_ChairliftCount = *b.ChairliftCount
	}
	if b.StopRequestCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 34, 38)
		x.xxx_hidden_StopRequestCount = *b.StopRequestCount
	}
	if b.KneelingCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 35, 38)
		x.xxx_hidden_KneelingCount = *b.KneelingCount
	}
	if b.PramRequestCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 36, 38)
		x.xxx_hidden_PramRequestCount = *b.PramRequestCount
	}
	x.xxx_hidden_ElectricPowerRecuperationClassKw = &b.ElectricPowerRecuperationClassKw
	return m0
}

// A histogram bucket of operational stats with a label.
type AccumulatedData_LabelClass struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Label                       *string                `protobuf:"bytes,1,opt,name=label"`
	xxx_hidden_DurationS                   float64                `protobuf:"fixed64,2,opt,name=duration_s,json=durationS"`
	xxx_hidden_DistanceM                   float64                `protobuf:"fixed64,3,opt,name=distance_m,json=distanceM"`
	xxx_hidden_FuelConsumptionMl           float64                `protobuf:"fixed64,4,opt,name=fuel_consumption_ml,json=fuelConsumptionMl"`
	xxx_hidden_FuelConsumptionGaseousKg    float64                `protobuf:"fixed64,5,opt,name=fuel_consumption_gaseous_kg,json=fuelConsumptionGaseousKg"`
	xxx_hidden_ElectricEnergyConsumptionWh float64                `protobuf:"fixed64,6,opt,name=electric_energy_consumption_wh,json=electricEnergyConsumptionWh"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *AccumulatedData_LabelClass) Reset() {
	*x = AccumulatedData_LabelClass{}
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccumulatedData_LabelClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumulatedData_LabelClass) ProtoMessage() {}

func (x *AccumulatedData_LabelClass) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccumulatedData_LabelClass) GetLabel() string {
	if x != nil {
		if x.xxx_hidden_Label != nil {
			return *x.xxx_hidden_Label
		}
		return ""
	}
	return ""
}

func (x *AccumulatedData_LabelClass) GetDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_DurationS
	}
	return 0
}

func (x *AccumulatedData_LabelClass) GetDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_DistanceM
	}
	return 0
}

func (x *AccumulatedData_LabelClass) GetFuelConsumptionMl() float64 {
	if x != nil {
		return x.xxx_hidden_FuelConsumptionMl
	}
	return 0
}

func (x *AccumulatedData_LabelClass) GetFuelConsumptionGaseousKg() float64 {
	if x != nil {
		return x.xxx_hidden_FuelConsumptionGaseousKg
	}
	return 0
}

func (x *AccumulatedData_LabelClass) GetElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_ElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData_LabelClass) SetLabel(v string) {
	x.xxx_hidden_Label = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *AccumulatedData_LabelClass) SetDurationS(v float64) {
	x.xxx_hidden_DurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *AccumulatedData_LabelClass) SetDistanceM(v float64) {
	x.xxx_hidden_DistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *AccumulatedData_LabelClass) SetFuelConsumptionMl(v float64) {
	x.xxx_hidden_FuelConsumptionMl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *AccumulatedData_LabelClass) SetFuelConsumptionGaseousKg(v float64) {
	x.xxx_hidden_FuelConsumptionGaseousKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *AccumulatedData_LabelClass) SetElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_ElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *AccumulatedData_LabelClass) HasLabel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccumulatedData_LabelClass) HasDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AccumulatedData_LabelClass) HasDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AccumulatedData_LabelClass) HasFuelConsumptionMl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AccumulatedData_LabelClass) HasFuelConsumptionGaseousKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AccumulatedData_LabelClass) HasElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AccumulatedData_LabelClass) ClearLabel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Label = nil
}

func (x *AccumulatedData_LabelClass) ClearDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DurationS = 0
}

func (x *AccumulatedData_LabelClass) ClearDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DistanceM = 0
}

func (x *AccumulatedData_LabelClass) ClearFuelConsumptionMl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_FuelConsumptionMl = 0
}

func (x *AccumulatedData_LabelClass) ClearFuelConsumptionGaseousKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_FuelConsumptionGaseousKg = 0
}

func (x *AccumulatedData_LabelClass) ClearElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ElectricEnergyConsumptionWh = 0
}

type AccumulatedData_LabelClass_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The label of the class.
	Label *string
	// The duration of the class. (s)
	DurationS *float64
	// The distance of the class. (m)
	DistanceM *float64
	// The liquid fuel consumption of the class. (ml)
	FuelConsumptionMl *float64
	// The gaseous fuel consumption of the class. (kg)
	FuelConsumptionGaseousKg *float64
	// The electric energy consumption of the class. (wh)
	ElectricEnergyConsumptionWh *float64
}

func (b0 AccumulatedData_LabelClass_builder) Build() *AccumulatedData_LabelClass {
	m0 := &AccumulatedData_LabelClass{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Label != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Label = b.Label
	}
	if b.DurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_DurationS = *b.DurationS
	}
	if b.DistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_DistanceM = *b.DistanceM
	}
	if b.FuelConsumptionMl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_FuelConsumptionMl = *b.FuelConsumptionMl
	}
	if b.FuelConsumptionGaseousKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_FuelConsumptionGaseousKg = *b.FuelConsumptionGaseousKg
	}
	if b.ElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ElectricEnergyConsumptionWh = *b.ElectricEnergyConsumptionWh
	}
	return m0
}

// A histogram bucket of operational stats with an interval [from,to).
type AccumulatedData_FromToClass struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_From                        float64                `protobuf:"fixed64,1,opt,name=from"`
	xxx_hidden_To                          float64                `protobuf:"fixed64,2,opt,name=to"`
	xxx_hidden_DurationS                   float64                `protobuf:"fixed64,3,opt,name=duration_s,json=durationS"`
	xxx_hidden_DistanceM                   float64                `protobuf:"fixed64,4,opt,name=distance_m,json=distanceM"`
	xxx_hidden_FuelConsumptionMl           float64                `protobuf:"fixed64,5,opt,name=fuel_consumption_ml,json=fuelConsumptionMl"`
	xxx_hidden_FuelConsumptionGaseousKg    float64                `protobuf:"fixed64,6,opt,name=fuel_consumption_gaseous_kg,json=fuelConsumptionGaseousKg"`
	xxx_hidden_ElectricEnergyConsumptionWh float64                `protobuf:"fixed64,7,opt,name=electric_energy_consumption_wh,json=electricEnergyConsumptionWh"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *AccumulatedData_FromToClass) Reset() {
	*x = AccumulatedData_FromToClass{}
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccumulatedData_FromToClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumulatedData_FromToClass) ProtoMessage() {}

func (x *AccumulatedData_FromToClass) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccumulatedData_FromToClass) GetFrom() float64 {
	if x != nil {
		return x.xxx_hidden_From
	}
	return 0
}

func (x *AccumulatedData_FromToClass) GetTo() float64 {
	if x != nil {
		return x.xxx_hidden_To
	}
	return 0
}

func (x *AccumulatedData_FromToClass) GetDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_DurationS
	}
	return 0
}

func (x *AccumulatedData_FromToClass) GetDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_DistanceM
	}
	return 0
}

func (x *AccumulatedData_FromToClass) GetFuelConsumptionMl() float64 {
	if x != nil {
		return x.xxx_hidden_FuelConsumptionMl
	}
	return 0
}

func (x *AccumulatedData_FromToClass) GetFuelConsumptionGaseousKg() float64 {
	if x != nil {
		return x.xxx_hidden_FuelConsumptionGaseousKg
	}
	return 0
}

func (x *AccumulatedData_FromToClass) GetElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_ElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData_FromToClass) SetFrom(v float64) {
	x.xxx_hidden_From = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *AccumulatedData_FromToClass) SetTo(v float64) {
	x.xxx_hidden_To = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *AccumulatedData_FromToClass) SetDurationS(v float64) {
	x.xxx_hidden_DurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *AccumulatedData_FromToClass) SetDistanceM(v float64) {
	x.xxx_hidden_DistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *AccumulatedData_FromToClass) SetFuelConsumptionMl(v float64) {
	x.xxx_hidden_FuelConsumptionMl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *AccumulatedData_FromToClass) SetFuelConsumptionGaseousKg(v float64) {
	x.xxx_hidden_FuelConsumptionGaseousKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *AccumulatedData_FromToClass) SetElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_ElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *AccumulatedData_FromToClass) HasFrom() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccumulatedData_FromToClass) HasTo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AccumulatedData_FromToClass) HasDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AccumulatedData_FromToClass) HasDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AccumulatedData_FromToClass) HasFuelConsumptionMl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AccumulatedData_FromToClass) HasFuelConsumptionGaseousKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AccumulatedData_FromToClass) HasElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *AccumulatedData_FromToClass) ClearFrom() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_From = 0
}

func (x *AccumulatedData_FromToClass) ClearTo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_To = 0
}

func (x *AccumulatedData_FromToClass) ClearDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DurationS = 0
}

func (x *AccumulatedData_FromToClass) ClearDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DistanceM = 0
}

func (x *AccumulatedData_FromToClass) ClearFuelConsumptionMl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_FuelConsumptionMl = 0
}

func (x *AccumulatedData_FromToClass) ClearFuelConsumptionGaseousKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_FuelConsumptionGaseousKg = 0
}

func (x *AccumulatedData_FromToClass) ClearElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ElectricEnergyConsumptionWh = 0
}

type AccumulatedData_FromToClass_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The from value of the bucket interval. (inclusive)
	From *float64
	// The to value of the bucket interval. (exclusive)
	To *float64
	// The total duration of the bucket. (s)
	DurationS *float64
	// The total distance of the bucket. (m)
	DistanceM *float64
	// The total liquid fuel consumption of the bucket. (ml)
	FuelConsumptionMl *float64
	// The total gaseous fuel consumption of the bucket. (kg)
	FuelConsumptionGaseousKg *float64
	// The total electric energy consumption of the bucket. (wh)
	ElectricEnergyConsumptionWh *float64
}

func (b0 AccumulatedData_FromToClass_builder) Build() *AccumulatedData_FromToClass {
	m0 := &AccumulatedData_FromToClass{}
	b, x := &b0, m0
	_, _ = b, x
	if b.From != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_From = *b.From
	}
	if b.To != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_To = *b.To
	}
	if b.DurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_DurationS = *b.DurationS
	}
	if b.DistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_DistanceM = *b.DistanceM
	}
	if b.FuelConsumptionMl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_FuelConsumptionMl = *b.FuelConsumptionMl
	}
	if b.FuelConsumptionGaseousKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_FuelConsumptionGaseousKg = *b.FuelConsumptionGaseousKg
	}
	if b.ElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ElectricEnergyConsumptionWh = *b.ElectricEnergyConsumptionWh
	}
	return m0
}

// A histogram bucket of combustion engine operational stats with an interval [from,to).
type AccumulatedData_FromToClassCombustion struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_From                     float64                `protobuf:"fixed64,1,opt,name=from"`
	xxx_hidden_To                       float64                `protobuf:"fixed64,2,opt,name=to"`
	xxx_hidden_DurationS                float64                `protobuf:"fixed64,3,opt,name=duration_s,json=durationS"`
	xxx_hidden_DistanceM                float64                `protobuf:"fixed64,4,opt,name=distance_m,json=distanceM"`
	xxx_hidden_FuelConsumptionMl        float64                `protobuf:"fixed64,5,opt,name=fuel_consumption_ml,json=fuelConsumptionMl"`
	xxx_hidden_FuelConsumptionGaseousKg float64                `protobuf:"fixed64,6,opt,name=fuel_consumption_gaseous_kg,json=fuelConsumptionGaseousKg"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *AccumulatedData_FromToClassCombustion) Reset() {
	*x = AccumulatedData_FromToClassCombustion{}
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccumulatedData_FromToClassCombustion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumulatedData_FromToClassCombustion) ProtoMessage() {}

func (x *AccumulatedData_FromToClassCombustion) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccumulatedData_FromToClassCombustion) GetFrom() float64 {
	if x != nil {
		return x.xxx_hidden_From
	}
	return 0
}

func (x *AccumulatedData_FromToClassCombustion) GetTo() float64 {
	if x != nil {
		return x.xxx_hidden_To
	}
	return 0
}

func (x *AccumulatedData_FromToClassCombustion) GetDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_DurationS
	}
	return 0
}

func (x *AccumulatedData_FromToClassCombustion) GetDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_DistanceM
	}
	return 0
}

func (x *AccumulatedData_FromToClassCombustion) GetFuelConsumptionMl() float64 {
	if x != nil {
		return x.xxx_hidden_FuelConsumptionMl
	}
	return 0
}

func (x *AccumulatedData_FromToClassCombustion) GetFuelConsumptionGaseousKg() float64 {
	if x != nil {
		return x.xxx_hidden_FuelConsumptionGaseousKg
	}
	return 0
}

func (x *AccumulatedData_FromToClassCombustion) SetFrom(v float64) {
	x.xxx_hidden_From = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *AccumulatedData_FromToClassCombustion) SetTo(v float64) {
	x.xxx_hidden_To = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *AccumulatedData_FromToClassCombustion) SetDurationS(v float64) {
	x.xxx_hidden_DurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *AccumulatedData_FromToClassCombustion) SetDistanceM(v float64) {
	x.xxx_hidden_DistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *AccumulatedData_FromToClassCombustion) SetFuelConsumptionMl(v float64) {
	x.xxx_hidden_FuelConsumptionMl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *AccumulatedData_FromToClassCombustion) SetFuelConsumptionGaseousKg(v float64) {
	x.xxx_hidden_FuelConsumptionGaseousKg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *AccumulatedData_FromToClassCombustion) HasFrom() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccumulatedData_FromToClassCombustion) HasTo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AccumulatedData_FromToClassCombustion) HasDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AccumulatedData_FromToClassCombustion) HasDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AccumulatedData_FromToClassCombustion) HasFuelConsumptionMl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AccumulatedData_FromToClassCombustion) HasFuelConsumptionGaseousKg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AccumulatedData_FromToClassCombustion) ClearFrom() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_From = 0
}

func (x *AccumulatedData_FromToClassCombustion) ClearTo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_To = 0
}

func (x *AccumulatedData_FromToClassCombustion) ClearDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DurationS = 0
}

func (x *AccumulatedData_FromToClassCombustion) ClearDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DistanceM = 0
}

func (x *AccumulatedData_FromToClassCombustion) ClearFuelConsumptionMl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_FuelConsumptionMl = 0
}

func (x *AccumulatedData_FromToClassCombustion) ClearFuelConsumptionGaseousKg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_FuelConsumptionGaseousKg = 0
}

type AccumulatedData_FromToClassCombustion_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The from value of the bucket interval. (inclusive)
	From *float64
	// The to value of the bucket interval. (exclusive)
	To *float64
	// The total duration of the bucket. (s)
	DurationS *float64
	// The total distance of the bucket. (m)
	DistanceM *float64
	// The total liquid fuel consumption of the bucket. (ml)
	FuelConsumptionMl *float64
	// The total gaseous fuel consumption of the bucket. (kg)
	FuelConsumptionGaseousKg *float64
}

func (b0 AccumulatedData_FromToClassCombustion_builder) Build() *AccumulatedData_FromToClassCombustion {
	m0 := &AccumulatedData_FromToClassCombustion{}
	b, x := &b0, m0
	_, _ = b, x
	if b.From != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_From = *b.From
	}
	if b.To != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_To = *b.To
	}
	if b.DurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_DurationS = *b.DurationS
	}
	if b.DistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_DistanceM = *b.DistanceM
	}
	if b.FuelConsumptionMl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_FuelConsumptionMl = *b.FuelConsumptionMl
	}
	if b.FuelConsumptionGaseousKg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_FuelConsumptionGaseousKg = *b.FuelConsumptionGaseousKg
	}
	return m0
}

// A histogram bucket of electrical engine operational stats with an interval [from,to).
type AccumulatedData_FromToClassElectrical struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_From                        float64                `protobuf:"fixed64,1,opt,name=from"`
	xxx_hidden_To                          float64                `protobuf:"fixed64,2,opt,name=to"`
	xxx_hidden_DurationS                   float64                `protobuf:"fixed64,3,opt,name=duration_s,json=durationS"`
	xxx_hidden_DistanceM                   float64                `protobuf:"fixed64,4,opt,name=distance_m,json=distanceM"`
	xxx_hidden_ElectricEnergyConsumptionWh float64                `protobuf:"fixed64,5,opt,name=electric_energy_consumption_wh,json=electricEnergyConsumptionWh"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *AccumulatedData_FromToClassElectrical) Reset() {
	*x = AccumulatedData_FromToClassElectrical{}
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccumulatedData_FromToClassElectrical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumulatedData_FromToClassElectrical) ProtoMessage() {}

func (x *AccumulatedData_FromToClassElectrical) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccumulatedData_FromToClassElectrical) GetFrom() float64 {
	if x != nil {
		return x.xxx_hidden_From
	}
	return 0
}

func (x *AccumulatedData_FromToClassElectrical) GetTo() float64 {
	if x != nil {
		return x.xxx_hidden_To
	}
	return 0
}

func (x *AccumulatedData_FromToClassElectrical) GetDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_DurationS
	}
	return 0
}

func (x *AccumulatedData_FromToClassElectrical) GetDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_DistanceM
	}
	return 0
}

func (x *AccumulatedData_FromToClassElectrical) GetElectricEnergyConsumptionWh() float64 {
	if x != nil {
		return x.xxx_hidden_ElectricEnergyConsumptionWh
	}
	return 0
}

func (x *AccumulatedData_FromToClassElectrical) SetFrom(v float64) {
	x.xxx_hidden_From = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AccumulatedData_FromToClassElectrical) SetTo(v float64) {
	x.xxx_hidden_To = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AccumulatedData_FromToClassElectrical) SetDurationS(v float64) {
	x.xxx_hidden_DurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AccumulatedData_FromToClassElectrical) SetDistanceM(v float64) {
	x.xxx_hidden_DistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *AccumulatedData_FromToClassElectrical) SetElectricEnergyConsumptionWh(v float64) {
	x.xxx_hidden_ElectricEnergyConsumptionWh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *AccumulatedData_FromToClassElectrical) HasFrom() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccumulatedData_FromToClassElectrical) HasTo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AccumulatedData_FromToClassElectrical) HasDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AccumulatedData_FromToClassElectrical) HasDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AccumulatedData_FromToClassElectrical) HasElectricEnergyConsumptionWh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AccumulatedData_FromToClassElectrical) ClearFrom() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_From = 0
}

func (x *AccumulatedData_FromToClassElectrical) ClearTo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_To = 0
}

func (x *AccumulatedData_FromToClassElectrical) ClearDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DurationS = 0
}

func (x *AccumulatedData_FromToClassElectrical) ClearDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DistanceM = 0
}

func (x *AccumulatedData_FromToClassElectrical) ClearElectricEnergyConsumptionWh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ElectricEnergyConsumptionWh = 0
}

type AccumulatedData_FromToClassElectrical_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The from value of the bucket interval. (inclusive)
	From *float64
	// The to value of the bucket interval. (exclusive)
	To *float64
	// The total duration of the bucket. (s)
	DurationS *float64
	// The total distance of the bucket. (m)
	DistanceM *float64
	// The total electric energy consumption of the bucket. (wh)
	ElectricEnergyConsumptionWh *float64
}

func (b0 AccumulatedData_FromToClassElectrical_builder) Build() *AccumulatedData_FromToClassElectrical {
	m0 := &AccumulatedData_FromToClassElectrical{}
	b, x := &b0, m0
	_, _ = b, x
	if b.From != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_From = *b.From
	}
	if b.To != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_To = *b.To
	}
	if b.DurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_DurationS = *b.DurationS
	}
	if b.DistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_DistanceM = *b.DistanceM
	}
	if b.ElectricEnergyConsumptionWh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ElectricEnergyConsumptionWh = *b.ElectricEnergyConsumptionWh
	}
	return m0
}

var File_wayplatform_connect_rfms_v5_accumulated_data_proto protoreflect.FileDescriptor

const file_wayplatform_connect_rfms_v5_accumulated_data_proto_rawDesc = "" +
	"\n" +
	"2wayplatform/connect/rfms/v5/accumulated_data.proto\x12\x1bwayplatform.connect.rfms.v5\"\xf2%\n" +
	"\x0fAccumulatedData\x12P\n" +
	"&wheel_based_speed_over_zero_duration_s\x18\x01 \x01(\x01R wheelBasedSpeedOverZeroDurationS\x12J\n" +
	"#wheel_based_speed_over_zero_fuel_ml\x18\x02 \x01(\x01R\x1dwheelBasedSpeedOverZeroFuelMl\x12Y\n" +
	"+wheel_based_speed_over_zero_fuel_gaseous_kg\x18\x03 \x01(\x01R$wheelBasedSpeedOverZeroFuelGaseousKg\x12v\n" +
	":wheel_based_speed_over_zero_electric_energy_consumption_wh\x18\x04 \x01(\x01R2wheelBasedSpeedOverZeroElectricEnergyConsumptionWh\x12G\n" +
	"!wheel_based_speed_zero_duration_s\x18\x05 \x01(\x01R\x1cwheelBasedSpeedZeroDurationS\x12G\n" +
	"!wheel_based_speed_zero_distance_m\x18\x06 \x01(\x01R\x1cwheelBasedSpeedZeroDistanceM\x12A\n" +
	"\x1ewheel_based_speed_zero_fuel_ml\x18\a \x01(\x01R\x19wheelBasedSpeedZeroFuelMl\x12P\n" +
	"&wheel_based_speed_zero_fuel_gaseous_kg\x18\b \x01(\x01R wheelBasedSpeedZeroFuelGaseousKg\x12m\n" +
	"5wheel_based_speed_zero_electric_energy_consumption_wh\x18\t \x01(\x01R.wheelBasedSpeedZeroElectricEnergyConsumptionWh\x12F\n" +
	" cruise_control_active_distance_m\x18\n" +
	" \x01(\x01R\x1ccruiseControlActiveDistanceM\x12F\n" +
	" cruise_control_active_duration_s\x18\v \x01(\x01R\x1ccruiseControlActiveDurationS\x12W\n" +
	")cruise_control_active_fuel_consumption_ml\x18\f \x01(\x01R$cruiseControlActiveFuelConsumptionMl\x12f\n" +
	"1cruise_control_active_fuel_consumption_gaseous_kg\x18\r \x01(\x01R+cruiseControlActiveFuelConsumptionGaseousKg\x12l\n" +
	"4cruise_control_active_electric_energy_consumption_wh\x18\x0e \x01(\x01R.cruiseControlActiveElectricEnergyConsumptionWh\x12J\n" +
	"\"aux_electric_energy_consumption_wh\x18\x0f \x01(\x01R\x1eauxElectricEnergyConsumptionWh\x12a\n" +
	"\x10pto_active_class\x18\x10 \x03(\v27.wayplatform.connect.rfms.v5.AccumulatedData.LabelClassR\x0eptoActiveClass\x12G\n" +
	"!brake_pedal_speed_over_zero_count\x18\x11 \x01(\x05R\x1cbrakePedalSpeedOverZeroCount\x12P\n" +
	"&brake_pedal_speed_over_zero_distance_m\x18\x12 \x01(\x01R brakePedalSpeedOverZeroDistanceM\x12\x92\x01\n" +
	")acceleration_pedal_position_class_percent\x18\x13 \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR%accelerationPedalPositionClassPercent\x12\x84\x01\n" +
	"\"brake_pedal_position_class_percent\x18\x14 \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR\x1ebrakePedalPositionClassPercent\x12p\n" +
	"\x17acceleration_class_mps2\x18\x15 \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR\x15accelerationClassMps2\x12y\n" +
	"\x1chigh_acceleration_class_mps2\x18\x16 \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR\x19highAccelerationClassMps2\x12{\n" +
	"\x1dretarder_torque_class_percent\x18\x17 \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR\x1aretarderTorqueClassPercent\x12x\n" +
	"\x1cdriving_without_torque_class\x18\x18 \x03(\v27.wayplatform.connect.rfms.v5.AccumulatedData.LabelClassR\x19drivingWithoutTorqueClass\x12\x81\x01\n" +
	"\x1bengine_torque_class_percent\x18\x19 \x03(\v2B.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassCombustionR\x18engineTorqueClassPercent\x12\x90\x01\n" +
	"#electric_motor_torque_class_percent\x18\x1a \x03(\v2B.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectricalR\x1felectricMotorTorqueClassPercent\x12\xa0\x01\n" +
	",engine_torque_at_current_speed_class_percent\x18\x1b \x03(\v2B.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassCombustionR&engineTorqueAtCurrentSpeedClassPercent\x12\xaf\x01\n" +
	"4electric_motor_torque_at_current_speed_class_percent\x18\x1c \x03(\v2B.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectricalR-electricMotorTorqueAtCurrentSpeedClassPercent\x12o\n" +
	"\x17vehicle_speed_class_kmh\x18\x1d \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR\x14vehicleSpeedClassKmh\x12m\n" +
	"\x16engine_speed_class_rpm\x18\x1e \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR\x13engineSpeedClassRpm\x12\x88\x01\n" +
	"$acceleration_during_brake_class_mps2\x18\x1f \x03(\v28.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassR accelerationDuringBrakeClassMps2\x12g\n" +
	"\x13selected_gear_class\x18  \x03(\v27.wayplatform.connect.rfms.v5.AccumulatedData.LabelClassR\x11selectedGearClass\x12e\n" +
	"\x12current_gear_class\x18! \x03(\v27.wayplatform.connect.rfms.v5.AccumulatedData.LabelClassR\x10currentGearClass\x12'\n" +
	"\x0fchairlift_count\x18\" \x01(\x05R\x0echairliftCount\x12,\n" +
	"\x12stop_request_count\x18# \x01(\x05R\x10stopRequestCount\x12%\n" +
	"\x0ekneeling_count\x18$ \x01(\x05R\rkneelingCount\x12,\n" +
	"\x12pram_request_count\x18% \x01(\x05R\x10pramRequestCount\x12\x92\x01\n" +
	"$electric_power_recuperation_class_kw\x18& \x03(\v2B.wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectricalR electricPowerRecuperationClassKw\x1a\x94\x02\n" +
	"\n" +
	"LabelClass\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"duration_s\x18\x02 \x01(\x01R\tdurationS\x12\x1d\n" +
	"\n" +
	"distance_m\x18\x03 \x01(\x01R\tdistanceM\x12.\n" +
	"\x13fuel_consumption_ml\x18\x04 \x01(\x01R\x11fuelConsumptionMl\x12=\n" +
	"\x1bfuel_consumption_gaseous_kg\x18\x05 \x01(\x01R\x18fuelConsumptionGaseousKg\x12C\n" +
	"\x1eelectric_energy_consumption_wh\x18\x06 \x01(\x01R\x1belectricEnergyConsumptionWh\x1a\xa3\x02\n" +
	"\vFromToClass\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x01R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x01R\x02to\x12\x1d\n" +
	"\n" +
	"duration_s\x18\x03 \x01(\x01R\tdurationS\x12\x1d\n" +
	"\n" +
	"distance_m\x18\x04 \x01(\x01R\tdistanceM\x12.\n" +
	"\x13fuel_consumption_ml\x18\x05 \x01(\x01R\x11fuelConsumptionMl\x12=\n" +
	"\x1bfuel_consumption_gaseous_kg\x18\x06 \x01(\x01R\x18fuelConsumptionGaseousKg\x12C\n" +
	"\x1eelectric_energy_consumption_wh\x18\a \x01(\x01R\x1belectricEnergyConsumptionWh\x1a\xe8\x01\n" +
	"\x15FromToClassCombustion\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x01R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x01R\x02to\x12\x1d\n" +
	"\n" +
	"duration_s\x18\x03 \x01(\x01R\tdurationS\x12\x1d\n" +
	"\n" +
	"distance_m\x18\x04 \x01(\x01R\tdistanceM\x12.\n" +
	"\x13fuel_consumption_ml\x18\x05 \x01(\x01R\x11fuelConsumptionMl\x12=\n" +
	"\x1bfuel_consumption_gaseous_kg\x18\x06 \x01(\x01R\x18fuelConsumptionGaseousKg\x1a\xbe\x01\n" +
	"\x15FromToClassElectrical\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x01R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x01R\x02to\x12\x1d\n" +
	"\n" +
	"duration_s\x18\x03 \x01(\x01R\tdurationS\x12\x1d\n" +
	"\n" +
	"distance_m\x18\x04 \x01(\x01R\tdistanceM\x12C\n" +
	"\x1eelectric_energy_consumption_wh\x18\x05 \x01(\x01R\x1belectricEnergyConsumptionWhB\x97\x02\n" +
	"\x1fcom.wayplatform.connect.rfms.v5B\x14AccumulatedDataProtoP\x01ZOgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/connect/rfms/v5;rfmsv5\xa2\x02\x03WCR\xaa\x02\x1bWayplatform.Connect.Rfms.V5\xca\x02\x1bWayplatform\\Connect\\Rfms\\V5\xe2\x02'Wayplatform\\Connect\\Rfms\\V5\\GPBMetadata\xea\x02\x1eWayplatform::Connect::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_wayplatform_connect_rfms_v5_accumulated_data_proto_goTypes = []any{
	(*AccumulatedData)(nil),                       // 0: wayplatform.connect.rfms.v5.AccumulatedData
	(*AccumulatedData_LabelClass)(nil),            // 1: wayplatform.connect.rfms.v5.AccumulatedData.LabelClass
	(*AccumulatedData_FromToClass)(nil),           // 2: wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	(*AccumulatedData_FromToClassCombustion)(nil), // 3: wayplatform.connect.rfms.v5.AccumulatedData.FromToClassCombustion
	(*AccumulatedData_FromToClassElectrical)(nil), // 4: wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectrical
}
var file_wayplatform_connect_rfms_v5_accumulated_data_proto_depIdxs = []int32{
	1,  // 0: wayplatform.connect.rfms.v5.AccumulatedData.pto_active_class:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.LabelClass
	2,  // 1: wayplatform.connect.rfms.v5.AccumulatedData.acceleration_pedal_position_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	2,  // 2: wayplatform.connect.rfms.v5.AccumulatedData.brake_pedal_position_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	2,  // 3: wayplatform.connect.rfms.v5.AccumulatedData.acceleration_class_mps2:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	2,  // 4: wayplatform.connect.rfms.v5.AccumulatedData.high_acceleration_class_mps2:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	2,  // 5: wayplatform.connect.rfms.v5.AccumulatedData.retarder_torque_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	1,  // 6: wayplatform.connect.rfms.v5.AccumulatedData.driving_without_torque_class:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.LabelClass
	3,  // 7: wayplatform.connect.rfms.v5.AccumulatedData.engine_torque_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClassCombustion
	4,  // 8: wayplatform.connect.rfms.v5.AccumulatedData.electric_motor_torque_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectrical
	3,  // 9: wayplatform.connect.rfms.v5.AccumulatedData.engine_torque_at_current_speed_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClassCombustion
	4,  // 10: wayplatform.connect.rfms.v5.AccumulatedData.electric_motor_torque_at_current_speed_class_percent:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectrical
	2,  // 11: wayplatform.connect.rfms.v5.AccumulatedData.vehicle_speed_class_kmh:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	2,  // 12: wayplatform.connect.rfms.v5.AccumulatedData.engine_speed_class_rpm:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	2,  // 13: wayplatform.connect.rfms.v5.AccumulatedData.acceleration_during_brake_class_mps2:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClass
	1,  // 14: wayplatform.connect.rfms.v5.AccumulatedData.selected_gear_class:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.LabelClass
	1,  // 15: wayplatform.connect.rfms.v5.AccumulatedData.current_gear_class:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.LabelClass
	4,  // 16: wayplatform.connect.rfms.v5.AccumulatedData.electric_power_recuperation_class_kw:type_name -> wayplatform.connect.rfms.v5.AccumulatedData.FromToClassElectrical
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_rfms_v5_accumulated_data_proto_init() }
func file_wayplatform_connect_rfms_v5_accumulated_data_proto_init() {
	if File_wayplatform_connect_rfms_v5_accumulated_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_rfms_v5_accumulated_data_proto_rawDesc), len(file_wayplatform_connect_rfms_v5_accumulated_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_rfms_v5_accumulated_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_rfms_v5_accumulated_data_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_rfms_v5_accumulated_data_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_rfms_v5_accumulated_data_proto = out.File
	file_wayplatform_connect_rfms_v5_accumulated_data_proto_goTypes = nil
	file_wayplatform_connect_rfms_v5_accumulated_data_proto_depIdxs = nil
}
