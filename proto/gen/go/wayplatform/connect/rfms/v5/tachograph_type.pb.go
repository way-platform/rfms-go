// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/rfms/v5/tachograph_type.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Well-known tachograph types.
//
// This enum is not exhaustive. It identifies commonly used tachograph types across
// OEM-specific implementations of rFMS APIs.
type TachographType int32

const (
	// Default value. This value is not used.
	TachographType_TACHOGRAPH_TYPE_UNSPECIFIED TachographType = 0
	// Unknown tachograph type.
	TachographType_TACHOGRAPH_TYPE_UNKNOWN TachographType = 1
	// Modular tachograph.
	TachographType_MTCO TachographType = 2
	// Digital tachograph, unknown generation.
	TachographType_DTCO TachographType = 3
	// Digital tachograph generation 1.
	TachographType_DTCO_G1 TachographType = 4
	// Digital tachograph generation 2.
	TachographType_DTCO_G2 TachographType = 5
	// Tachograph simulator.
	TachographType_TSU TachographType = 6
	// No tachograph in the vehicle.
	TachographType_NONE TachographType = 7
	// Stoneridge Smart. (Scania)
	TachographType_STONERIDGE_SMART TachographType = 8
	// Stoneridge Smart 2. (Scania)
	TachographType_STONERIDGE_SMART2 TachographType = 9
)

// Enum value maps for TachographType.
var (
	TachographType_name = map[int32]string{
		0: "TACHOGRAPH_TYPE_UNSPECIFIED",
		1: "TACHOGRAPH_TYPE_UNKNOWN",
		2: "MTCO",
		3: "DTCO",
		4: "DTCO_G1",
		5: "DTCO_G2",
		6: "TSU",
		7: "NONE",
		8: "STONERIDGE_SMART",
		9: "STONERIDGE_SMART2",
	}
	TachographType_value = map[string]int32{
		"TACHOGRAPH_TYPE_UNSPECIFIED": 0,
		"TACHOGRAPH_TYPE_UNKNOWN":     1,
		"MTCO":                        2,
		"DTCO":                        3,
		"DTCO_G1":                     4,
		"DTCO_G2":                     5,
		"TSU":                         6,
		"NONE":                        7,
		"STONERIDGE_SMART":            8,
		"STONERIDGE_SMART2":           9,
	}
)

func (x TachographType) Enum() *TachographType {
	p := new(TachographType)
	*p = x
	return p
}

func (x TachographType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TachographType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_rfms_v5_tachograph_type_proto_enumTypes[0].Descriptor()
}

func (TachographType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_rfms_v5_tachograph_type_proto_enumTypes[0]
}

func (x TachographType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_rfms_v5_tachograph_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_rfms_v5_tachograph_type_proto_rawDesc = "" +
	"\n" +
	"1wayplatform/connect/rfms/v5/tachograph_type.proto\x12\x13wayplatform.rfms.v5*\xbc\x01\n" +
	"\x0eTachographType\x12\x1f\n" +
	"\x1bTACHOGRAPH_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17TACHOGRAPH_TYPE_UNKNOWN\x10\x01\x12\b\n" +
	"\x04MTCO\x10\x02\x12\b\n" +
	"\x04DTCO\x10\x03\x12\v\n" +
	"\aDTCO_G1\x10\x04\x12\v\n" +
	"\aDTCO_G2\x10\x05\x12\a\n" +
	"\x03TSU\x10\x06\x12\b\n" +
	"\x04NONE\x10\a\x12\x14\n" +
	"\x10STONERIDGE_SMART\x10\b\x12\x15\n" +
	"\x11STONERIDGE_SMART2\x10\tB\xed\x01\n" +
	"\x17com.wayplatform.rfms.v5B\x13TachographTypeProtoP\x01ZOgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/connect/rfms/v5;rfmsv5\xa2\x02\x03WRX\xaa\x02\x13Wayplatform.Rfms.V5\xca\x02\x13Wayplatform\\Rfms\\V5\xe2\x02\x1fWayplatform\\Rfms\\V5\\GPBMetadata\xea\x02\x15Wayplatform::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_connect_rfms_v5_tachograph_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_rfms_v5_tachograph_type_proto_goTypes = []any{
	(TachographType)(0), // 0: wayplatform.rfms.v5.TachographType
}
var file_wayplatform_connect_rfms_v5_tachograph_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_rfms_v5_tachograph_type_proto_init() }
func file_wayplatform_connect_rfms_v5_tachograph_type_proto_init() {
	if File_wayplatform_connect_rfms_v5_tachograph_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_rfms_v5_tachograph_type_proto_rawDesc), len(file_wayplatform_connect_rfms_v5_tachograph_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_rfms_v5_tachograph_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_rfms_v5_tachograph_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_rfms_v5_tachograph_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_rfms_v5_tachograph_type_proto = out.File
	file_wayplatform_connect_rfms_v5_tachograph_type_proto_goTypes = nil
	file_wayplatform_connect_rfms_v5_tachograph_type_proto_depIdxs = nil
}
