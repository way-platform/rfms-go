// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/rfms/v5/snapshot_data.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Snapshot data for a vehicle.
type SnapshotData struct {
	state                                                protoimpl.MessageState                 `protogen:"opaque.v1"`
	xxx_hidden_GnssPosition                              *GnssPosition                          `protobuf:"bytes,1,opt,name=gnss_position,json=gnssPosition"`
	xxx_hidden_WheelBasedSpeedKmh                        float64                                `protobuf:"fixed64,2,opt,name=wheel_based_speed_kmh,json=wheelBasedSpeedKmh"`
	xxx_hidden_TachographSpeedKmh                        float64                                `protobuf:"fixed64,3,opt,name=tachograph_speed_kmh,json=tachographSpeedKmh"`
	xxx_hidden_EngineSpeedRpm                            float64                                `protobuf:"fixed64,4,opt,name=engine_speed_rpm,json=engineSpeedRpm"`
	xxx_hidden_ElectricMotorSpeedRpm                     float64                                `protobuf:"fixed64,5,opt,name=electric_motor_speed_rpm,json=electricMotorSpeedRpm"`
	xxx_hidden_IgnitionState                             IgnitionState                          `protobuf:"varint,6,opt,name=ignition_state,json=ignitionState,enum=wayplatform.connect.rfms.v5.IgnitionState"`
	xxx_hidden_FuelType                                  FuelType                               `protobuf:"varint,7,opt,name=fuel_type,json=fuelType,enum=wayplatform.connect.rfms.v5.FuelType"`
	xxx_hidden_UnknownFuelType                           *string                                `protobuf:"bytes,8,opt,name=unknown_fuel_type,json=unknownFuelType"`
	xxx_hidden_FuelLevel1Percent                         float64                                `protobuf:"fixed64,9,opt,name=fuel_level1_percent,json=fuelLevel1Percent"`
	xxx_hidden_FuelLevel2Percent                         float64                                `protobuf:"fixed64,10,opt,name=fuel_level2_percent,json=fuelLevel2Percent"`
	xxx_hidden_CatalystFuelLevelPercent                  float64                                `protobuf:"fixed64,11,opt,name=catalyst_fuel_level_percent,json=catalystFuelLevelPercent"`
	xxx_hidden_Driver1WorkingState                       DriverWorkingState                     `protobuf:"varint,12,opt,name=driver1_working_state,json=driver1WorkingState,enum=wayplatform.connect.rfms.v5.DriverWorkingState"`
	xxx_hidden_UnknownDriver1WorkingState                *string                                `protobuf:"bytes,13,opt,name=unknown_driver1_working_state,json=unknownDriver1WorkingState"`
	xxx_hidden_Driver2Id                                 *DriverIdentification                  `protobuf:"bytes,14,opt,name=driver2_id,json=driver2Id"`
	xxx_hidden_Driver2WorkingState                       DriverWorkingState                     `protobuf:"varint,15,opt,name=driver2_working_state,json=driver2WorkingState,enum=wayplatform.connect.rfms.v5.DriverWorkingState"`
	xxx_hidden_UnknownDriver2WorkingState                *string                                `protobuf:"bytes,16,opt,name=unknown_driver2_working_state,json=unknownDriver2WorkingState"`
	xxx_hidden_AmbientAirTemperatureC                    float64                                `protobuf:"fixed64,17,opt,name=ambient_air_temperature_c,json=ambientAirTemperatureC"`
	xxx_hidden_ParkingBrakeSwitch                        bool                                   `protobuf:"varint,18,opt,name=parking_brake_switch,json=parkingBrakeSwitch"`
	xxx_hidden_BatteryPackRemainingChargePercent         float64                                `protobuf:"fixed64,19,opt,name=battery_pack_remaining_charge_percent,json=batteryPackRemainingChargePercent"`
	xxx_hidden_BatteryPackChargingState                  ChargingState                          `protobuf:"varint,20,opt,name=battery_pack_charging_state,json=batteryPackChargingState,enum=wayplatform.connect.rfms.v5.ChargingState"`
	xxx_hidden_UnknownBatteryPackChargingState           *string                                `protobuf:"bytes,21,opt,name=unknown_battery_pack_charging_state,json=unknownBatteryPackChargingState"`
	xxx_hidden_BatteryPackChargingConnectionState        ChargingConnectionState                `protobuf:"varint,22,opt,name=battery_pack_charging_connection_state,json=batteryPackChargingConnectionState,enum=wayplatform.connect.rfms.v5.ChargingConnectionState"`
	xxx_hidden_UnknownBatteryPackChargingConnectionState *string                                `protobuf:"bytes,23,opt,name=unknown_battery_pack_charging_connection_state,json=unknownBatteryPackChargingConnectionState"`
	xxx_hidden_BatteryPackChargingDevice                 ChargingDevice                         `protobuf:"varint,24,opt,name=battery_pack_charging_device,json=batteryPackChargingDevice,enum=wayplatform.connect.rfms.v5.ChargingDevice"`
	xxx_hidden_UnknownBatteryPackChargingDevice          *string                                `protobuf:"bytes,25,opt,name=unknown_battery_pack_charging_device,json=unknownBatteryPackChargingDevice"`
	xxx_hidden_BatteryPackChargingPowerW                 float64                                `protobuf:"fixed64,26,opt,name=battery_pack_charging_power_w,json=batteryPackChargingPowerW"`
	xxx_hidden_BatteryPackEstimatedChargingCompletedTime *timestamppb.Timestamp                 `protobuf:"bytes,27,opt,name=battery_pack_estimated_charging_completed_time,json=batteryPackEstimatedChargingCompletedTime"`
	xxx_hidden_EstimatedDistanceToEmpty                  *SnapshotData_EstimatedDistanceToEmpty `protobuf:"bytes,28,opt,name=estimated_distance_to_empty,json=estimatedDistanceToEmpty"`
	xxx_hidden_VehicleAxles                              *[]*VehicleAxle                        `protobuf:"bytes,29,rep,name=vehicle_axles,json=vehicleAxles"`
	xxx_hidden_Trailers                                  *[]*Trailer                            `protobuf:"bytes,30,rep,name=trailers"`
	XXX_raceDetectHookData                               protoimpl.RaceDetectHookData
	XXX_presence                                         [1]uint32
	unknownFields                                        protoimpl.UnknownFields
	sizeCache                                            protoimpl.SizeCache
}

func (x *SnapshotData) Reset() {
	*x = SnapshotData{}
	mi := &file_wayplatform_connect_rfms_v5_snapshot_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotData) ProtoMessage() {}

func (x *SnapshotData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_snapshot_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SnapshotData) GetGnssPosition() *GnssPosition {
	if x != nil {
		return x.xxx_hidden_GnssPosition
	}
	return nil
}

func (x *SnapshotData) GetWheelBasedSpeedKmh() float64 {
	if x != nil {
		return x.xxx_hidden_WheelBasedSpeedKmh
	}
	return 0
}

func (x *SnapshotData) GetTachographSpeedKmh() float64 {
	if x != nil {
		return x.xxx_hidden_TachographSpeedKmh
	}
	return 0
}

func (x *SnapshotData) GetEngineSpeedRpm() float64 {
	if x != nil {
		return x.xxx_hidden_EngineSpeedRpm
	}
	return 0
}

func (x *SnapshotData) GetElectricMotorSpeedRpm() float64 {
	if x != nil {
		return x.xxx_hidden_ElectricMotorSpeedRpm
	}
	return 0
}

func (x *SnapshotData) GetIgnitionState() IgnitionState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_IgnitionState
		}
	}
	return IgnitionState_IGNITION_STATE_UNSPECIFIED
}

func (x *SnapshotData) GetFuelType() FuelType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_FuelType
		}
	}
	return FuelType_FUEL_TYPE_UNSPECIFIED
}

func (x *SnapshotData) GetUnknownFuelType() string {
	if x != nil {
		if x.xxx_hidden_UnknownFuelType != nil {
			return *x.xxx_hidden_UnknownFuelType
		}
		return ""
	}
	return ""
}

func (x *SnapshotData) GetFuelLevel1Percent() float64 {
	if x != nil {
		return x.xxx_hidden_FuelLevel1Percent
	}
	return 0
}

func (x *SnapshotData) GetFuelLevel2Percent() float64 {
	if x != nil {
		return x.xxx_hidden_FuelLevel2Percent
	}
	return 0
}

func (x *SnapshotData) GetCatalystFuelLevelPercent() float64 {
	if x != nil {
		return x.xxx_hidden_CatalystFuelLevelPercent
	}
	return 0
}

func (x *SnapshotData) GetDriver1WorkingState() DriverWorkingState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 11) {
			return x.xxx_hidden_Driver1WorkingState
		}
	}
	return DriverWorkingState_DRIVER_WORKING_STATE_UNSPECIFIED
}

func (x *SnapshotData) GetUnknownDriver1WorkingState() string {
	if x != nil {
		if x.xxx_hidden_UnknownDriver1WorkingState != nil {
			return *x.xxx_hidden_UnknownDriver1WorkingState
		}
		return ""
	}
	return ""
}

func (x *SnapshotData) GetDriver2Id() *DriverIdentification {
	if x != nil {
		return x.xxx_hidden_Driver2Id
	}
	return nil
}

func (x *SnapshotData) GetDriver2WorkingState() DriverWorkingState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 14) {
			return x.xxx_hidden_Driver2WorkingState
		}
	}
	return DriverWorkingState_DRIVER_WORKING_STATE_UNSPECIFIED
}

func (x *SnapshotData) GetUnknownDriver2WorkingState() string {
	if x != nil {
		if x.xxx_hidden_UnknownDriver2WorkingState != nil {
			return *x.xxx_hidden_UnknownDriver2WorkingState
		}
		return ""
	}
	return ""
}

func (x *SnapshotData) GetAmbientAirTemperatureC() float64 {
	if x != nil {
		return x.xxx_hidden_AmbientAirTemperatureC
	}
	return 0
}

func (x *SnapshotData) GetParkingBrakeSwitch() bool {
	if x != nil {
		return x.xxx_hidden_ParkingBrakeSwitch
	}
	return false
}

func (x *SnapshotData) GetBatteryPackRemainingChargePercent() float64 {
	if x != nil {
		return x.xxx_hidden_BatteryPackRemainingChargePercent
	}
	return 0
}

func (x *SnapshotData) GetBatteryPackChargingState() ChargingState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 19) {
			return x.xxx_hidden_BatteryPackChargingState
		}
	}
	return ChargingState_CHARGING_STATE_UNSPECIFIED
}

func (x *SnapshotData) GetUnknownBatteryPackChargingState() string {
	if x != nil {
		if x.xxx_hidden_UnknownBatteryPackChargingState != nil {
			return *x.xxx_hidden_UnknownBatteryPackChargingState
		}
		return ""
	}
	return ""
}

func (x *SnapshotData) GetBatteryPackChargingConnectionState() ChargingConnectionState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 21) {
			return x.xxx_hidden_BatteryPackChargingConnectionState
		}
	}
	return ChargingConnectionState_CHARGING_CONNECTION_STATE_UNSPECIFIED
}

func (x *SnapshotData) GetUnknownBatteryPackChargingConnectionState() string {
	if x != nil {
		if x.xxx_hidden_UnknownBatteryPackChargingConnectionState != nil {
			return *x.xxx_hidden_UnknownBatteryPackChargingConnectionState
		}
		return ""
	}
	return ""
}

func (x *SnapshotData) GetBatteryPackChargingDevice() ChargingDevice {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 23) {
			return x.xxx_hidden_BatteryPackChargingDevice
		}
	}
	return ChargingDevice_CHARGING_DEVICE_UNSPECIFIED
}

func (x *SnapshotData) GetUnknownBatteryPackChargingDevice() string {
	if x != nil {
		if x.xxx_hidden_UnknownBatteryPackChargingDevice != nil {
			return *x.xxx_hidden_UnknownBatteryPackChargingDevice
		}
		return ""
	}
	return ""
}

func (x *SnapshotData) GetBatteryPackChargingPowerW() float64 {
	if x != nil {
		return x.xxx_hidden_BatteryPackChargingPowerW
	}
	return 0
}

func (x *SnapshotData) GetBatteryPackEstimatedChargingCompletedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_BatteryPackEstimatedChargingCompletedTime
	}
	return nil
}

func (x *SnapshotData) GetEstimatedDistanceToEmpty() *SnapshotData_EstimatedDistanceToEmpty {
	if x != nil {
		return x.xxx_hidden_EstimatedDistanceToEmpty
	}
	return nil
}

func (x *SnapshotData) GetVehicleAxles() []*VehicleAxle {
	if x != nil {
		if x.xxx_hidden_VehicleAxles != nil {
			return *x.xxx_hidden_VehicleAxles
		}
	}
	return nil
}

func (x *SnapshotData) GetTrailers() []*Trailer {
	if x != nil {
		if x.xxx_hidden_Trailers != nil {
			return *x.xxx_hidden_Trailers
		}
	}
	return nil
}

func (x *SnapshotData) SetGnssPosition(v *GnssPosition) {
	x.xxx_hidden_GnssPosition = v
}

func (x *SnapshotData) SetWheelBasedSpeedKmh(v float64) {
	x.xxx_hidden_WheelBasedSpeedKmh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 30)
}

func (x *SnapshotData) SetTachographSpeedKmh(v float64) {
	x.xxx_hidden_TachographSpeedKmh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 30)
}

func (x *SnapshotData) SetEngineSpeedRpm(v float64) {
	x.xxx_hidden_EngineSpeedRpm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 30)
}

func (x *SnapshotData) SetElectricMotorSpeedRpm(v float64) {
	x.xxx_hidden_ElectricMotorSpeedRpm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 30)
}

func (x *SnapshotData) SetIgnitionState(v IgnitionState) {
	x.xxx_hidden_IgnitionState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 30)
}

func (x *SnapshotData) SetFuelType(v FuelType) {
	x.xxx_hidden_FuelType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 30)
}

func (x *SnapshotData) SetUnknownFuelType(v string) {
	x.xxx_hidden_UnknownFuelType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 30)
}

func (x *SnapshotData) SetFuelLevel1Percent(v float64) {
	x.xxx_hidden_FuelLevel1Percent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 30)
}

func (x *SnapshotData) SetFuelLevel2Percent(v float64) {
	x.xxx_hidden_FuelLevel2Percent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 30)
}

func (x *SnapshotData) SetCatalystFuelLevelPercent(v float64) {
	x.xxx_hidden_CatalystFuelLevelPercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 30)
}

func (x *SnapshotData) SetDriver1WorkingState(v DriverWorkingState) {
	x.xxx_hidden_Driver1WorkingState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 30)
}

func (x *SnapshotData) SetUnknownDriver1WorkingState(v string) {
	x.xxx_hidden_UnknownDriver1WorkingState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 30)
}

func (x *SnapshotData) SetDriver2Id(v *DriverIdentification) {
	x.xxx_hidden_Driver2Id = v
}

func (x *SnapshotData) SetDriver2WorkingState(v DriverWorkingState) {
	x.xxx_hidden_Driver2WorkingState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 30)
}

func (x *SnapshotData) SetUnknownDriver2WorkingState(v string) {
	x.xxx_hidden_UnknownDriver2WorkingState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 30)
}

func (x *SnapshotData) SetAmbientAirTemperatureC(v float64) {
	x.xxx_hidden_AmbientAirTemperatureC = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 30)
}

func (x *SnapshotData) SetParkingBrakeSwitch(v bool) {
	x.xxx_hidden_ParkingBrakeSwitch = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 30)
}

func (x *SnapshotData) SetBatteryPackRemainingChargePercent(v float64) {
	x.xxx_hidden_BatteryPackRemainingChargePercent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 18, 30)
}

func (x *SnapshotData) SetBatteryPackChargingState(v ChargingState) {
	x.xxx_hidden_BatteryPackChargingState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 19, 30)
}

func (x *SnapshotData) SetUnknownBatteryPackChargingState(v string) {
	x.xxx_hidden_UnknownBatteryPackChargingState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 20, 30)
}

func (x *SnapshotData) SetBatteryPackChargingConnectionState(v ChargingConnectionState) {
	x.xxx_hidden_BatteryPackChargingConnectionState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 21, 30)
}

func (x *SnapshotData) SetUnknownBatteryPackChargingConnectionState(v string) {
	x.xxx_hidden_UnknownBatteryPackChargingConnectionState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 22, 30)
}

func (x *SnapshotData) SetBatteryPackChargingDevice(v ChargingDevice) {
	x.xxx_hidden_BatteryPackChargingDevice = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 23, 30)
}

func (x *SnapshotData) SetUnknownBatteryPackChargingDevice(v string) {
	x.xxx_hidden_UnknownBatteryPackChargingDevice = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 24, 30)
}

func (x *SnapshotData) SetBatteryPackChargingPowerW(v float64) {
	x.xxx_hidden_BatteryPackChargingPowerW = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 25, 30)
}

func (x *SnapshotData) SetBatteryPackEstimatedChargingCompletedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_BatteryPackEstimatedChargingCompletedTime = v
}

func (x *SnapshotData) SetEstimatedDistanceToEmpty(v *SnapshotData_EstimatedDistanceToEmpty) {
	x.xxx_hidden_EstimatedDistanceToEmpty = v
}

func (x *SnapshotData) SetVehicleAxles(v []*VehicleAxle) {
	x.xxx_hidden_VehicleAxles = &v
}

func (x *SnapshotData) SetTrailers(v []*Trailer) {
	x.xxx_hidden_Trailers = &v
}

func (x *SnapshotData) HasGnssPosition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GnssPosition != nil
}

func (x *SnapshotData) HasWheelBasedSpeedKmh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SnapshotData) HasTachographSpeedKmh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SnapshotData) HasEngineSpeedRpm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SnapshotData) HasElectricMotorSpeedRpm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SnapshotData) HasIgnitionState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SnapshotData) HasFuelType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *SnapshotData) HasUnknownFuelType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *SnapshotData) HasFuelLevel1Percent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *SnapshotData) HasFuelLevel2Percent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *SnapshotData) HasCatalystFuelLevelPercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *SnapshotData) HasDriver1WorkingState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *SnapshotData) HasUnknownDriver1WorkingState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *SnapshotData) HasDriver2Id() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Driver2Id != nil
}

func (x *SnapshotData) HasDriver2WorkingState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *SnapshotData) HasUnknownDriver2WorkingState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *SnapshotData) HasAmbientAirTemperatureC() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *SnapshotData) HasParkingBrakeSwitch() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *SnapshotData) HasBatteryPackRemainingChargePercent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 18)
}

func (x *SnapshotData) HasBatteryPackChargingState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 19)
}

func (x *SnapshotData) HasUnknownBatteryPackChargingState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 20)
}

func (x *SnapshotData) HasBatteryPackChargingConnectionState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 21)
}

func (x *SnapshotData) HasUnknownBatteryPackChargingConnectionState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 22)
}

func (x *SnapshotData) HasBatteryPackChargingDevice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 23)
}

func (x *SnapshotData) HasUnknownBatteryPackChargingDevice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 24)
}

func (x *SnapshotData) HasBatteryPackChargingPowerW() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 25)
}

func (x *SnapshotData) HasBatteryPackEstimatedChargingCompletedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BatteryPackEstimatedChargingCompletedTime != nil
}

func (x *SnapshotData) HasEstimatedDistanceToEmpty() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EstimatedDistanceToEmpty != nil
}

func (x *SnapshotData) ClearGnssPosition() {
	x.xxx_hidden_GnssPosition = nil
}

func (x *SnapshotData) ClearWheelBasedSpeedKmh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_WheelBasedSpeedKmh = 0
}

func (x *SnapshotData) ClearTachographSpeedKmh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TachographSpeedKmh = 0
}

func (x *SnapshotData) ClearEngineSpeedRpm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EngineSpeedRpm = 0
}

func (x *SnapshotData) ClearElectricMotorSpeedRpm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ElectricMotorSpeedRpm = 0
}

func (x *SnapshotData) ClearIgnitionState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_IgnitionState = IgnitionState_IGNITION_STATE_UNSPECIFIED
}

func (x *SnapshotData) ClearFuelType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_FuelType = FuelType_FUEL_TYPE_UNSPECIFIED
}

func (x *SnapshotData) ClearUnknownFuelType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_UnknownFuelType = nil
}

func (x *SnapshotData) ClearFuelLevel1Percent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_FuelLevel1Percent = 0
}

func (x *SnapshotData) ClearFuelLevel2Percent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_FuelLevel2Percent = 0
}

func (x *SnapshotData) ClearCatalystFuelLevelPercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_CatalystFuelLevelPercent = 0
}

func (x *SnapshotData) ClearDriver1WorkingState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Driver1WorkingState = DriverWorkingState_DRIVER_WORKING_STATE_UNSPECIFIED
}

func (x *SnapshotData) ClearUnknownDriver1WorkingState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_UnknownDriver1WorkingState = nil
}

func (x *SnapshotData) ClearDriver2Id() {
	x.xxx_hidden_Driver2Id = nil
}

func (x *SnapshotData) ClearDriver2WorkingState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_Driver2WorkingState = DriverWorkingState_DRIVER_WORKING_STATE_UNSPECIFIED
}

func (x *SnapshotData) ClearUnknownDriver2WorkingState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_UnknownDriver2WorkingState = nil
}

func (x *SnapshotData) ClearAmbientAirTemperatureC() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_AmbientAirTemperatureC = 0
}

func (x *SnapshotData) ClearParkingBrakeSwitch() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_ParkingBrakeSwitch = false
}

func (x *SnapshotData) ClearBatteryPackRemainingChargePercent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 18)
	x.xxx_hidden_BatteryPackRemainingChargePercent = 0
}

func (x *SnapshotData) ClearBatteryPackChargingState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 19)
	x.xxx_hidden_BatteryPackChargingState = ChargingState_CHARGING_STATE_UNSPECIFIED
}

func (x *SnapshotData) ClearUnknownBatteryPackChargingState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 20)
	x.xxx_hidden_UnknownBatteryPackChargingState = nil
}

func (x *SnapshotData) ClearBatteryPackChargingConnectionState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 21)
	x.xxx_hidden_BatteryPackChargingConnectionState = ChargingConnectionState_CHARGING_CONNECTION_STATE_UNSPECIFIED
}

func (x *SnapshotData) ClearUnknownBatteryPackChargingConnectionState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 22)
	x.xxx_hidden_UnknownBatteryPackChargingConnectionState = nil
}

func (x *SnapshotData) ClearBatteryPackChargingDevice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 23)
	x.xxx_hidden_BatteryPackChargingDevice = ChargingDevice_CHARGING_DEVICE_UNSPECIFIED
}

func (x *SnapshotData) ClearUnknownBatteryPackChargingDevice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 24)
	x.xxx_hidden_UnknownBatteryPackChargingDevice = nil
}

func (x *SnapshotData) ClearBatteryPackChargingPowerW() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 25)
	x.xxx_hidden_BatteryPackChargingPowerW = 0
}

func (x *SnapshotData) ClearBatteryPackEstimatedChargingCompletedTime() {
	x.xxx_hidden_BatteryPackEstimatedChargingCompletedTime = nil
}

func (x *SnapshotData) ClearEstimatedDistanceToEmpty() {
	x.xxx_hidden_EstimatedDistanceToEmpty = nil
}

type SnapshotData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The GNSS position of the vehicle.
	GnssPosition *GnssPosition
	// The wheel-based speed of the vehicle. (km/h)
	WheelBasedSpeedKmh *float64
	// The tachograph speed of the vehicle. (km/h)
	TachographSpeedKmh *float64
	// The engine (diesel/gaseous) speed of the vehicle. (rev/min)
	EngineSpeedRpm *float64
	// The electric motor speed of the vehicle. (rev/min)
	ElectricMotorSpeedRpm *float64
	// The ignition state of the vehicle.
	IgnitionState *IgnitionState
	// The fuel type currently being utilized by the vehicle.
	FuelType *FuelType
	// The unknown fuel type of the vehicle.
	// Provided when the fuel type is FUEL_TYPE_UNKNOWN.
	UnknownFuelType *string
	// The fuel level of the vehicle. (%) (0 - 100)
	FuelLevel1Percent *float64
	// The fuel level of the vehicle. (%) (0 - 100)
	// When Fuel Level 2 is not used, Fuel Level 1 represents
	// the total fuel in all fuel storage containers.
	//
	// When Fuel Level 2 is used,
	// Fuel Level 1 represents the fuel level in the primary or left-side fuel
	// storage container.
	FuelLevel2Percent *float64
	// The adblue level percentage
	CatalystFuelLevelPercent *float64
	// The driver working state of the vehicle.
	Driver1WorkingState *DriverWorkingState
	// The unknown driver working state of the vehicle.
	// Provided when the driver working state is DRIVER_WORKING_STATE_UNKNOWN.
	UnknownDriver1WorkingState *string
	// The driver identification of driver 2.
	Driver2Id *DriverIdentification
	// The driver working state of the vehicle.
	Driver2WorkingState *DriverWorkingState
	// The unknown driver working state of the vehicle.
	// Provided when the driver working state is DRIVER_WORKING_STATE_UNKNOWN.
	UnknownDriver2WorkingState *string
	// The ambient air temperature of the vehicle. (°C)
	AmbientAirTemperatureC *float64
	// The parking brake switch state of the vehicle.
	// In general the switch actuated by the operator's park brake control, whether
	// a pedal, lever or other control mechanism
	//
	// true - parking brake set
	// false - parking brake not set
	ParkingBrakeSwitch *bool
	// The battery pack remaining charge of the vehicle. (%) (0 - 100)
	// 0% means no charge remaining, 100% means full charge remaining.
	// Is used for hybrid vehicles as well for full electrical vehicles
	BatteryPackRemainingChargePercent *float64
	// The battery pack charging status of the vehicle.
	BatteryPackChargingState *ChargingState
	// The unknown battery pack charging status of the vehicle.
	// Provided when the battery pack charging status is CHARGING_STATE_UNKNOWN.
	UnknownBatteryPackChargingState *string
	// The battery pack charging status of the vehicle.
	BatteryPackChargingConnectionState *ChargingConnectionState
	// The unknown battery pack charging connection status of the vehicle.
	// Provided when the battery pack charging connection status is CHARGING_CONNECTION_STATE_UNKNOWN.
	UnknownBatteryPackChargingConnectionState *string
	// The battery pack charging device of the vehicle.
	BatteryPackChargingDevice *ChargingDevice
	// The unknown battery pack charging device of the vehicle.
	// Provided when the battery pack charging device is CHARGING_DEVICE_UNKNOWN.
	UnknownBatteryPackChargingDevice *string
	// The battery pack charging power of the vehicle. (W)
	BatteryPackChargingPowerW *float64
	// The estimated time when charging has reached the target level. (RFC 3339)
	BatteryPackEstimatedChargingCompletedTime *timestamppb.Timestamp
	// The estimated distance to empty of the vehicle.
	EstimatedDistanceToEmpty *SnapshotData_EstimatedDistanceToEmpty
	// The axles of the vehicle.
	VehicleAxles []*VehicleAxle
	// The trailers connected to the vehicle.
	Trailers []*Trailer
}

func (b0 SnapshotData_builder) Build() *SnapshotData {
	m0 := &SnapshotData{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_GnssPosition = b.GnssPosition
	if b.WheelBasedSpeedKmh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 30)
		x.xxx_hidden_WheelBasedSpeedKmh = *b.WheelBasedSpeedKmh
	}
	if b.TachographSpeedKmh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 30)
		x.xxx_hidden_TachographSpeedKmh = *b.TachographSpeedKmh
	}
	if b.EngineSpeedRpm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 30)
		x.xxx_hidden_EngineSpeedRpm = *b.EngineSpeedRpm
	}
	if b.ElectricMotorSpeedRpm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 30)
		x.xxx_hidden_ElectricMotorSpeedRpm = *b.ElectricMotorSpeedRpm
	}
	if b.IgnitionState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 30)
		x.xxx_hidden_IgnitionState = *b.IgnitionState
	}
	if b.FuelType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 30)
		x.xxx_hidden_FuelType = *b.FuelType
	}
	if b.UnknownFuelType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 30)
		x.xxx_hidden_UnknownFuelType = b.UnknownFuelType
	}
	if b.FuelLevel1Percent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 30)
		x.xxx_hidden_FuelLevel1Percent = *b.FuelLevel1Percent
	}
	if b.FuelLevel2Percent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 30)
		x.xxx_hidden_FuelLevel2Percent = *b.FuelLevel2Percent
	}
	if b.CatalystFuelLevelPercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 30)
		x.xxx_hidden_CatalystFuelLevelPercent = *b.CatalystFuelLevelPercent
	}
	if b.Driver1WorkingState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 30)
		x.xxx_hidden_Driver1WorkingState = *b.Driver1WorkingState
	}
	if b.UnknownDriver1WorkingState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 30)
		x.xxx_hidden_UnknownDriver1WorkingState = b.UnknownDriver1WorkingState
	}
	x.xxx_hidden_Driver2Id = b.Driver2Id
	if b.Driver2WorkingState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 30)
		x.xxx_hidden_Driver2WorkingState = *b.Driver2WorkingState
	}
	if b.UnknownDriver2WorkingState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 30)
		x.xxx_hidden_UnknownDriver2WorkingState = b.UnknownDriver2WorkingState
	}
	if b.AmbientAirTemperatureC != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 30)
		x.xxx_hidden_AmbientAirTemperatureC = *b.AmbientAirTemperatureC
	}
	if b.ParkingBrakeSwitch != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 30)
		x.xxx_hidden_ParkingBrakeSwitch = *b.ParkingBrakeSwitch
	}
	if b.BatteryPackRemainingChargePercent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 18, 30)
		x.xxx_hidden_BatteryPackRemainingChargePercent = *b.BatteryPackRemainingChargePercent
	}
	if b.BatteryPackChargingState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 19, 30)
		x.xxx_hidden_BatteryPackChargingState = *b.BatteryPackChargingState
	}
	if b.UnknownBatteryPackChargingState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 20, 30)
		x.xxx_hidden_UnknownBatteryPackChargingState = b.UnknownBatteryPackChargingState
	}
	if b.BatteryPackChargingConnectionState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 21, 30)
		x.xxx_hidden_BatteryPackChargingConnectionState = *b.BatteryPackChargingConnectionState
	}
	if b.UnknownBatteryPackChargingConnectionState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 22, 30)
		x.xxx_hidden_UnknownBatteryPackChargingConnectionState = b.UnknownBatteryPackChargingConnectionState
	}
	if b.BatteryPackChargingDevice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 23, 30)
		x.xxx_hidden_BatteryPackChargingDevice = *b.BatteryPackChargingDevice
	}
	if b.UnknownBatteryPackChargingDevice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 24, 30)
		x.xxx_hidden_UnknownBatteryPackChargingDevice = b.UnknownBatteryPackChargingDevice
	}
	if b.BatteryPackChargingPowerW != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 25, 30)
		x.xxx_hidden_BatteryPackChargingPowerW = *b.BatteryPackChargingPowerW
	}
	x.xxx_hidden_BatteryPackEstimatedChargingCompletedTime = b.BatteryPackEstimatedChargingCompletedTime
	x.xxx_hidden_EstimatedDistanceToEmpty = b.EstimatedDistanceToEmpty
	x.xxx_hidden_VehicleAxles = &b.VehicleAxles
	x.xxx_hidden_Trailers = &b.Trailers
	return m0
}

// The estimated distance to empty of the vehicle.
type SnapshotData_EstimatedDistanceToEmpty struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TotalM       float64                `protobuf:"fixed64,1,opt,name=total_m,json=totalM"`
	xxx_hidden_FuelM        float64                `protobuf:"fixed64,2,opt,name=fuel_m,json=fuelM"`
	xxx_hidden_GasM         float64                `protobuf:"fixed64,3,opt,name=gas_m,json=gasM"`
	xxx_hidden_BatteryPackM float64                `protobuf:"fixed64,4,opt,name=battery_pack_m,json=batteryPackM"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SnapshotData_EstimatedDistanceToEmpty) Reset() {
	*x = SnapshotData_EstimatedDistanceToEmpty{}
	mi := &file_wayplatform_connect_rfms_v5_snapshot_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotData_EstimatedDistanceToEmpty) ProtoMessage() {}

func (x *SnapshotData_EstimatedDistanceToEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_rfms_v5_snapshot_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) GetTotalM() float64 {
	if x != nil {
		return x.xxx_hidden_TotalM
	}
	return 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) GetFuelM() float64 {
	if x != nil {
		return x.xxx_hidden_FuelM
	}
	return 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) GetGasM() float64 {
	if x != nil {
		return x.xxx_hidden_GasM
	}
	return 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) GetBatteryPackM() float64 {
	if x != nil {
		return x.xxx_hidden_BatteryPackM
	}
	return 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) SetTotalM(v float64) {
	x.xxx_hidden_TotalM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) SetFuelM(v float64) {
	x.xxx_hidden_FuelM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) SetGasM(v float64) {
	x.xxx_hidden_GasM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) SetBatteryPackM(v float64) {
	x.xxx_hidden_BatteryPackM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) HasTotalM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) HasFuelM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) HasGasM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) HasBatteryPackM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SnapshotData_EstimatedDistanceToEmpty) ClearTotalM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TotalM = 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) ClearFuelM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FuelM = 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) ClearGasM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_GasM = 0
}

func (x *SnapshotData_EstimatedDistanceToEmpty) ClearBatteryPackM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BatteryPackM = 0
}

type SnapshotData_EstimatedDistanceToEmpty_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The estimated distance to empty of the vehicle. (m)
	TotalM *float64
	// The estimated distance to empty of the vehicle. (m)
	FuelM *float64
	// The estimated distance to empty of the vehicle. (m)
	GasM *float64
	// The estimated distance to empty of the vehicle. (m)
	BatteryPackM *float64
}

func (b0 SnapshotData_EstimatedDistanceToEmpty_builder) Build() *SnapshotData_EstimatedDistanceToEmpty {
	m0 := &SnapshotData_EstimatedDistanceToEmpty{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TotalM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_TotalM = *b.TotalM
	}
	if b.FuelM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_FuelM = *b.FuelM
	}
	if b.GasM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_GasM = *b.GasM
	}
	if b.BatteryPackM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_BatteryPackM = *b.BatteryPackM
	}
	return m0
}

var File_wayplatform_connect_rfms_v5_snapshot_data_proto protoreflect.FileDescriptor

const file_wayplatform_connect_rfms_v5_snapshot_data_proto_rawDesc = "" +
	"\n" +
	"/wayplatform/connect/rfms/v5/snapshot_data.proto\x12\x1bwayplatform.connect.rfms.v5\x1a\x1fgoogle/protobuf/timestamp.proto\x1a;wayplatform/connect/rfms/v5/charging_connection_state.proto\x1a1wayplatform/connect/rfms/v5/charging_device.proto\x1a0wayplatform/connect/rfms/v5/charging_state.proto\x1a7wayplatform/connect/rfms/v5/driver_identification.proto\x1a6wayplatform/connect/rfms/v5/driver_working_state.proto\x1a+wayplatform/connect/rfms/v5/fuel_type.proto\x1a/wayplatform/connect/rfms/v5/gnss_position.proto\x1a0wayplatform/connect/rfms/v5/ignition_state.proto\x1a)wayplatform/connect/rfms/v5/trailer.proto\x1a.wayplatform/connect/rfms/v5/vehicle_axle.proto\"\xac\x13\n" +
	"\fSnapshotData\x12N\n" +
	"\rgnss_position\x18\x01 \x01(\v2).wayplatform.connect.rfms.v5.GnssPositionR\fgnssPosition\x121\n" +
	"\x15wheel_based_speed_kmh\x18\x02 \x01(\x01R\x12wheelBasedSpeedKmh\x120\n" +
	"\x14tachograph_speed_kmh\x18\x03 \x01(\x01R\x12tachographSpeedKmh\x12(\n" +
	"\x10engine_speed_rpm\x18\x04 \x01(\x01R\x0eengineSpeedRpm\x127\n" +
	"\x18electric_motor_speed_rpm\x18\x05 \x01(\x01R\x15electricMotorSpeedRpm\x12Q\n" +
	"\x0eignition_state\x18\x06 \x01(\x0e2*.wayplatform.connect.rfms.v5.IgnitionStateR\rignitionState\x12B\n" +
	"\tfuel_type\x18\a \x01(\x0e2%.wayplatform.connect.rfms.v5.FuelTypeR\bfuelType\x12*\n" +
	"\x11unknown_fuel_type\x18\b \x01(\tR\x0funknownFuelType\x12.\n" +
	"\x13fuel_level1_percent\x18\t \x01(\x01R\x11fuelLevel1Percent\x12.\n" +
	"\x13fuel_level2_percent\x18\n" +
	" \x01(\x01R\x11fuelLevel2Percent\x12=\n" +
	"\x1bcatalyst_fuel_level_percent\x18\v \x01(\x01R\x18catalystFuelLevelPercent\x12c\n" +
	"\x15driver1_working_state\x18\f \x01(\x0e2/.wayplatform.connect.rfms.v5.DriverWorkingStateR\x13driver1WorkingState\x12A\n" +
	"\x1dunknown_driver1_working_state\x18\r \x01(\tR\x1aunknownDriver1WorkingState\x12P\n" +
	"\n" +
	"driver2_id\x18\x0e \x01(\v21.wayplatform.connect.rfms.v5.DriverIdentificationR\tdriver2Id\x12c\n" +
	"\x15driver2_working_state\x18\x0f \x01(\x0e2/.wayplatform.connect.rfms.v5.DriverWorkingStateR\x13driver2WorkingState\x12A\n" +
	"\x1dunknown_driver2_working_state\x18\x10 \x01(\tR\x1aunknownDriver2WorkingState\x129\n" +
	"\x19ambient_air_temperature_c\x18\x11 \x01(\x01R\x16ambientAirTemperatureC\x120\n" +
	"\x14parking_brake_switch\x18\x12 \x01(\bR\x12parkingBrakeSwitch\x12P\n" +
	"%battery_pack_remaining_charge_percent\x18\x13 \x01(\x01R!batteryPackRemainingChargePercent\x12i\n" +
	"\x1bbattery_pack_charging_state\x18\x14 \x01(\x0e2*.wayplatform.connect.rfms.v5.ChargingStateR\x18batteryPackChargingState\x12L\n" +
	"#unknown_battery_pack_charging_state\x18\x15 \x01(\tR\x1funknownBatteryPackChargingState\x12\x88\x01\n" +
	"&battery_pack_charging_connection_state\x18\x16 \x01(\x0e24.wayplatform.connect.rfms.v5.ChargingConnectionStateR\"batteryPackChargingConnectionState\x12a\n" +
	".unknown_battery_pack_charging_connection_state\x18\x17 \x01(\tR)unknownBatteryPackChargingConnectionState\x12l\n" +
	"\x1cbattery_pack_charging_device\x18\x18 \x01(\x0e2+.wayplatform.connect.rfms.v5.ChargingDeviceR\x19batteryPackChargingDevice\x12N\n" +
	"$unknown_battery_pack_charging_device\x18\x19 \x01(\tR unknownBatteryPackChargingDevice\x12@\n" +
	"\x1dbattery_pack_charging_power_w\x18\x1a \x01(\x01R\x19batteryPackChargingPowerW\x12}\n" +
	".battery_pack_estimated_charging_completed_time\x18\x1b \x01(\v2\x1a.google.protobuf.TimestampR)batteryPackEstimatedChargingCompletedTime\x12\x81\x01\n" +
	"\x1bestimated_distance_to_empty\x18\x1c \x01(\v2B.wayplatform.connect.rfms.v5.SnapshotData.EstimatedDistanceToEmptyR\x18estimatedDistanceToEmpty\x12M\n" +
	"\rvehicle_axles\x18\x1d \x03(\v2(.wayplatform.connect.rfms.v5.VehicleAxleR\fvehicleAxles\x12@\n" +
	"\btrailers\x18\x1e \x03(\v2$.wayplatform.connect.rfms.v5.TrailerR\btrailers\x1a\x85\x01\n" +
	"\x18EstimatedDistanceToEmpty\x12\x17\n" +
	"\atotal_m\x18\x01 \x01(\x01R\x06totalM\x12\x15\n" +
	"\x06fuel_m\x18\x02 \x01(\x01R\x05fuelM\x12\x13\n" +
	"\x05gas_m\x18\x03 \x01(\x01R\x04gasM\x12$\n" +
	"\x0ebattery_pack_m\x18\x04 \x01(\x01R\fbatteryPackMB\x94\x02\n" +
	"\x1fcom.wayplatform.connect.rfms.v5B\x11SnapshotDataProtoP\x01ZOgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/connect/rfms/v5;rfmsv5\xa2\x02\x03WCR\xaa\x02\x1bWayplatform.Connect.Rfms.V5\xca\x02\x1bWayplatform\\Connect\\Rfms\\V5\xe2\x02'Wayplatform\\Connect\\Rfms\\V5\\GPBMetadata\xea\x02\x1eWayplatform::Connect::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_connect_rfms_v5_snapshot_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_rfms_v5_snapshot_data_proto_goTypes = []any{
	(*SnapshotData)(nil),                          // 0: wayplatform.connect.rfms.v5.SnapshotData
	(*SnapshotData_EstimatedDistanceToEmpty)(nil), // 1: wayplatform.connect.rfms.v5.SnapshotData.EstimatedDistanceToEmpty
	(*GnssPosition)(nil),                          // 2: wayplatform.connect.rfms.v5.GnssPosition
	(IgnitionState)(0),                            // 3: wayplatform.connect.rfms.v5.IgnitionState
	(FuelType)(0),                                 // 4: wayplatform.connect.rfms.v5.FuelType
	(DriverWorkingState)(0),                       // 5: wayplatform.connect.rfms.v5.DriverWorkingState
	(*DriverIdentification)(nil),                  // 6: wayplatform.connect.rfms.v5.DriverIdentification
	(ChargingState)(0),                            // 7: wayplatform.connect.rfms.v5.ChargingState
	(ChargingConnectionState)(0),                  // 8: wayplatform.connect.rfms.v5.ChargingConnectionState
	(ChargingDevice)(0),                           // 9: wayplatform.connect.rfms.v5.ChargingDevice
	(*timestamppb.Timestamp)(nil),                 // 10: google.protobuf.Timestamp
	(*VehicleAxle)(nil),                           // 11: wayplatform.connect.rfms.v5.VehicleAxle
	(*Trailer)(nil),                               // 12: wayplatform.connect.rfms.v5.Trailer
}
var file_wayplatform_connect_rfms_v5_snapshot_data_proto_depIdxs = []int32{
	2,  // 0: wayplatform.connect.rfms.v5.SnapshotData.gnss_position:type_name -> wayplatform.connect.rfms.v5.GnssPosition
	3,  // 1: wayplatform.connect.rfms.v5.SnapshotData.ignition_state:type_name -> wayplatform.connect.rfms.v5.IgnitionState
	4,  // 2: wayplatform.connect.rfms.v5.SnapshotData.fuel_type:type_name -> wayplatform.connect.rfms.v5.FuelType
	5,  // 3: wayplatform.connect.rfms.v5.SnapshotData.driver1_working_state:type_name -> wayplatform.connect.rfms.v5.DriverWorkingState
	6,  // 4: wayplatform.connect.rfms.v5.SnapshotData.driver2_id:type_name -> wayplatform.connect.rfms.v5.DriverIdentification
	5,  // 5: wayplatform.connect.rfms.v5.SnapshotData.driver2_working_state:type_name -> wayplatform.connect.rfms.v5.DriverWorkingState
	7,  // 6: wayplatform.connect.rfms.v5.SnapshotData.battery_pack_charging_state:type_name -> wayplatform.connect.rfms.v5.ChargingState
	8,  // 7: wayplatform.connect.rfms.v5.SnapshotData.battery_pack_charging_connection_state:type_name -> wayplatform.connect.rfms.v5.ChargingConnectionState
	9,  // 8: wayplatform.connect.rfms.v5.SnapshotData.battery_pack_charging_device:type_name -> wayplatform.connect.rfms.v5.ChargingDevice
	10, // 9: wayplatform.connect.rfms.v5.SnapshotData.battery_pack_estimated_charging_completed_time:type_name -> google.protobuf.Timestamp
	1,  // 10: wayplatform.connect.rfms.v5.SnapshotData.estimated_distance_to_empty:type_name -> wayplatform.connect.rfms.v5.SnapshotData.EstimatedDistanceToEmpty
	11, // 11: wayplatform.connect.rfms.v5.SnapshotData.vehicle_axles:type_name -> wayplatform.connect.rfms.v5.VehicleAxle
	12, // 12: wayplatform.connect.rfms.v5.SnapshotData.trailers:type_name -> wayplatform.connect.rfms.v5.Trailer
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_rfms_v5_snapshot_data_proto_init() }
func file_wayplatform_connect_rfms_v5_snapshot_data_proto_init() {
	if File_wayplatform_connect_rfms_v5_snapshot_data_proto != nil {
		return
	}
	file_wayplatform_connect_rfms_v5_charging_connection_state_proto_init()
	file_wayplatform_connect_rfms_v5_charging_device_proto_init()
	file_wayplatform_connect_rfms_v5_charging_state_proto_init()
	file_wayplatform_connect_rfms_v5_driver_identification_proto_init()
	file_wayplatform_connect_rfms_v5_driver_working_state_proto_init()
	file_wayplatform_connect_rfms_v5_fuel_type_proto_init()
	file_wayplatform_connect_rfms_v5_gnss_position_proto_init()
	file_wayplatform_connect_rfms_v5_ignition_state_proto_init()
	file_wayplatform_connect_rfms_v5_trailer_proto_init()
	file_wayplatform_connect_rfms_v5_vehicle_axle_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_rfms_v5_snapshot_data_proto_rawDesc), len(file_wayplatform_connect_rfms_v5_snapshot_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_rfms_v5_snapshot_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_rfms_v5_snapshot_data_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_rfms_v5_snapshot_data_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_rfms_v5_snapshot_data_proto = out.File
	file_wayplatform_connect_rfms_v5_snapshot_data_proto_goTypes = nil
	file_wayplatform_connect_rfms_v5_snapshot_data_proto_depIdxs = nil
}
