// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/rfms/v5/driver_identification.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Driver authentication equipment.
type DriverIdentification_Tacho_AuthenticationEquipment int32

const (
	// Default value. This value is not used.
	DriverIdentification_Tacho_AUTHENTICATION_EQUIPMENT_UNSPECIFIED DriverIdentification_Tacho_AuthenticationEquipment = 0
	// Unknown authentication equipment.
	DriverIdentification_Tacho_AUTHENTICATION_EQUIPMENT_UNKNOWN DriverIdentification_Tacho_AuthenticationEquipment = 1
	// Driver card.
	DriverIdentification_Tacho_DRIVER_CARD DriverIdentification_Tacho_AuthenticationEquipment = 2
	// Control card.
	DriverIdentification_Tacho_CONTROL_CARD DriverIdentification_Tacho_AuthenticationEquipment = 3
	// Company card.
	DriverIdentification_Tacho_COMPANY_CARD DriverIdentification_Tacho_AuthenticationEquipment = 4
	// Manufacturing card.
	DriverIdentification_Tacho_MANUFACTURING_CARD DriverIdentification_Tacho_AuthenticationEquipment = 5
	// Vehicle unit.
	DriverIdentification_Tacho_VEHICLE_UNIT DriverIdentification_Tacho_AuthenticationEquipment = 6
	// Motion sensor.
	DriverIdentification_Tacho_MOTION_SENSOR DriverIdentification_Tacho_AuthenticationEquipment = 7
)

// Enum value maps for DriverIdentification_Tacho_AuthenticationEquipment.
var (
	DriverIdentification_Tacho_AuthenticationEquipment_name = map[int32]string{
		0: "AUTHENTICATION_EQUIPMENT_UNSPECIFIED",
		1: "AUTHENTICATION_EQUIPMENT_UNKNOWN",
		2: "DRIVER_CARD",
		3: "CONTROL_CARD",
		4: "COMPANY_CARD",
		5: "MANUFACTURING_CARD",
		6: "VEHICLE_UNIT",
		7: "MOTION_SENSOR",
	}
	DriverIdentification_Tacho_AuthenticationEquipment_value = map[string]int32{
		"AUTHENTICATION_EQUIPMENT_UNSPECIFIED": 0,
		"AUTHENTICATION_EQUIPMENT_UNKNOWN":     1,
		"DRIVER_CARD":                          2,
		"CONTROL_CARD":                         3,
		"COMPANY_CARD":                         4,
		"MANUFACTURING_CARD":                   5,
		"VEHICLE_UNIT":                         6,
		"MOTION_SENSOR":                        7,
	}
)

func (x DriverIdentification_Tacho_AuthenticationEquipment) Enum() *DriverIdentification_Tacho_AuthenticationEquipment {
	p := new(DriverIdentification_Tacho_AuthenticationEquipment)
	*p = x
	return p
}

func (x DriverIdentification_Tacho_AuthenticationEquipment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriverIdentification_Tacho_AuthenticationEquipment) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_rfms_v5_driver_identification_proto_enumTypes[0].Descriptor()
}

func (DriverIdentification_Tacho_AuthenticationEquipment) Type() protoreflect.EnumType {
	return &file_wayplatform_rfms_v5_driver_identification_proto_enumTypes[0]
}

func (x DriverIdentification_Tacho_AuthenticationEquipment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// The identification of a driver.
type DriverIdentification struct {
	state            protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Tacho *DriverIdentification_Tacho `protobuf:"bytes,1,opt,name=tacho"`
	xxx_hidden_Oem   *DriverIdentification_Oem   `protobuf:"bytes,2,opt,name=oem"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DriverIdentification) Reset() {
	*x = DriverIdentification{}
	mi := &file_wayplatform_rfms_v5_driver_identification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverIdentification) ProtoMessage() {}

func (x *DriverIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_rfms_v5_driver_identification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverIdentification) GetTacho() *DriverIdentification_Tacho {
	if x != nil {
		return x.xxx_hidden_Tacho
	}
	return nil
}

func (x *DriverIdentification) GetOem() *DriverIdentification_Oem {
	if x != nil {
		return x.xxx_hidden_Oem
	}
	return nil
}

func (x *DriverIdentification) SetTacho(v *DriverIdentification_Tacho) {
	x.xxx_hidden_Tacho = v
}

func (x *DriverIdentification) SetOem(v *DriverIdentification_Oem) {
	x.xxx_hidden_Oem = v
}

func (x *DriverIdentification) HasTacho() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Tacho != nil
}

func (x *DriverIdentification) HasOem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Oem != nil
}

func (x *DriverIdentification) ClearTacho() {
	x.xxx_hidden_Tacho = nil
}

func (x *DriverIdentification) ClearOem() {
	x.xxx_hidden_Oem = nil
}

type DriverIdentification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The identification of a driver using the Tacho card.
	Tacho *DriverIdentification_Tacho
	// The identification of a driver using an OEM specific method.
	Oem *DriverIdentification_Oem
}

func (b0 DriverIdentification_builder) Build() *DriverIdentification {
	m0 := &DriverIdentification{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Tacho = b.Tacho
	x.xxx_hidden_Oem = b.Oem
	return m0
}

// Identification of a driver using the Tacho card.
type DriverIdentification_Tacho struct {
	state                                     protoimpl.MessageState                             `protogen:"opaque.v1"`
	xxx_hidden_DriverId                       *string                                            `protobuf:"bytes,1,opt,name=driver_id,json=driverId"`
	xxx_hidden_CardIssuingMemberState         *string                                            `protobuf:"bytes,2,opt,name=card_issuing_member_state,json=cardIssuingMemberState"`
	xxx_hidden_AuthenticationEquipment        DriverIdentification_Tacho_AuthenticationEquipment `protobuf:"varint,3,opt,name=authentication_equipment,json=authenticationEquipment,enum=wayplatform.rfms.v5.DriverIdentification_Tacho_AuthenticationEquipment"`
	xxx_hidden_UnknownAuthenticationEquipment *string                                            `protobuf:"bytes,4,opt,name=unknown_authentication_equipment,json=unknownAuthenticationEquipment"`
	xxx_hidden_CardReplacementIndex           *string                                            `protobuf:"bytes,5,opt,name=card_replacement_index,json=cardReplacementIndex"`
	xxx_hidden_CardRenewalIndex               *string                                            `protobuf:"bytes,6,opt,name=card_renewal_index,json=cardRenewalIndex"`
	XXX_raceDetectHookData                    protoimpl.RaceDetectHookData
	XXX_presence                              [1]uint32
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *DriverIdentification_Tacho) Reset() {
	*x = DriverIdentification_Tacho{}
	mi := &file_wayplatform_rfms_v5_driver_identification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverIdentification_Tacho) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverIdentification_Tacho) ProtoMessage() {}

func (x *DriverIdentification_Tacho) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_rfms_v5_driver_identification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverIdentification_Tacho) GetDriverId() string {
	if x != nil {
		if x.xxx_hidden_DriverId != nil {
			return *x.xxx_hidden_DriverId
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Tacho) GetCardIssuingMemberState() string {
	if x != nil {
		if x.xxx_hidden_CardIssuingMemberState != nil {
			return *x.xxx_hidden_CardIssuingMemberState
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Tacho) GetAuthenticationEquipment() DriverIdentification_Tacho_AuthenticationEquipment {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_AuthenticationEquipment
		}
	}
	return DriverIdentification_Tacho_AUTHENTICATION_EQUIPMENT_UNSPECIFIED
}

func (x *DriverIdentification_Tacho) GetUnknownAuthenticationEquipment() string {
	if x != nil {
		if x.xxx_hidden_UnknownAuthenticationEquipment != nil {
			return *x.xxx_hidden_UnknownAuthenticationEquipment
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Tacho) GetCardReplacementIndex() string {
	if x != nil {
		if x.xxx_hidden_CardReplacementIndex != nil {
			return *x.xxx_hidden_CardReplacementIndex
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Tacho) GetCardRenewalIndex() string {
	if x != nil {
		if x.xxx_hidden_CardRenewalIndex != nil {
			return *x.xxx_hidden_CardRenewalIndex
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Tacho) SetDriverId(v string) {
	x.xxx_hidden_DriverId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DriverIdentification_Tacho) SetCardIssuingMemberState(v string) {
	x.xxx_hidden_CardIssuingMemberState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DriverIdentification_Tacho) SetAuthenticationEquipment(v DriverIdentification_Tacho_AuthenticationEquipment) {
	x.xxx_hidden_AuthenticationEquipment = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DriverIdentification_Tacho) SetUnknownAuthenticationEquipment(v string) {
	x.xxx_hidden_UnknownAuthenticationEquipment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *DriverIdentification_Tacho) SetCardReplacementIndex(v string) {
	x.xxx_hidden_CardReplacementIndex = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *DriverIdentification_Tacho) SetCardRenewalIndex(v string) {
	x.xxx_hidden_CardRenewalIndex = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *DriverIdentification_Tacho) HasDriverId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverIdentification_Tacho) HasCardIssuingMemberState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverIdentification_Tacho) HasAuthenticationEquipment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DriverIdentification_Tacho) HasUnknownAuthenticationEquipment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DriverIdentification_Tacho) HasCardReplacementIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DriverIdentification_Tacho) HasCardRenewalIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DriverIdentification_Tacho) ClearDriverId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DriverId = nil
}

func (x *DriverIdentification_Tacho) ClearCardIssuingMemberState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CardIssuingMemberState = nil
}

func (x *DriverIdentification_Tacho) ClearAuthenticationEquipment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AuthenticationEquipment = DriverIdentification_Tacho_AUTHENTICATION_EQUIPMENT_UNSPECIFIED
}

func (x *DriverIdentification_Tacho) ClearUnknownAuthenticationEquipment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UnknownAuthenticationEquipment = nil
}

func (x *DriverIdentification_Tacho) ClearCardReplacementIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CardReplacementIndex = nil
}

func (x *DriverIdentification_Tacho) ClearCardRenewalIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CardRenewalIndex = nil
}

type DriverIdentification_Tacho_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The unique identification of a driver in a Member State.
	// This fields is formatted according the definition for driverIdentification
	// in COMMISSION REGULATION (EC) No 1360/2002 Annex 1b
	DriverId *string
	// The country alpha code of the Member State having issued the card.
	// This fields is formatted according the definition for NationAlpha
	// in COMMISSION REGULATION (EC) No 1360/2002 Annex 1b
	CardIssuingMemberState *string
	// Code to distinguish different types of equipment for the
	// tachograph application. See description of the field 'DriverAuthenticationEquipment'
	// in COMMISSION REGULATION (EC) No 1360/2002 Annex 1b
	AuthenticationEquipment *DriverIdentification_Tacho_AuthenticationEquipment
	// The unknown authentication equipment of the driver.
	// This is used when authentication_equipment is AUTHENTICATION_EQUIPMENT_UNKNOWN.
	UnknownAuthenticationEquipment *string
	// A card replacement index. This fields is formatted according
	// the definition for CardReplacementIndex (chap 2.26) in: COMMISSION
	// REGULATION (EC) No 1360/2002 Annex 1b
	CardReplacementIndex *string
	// A card renewal index. This fields is formatted according
	// the definition for CardRenewalIndex (chap 2.25) in: COMMISSION
	// REGULATION (EC) No 1360/2002 Annex 1b
	CardRenewalIndex *string
}

func (b0 DriverIdentification_Tacho_builder) Build() *DriverIdentification_Tacho {
	m0 := &DriverIdentification_Tacho{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DriverId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_DriverId = b.DriverId
	}
	if b.CardIssuingMemberState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_CardIssuingMemberState = b.CardIssuingMemberState
	}
	if b.AuthenticationEquipment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_AuthenticationEquipment = *b.AuthenticationEquipment
	}
	if b.UnknownAuthenticationEquipment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_UnknownAuthenticationEquipment = b.UnknownAuthenticationEquipment
	}
	if b.CardReplacementIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_CardReplacementIndex = b.CardReplacementIndex
	}
	if b.CardRenewalIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_CardRenewalIndex = b.CardRenewalIndex
	}
	return m0
}

// Identification of a driver using an OEM specific method.
type DriverIdentification_Oem struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IdType      *string                `protobuf:"bytes,1,opt,name=id_type,json=idType"`
	xxx_hidden_DriverId    *string                `protobuf:"bytes,2,opt,name=driver_id,json=driverId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DriverIdentification_Oem) Reset() {
	*x = DriverIdentification_Oem{}
	mi := &file_wayplatform_rfms_v5_driver_identification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverIdentification_Oem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverIdentification_Oem) ProtoMessage() {}

func (x *DriverIdentification_Oem) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_rfms_v5_driver_identification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverIdentification_Oem) GetIdType() string {
	if x != nil {
		if x.xxx_hidden_IdType != nil {
			return *x.xxx_hidden_IdType
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Oem) GetDriverId() string {
	if x != nil {
		if x.xxx_hidden_DriverId != nil {
			return *x.xxx_hidden_DriverId
		}
		return ""
	}
	return ""
}

func (x *DriverIdentification_Oem) SetIdType(v string) {
	x.xxx_hidden_IdType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DriverIdentification_Oem) SetDriverId(v string) {
	x.xxx_hidden_DriverId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DriverIdentification_Oem) HasIdType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverIdentification_Oem) HasDriverId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverIdentification_Oem) ClearIdType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_IdType = nil
}

func (x *DriverIdentification_Oem) ClearDriverId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DriverId = nil
}

type DriverIdentification_Oem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// An optional id type (e.g. pin, USB, encrypted EU id...).
	IdType *string
	// An OEM specific driver id.
	DriverId *string
}

func (b0 DriverIdentification_Oem_builder) Build() *DriverIdentification_Oem {
	m0 := &DriverIdentification_Oem{}
	b, x := &b0, m0
	_, _ = b, x
	if b.IdType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_IdType = b.IdType
	}
	if b.DriverId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_DriverId = b.DriverId
	}
	return m0
}

var File_wayplatform_rfms_v5_driver_identification_proto protoreflect.FileDescriptor

const file_wayplatform_rfms_v5_driver_identification_proto_rawDesc = "" +
	"\n" +
	"/wayplatform/rfms/v5/driver_identification.proto\x12\x13wayplatform.rfms.v5\"\xce\x06\n" +
	"\x14DriverIdentification\x12E\n" +
	"\x05tacho\x18\x01 \x01(\v2/.wayplatform.rfms.v5.DriverIdentification.TachoR\x05tacho\x12?\n" +
	"\x03oem\x18\x02 \x01(\v2-.wayplatform.rfms.v5.DriverIdentification.OemR\x03oem\x1a\xf0\x04\n" +
	"\x05Tacho\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x129\n" +
	"\x19card_issuing_member_state\x18\x02 \x01(\tR\x16cardIssuingMemberState\x12\x82\x01\n" +
	"\x18authentication_equipment\x18\x03 \x01(\x0e2G.wayplatform.rfms.v5.DriverIdentification.Tacho.AuthenticationEquipmentR\x17authenticationEquipment\x12H\n" +
	" unknown_authentication_equipment\x18\x04 \x01(\tR\x1eunknownAuthenticationEquipment\x124\n" +
	"\x16card_replacement_index\x18\x05 \x01(\tR\x14cardReplacementIndex\x12,\n" +
	"\x12card_renewal_index\x18\x06 \x01(\tR\x10cardRenewalIndex\"\xdb\x01\n" +
	"\x17AuthenticationEquipment\x12(\n" +
	"$AUTHENTICATION_EQUIPMENT_UNSPECIFIED\x10\x00\x12$\n" +
	" AUTHENTICATION_EQUIPMENT_UNKNOWN\x10\x01\x12\x0f\n" +
	"\vDRIVER_CARD\x10\x02\x12\x10\n" +
	"\fCONTROL_CARD\x10\x03\x12\x10\n" +
	"\fCOMPANY_CARD\x10\x04\x12\x16\n" +
	"\x12MANUFACTURING_CARD\x10\x05\x12\x10\n" +
	"\fVEHICLE_UNIT\x10\x06\x12\x11\n" +
	"\rMOTION_SENSOR\x10\a\x1a;\n" +
	"\x03Oem\x12\x17\n" +
	"\aid_type\x18\x01 \x01(\tR\x06idType\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverIdB\xeb\x01\n" +
	"\x17com.wayplatform.rfms.v5B\x19DriverIdentificationProtoP\x01ZGgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/rfms/v5;rfmsv5\xa2\x02\x03WRX\xaa\x02\x13Wayplatform.Rfms.V5\xca\x02\x13Wayplatform\\Rfms\\V5\xe2\x02\x1fWayplatform\\Rfms\\V5\\GPBMetadata\xea\x02\x15Wayplatform::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_rfms_v5_driver_identification_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_rfms_v5_driver_identification_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wayplatform_rfms_v5_driver_identification_proto_goTypes = []any{
	(DriverIdentification_Tacho_AuthenticationEquipment)(0), // 0: wayplatform.rfms.v5.DriverIdentification.Tacho.AuthenticationEquipment
	(*DriverIdentification)(nil),                            // 1: wayplatform.rfms.v5.DriverIdentification
	(*DriverIdentification_Tacho)(nil),                      // 2: wayplatform.rfms.v5.DriverIdentification.Tacho
	(*DriverIdentification_Oem)(nil),                        // 3: wayplatform.rfms.v5.DriverIdentification.Oem
}
var file_wayplatform_rfms_v5_driver_identification_proto_depIdxs = []int32{
	2, // 0: wayplatform.rfms.v5.DriverIdentification.tacho:type_name -> wayplatform.rfms.v5.DriverIdentification.Tacho
	3, // 1: wayplatform.rfms.v5.DriverIdentification.oem:type_name -> wayplatform.rfms.v5.DriverIdentification.Oem
	0, // 2: wayplatform.rfms.v5.DriverIdentification.Tacho.authentication_equipment:type_name -> wayplatform.rfms.v5.DriverIdentification.Tacho.AuthenticationEquipment
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_wayplatform_rfms_v5_driver_identification_proto_init() }
func file_wayplatform_rfms_v5_driver_identification_proto_init() {
	if File_wayplatform_rfms_v5_driver_identification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_rfms_v5_driver_identification_proto_rawDesc), len(file_wayplatform_rfms_v5_driver_identification_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_rfms_v5_driver_identification_proto_goTypes,
		DependencyIndexes: file_wayplatform_rfms_v5_driver_identification_proto_depIdxs,
		EnumInfos:         file_wayplatform_rfms_v5_driver_identification_proto_enumTypes,
		MessageInfos:      file_wayplatform_rfms_v5_driver_identification_proto_msgTypes,
	}.Build()
	File_wayplatform_rfms_v5_driver_identification_proto = out.File
	file_wayplatform_rfms_v5_driver_identification_proto_goTypes = nil
	file_wayplatform_rfms_v5_driver_identification_proto_depIdxs = nil
}
