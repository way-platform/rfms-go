// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/rfms/v5/gnss_position.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A GNSS position.
type GnssPosition struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Time        int64                  `protobuf:"varint,1,opt,name=time"`
	xxx_hidden_Latitude    float64                `protobuf:"fixed64,2,opt,name=latitude"`
	xxx_hidden_Longitude   float64                `protobuf:"fixed64,3,opt,name=longitude"`
	xxx_hidden_HeadingDeg  float64                `protobuf:"fixed64,4,opt,name=heading_deg,json=headingDeg"`
	xxx_hidden_AltitudeM   float64                `protobuf:"fixed64,5,opt,name=altitude_m,json=altitudeM"`
	xxx_hidden_SpeedKmh    float64                `protobuf:"fixed64,6,opt,name=speed_kmh,json=speedKmh"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GnssPosition) Reset() {
	*x = GnssPosition{}
	mi := &file_wayplatform_rfms_v5_gnss_position_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GnssPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnssPosition) ProtoMessage() {}

func (x *GnssPosition) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_rfms_v5_gnss_position_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GnssPosition) GetTime() int64 {
	if x != nil {
		return x.xxx_hidden_Time
	}
	return 0
}

func (x *GnssPosition) GetLatitude() float64 {
	if x != nil {
		return x.xxx_hidden_Latitude
	}
	return 0
}

func (x *GnssPosition) GetLongitude() float64 {
	if x != nil {
		return x.xxx_hidden_Longitude
	}
	return 0
}

func (x *GnssPosition) GetHeadingDeg() float64 {
	if x != nil {
		return x.xxx_hidden_HeadingDeg
	}
	return 0
}

func (x *GnssPosition) GetAltitudeM() float64 {
	if x != nil {
		return x.xxx_hidden_AltitudeM
	}
	return 0
}

func (x *GnssPosition) GetSpeedKmh() float64 {
	if x != nil {
		return x.xxx_hidden_SpeedKmh
	}
	return 0
}

func (x *GnssPosition) SetTime(v int64) {
	x.xxx_hidden_Time = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *GnssPosition) SetLatitude(v float64) {
	x.xxx_hidden_Latitude = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *GnssPosition) SetLongitude(v float64) {
	x.xxx_hidden_Longitude = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *GnssPosition) SetHeadingDeg(v float64) {
	x.xxx_hidden_HeadingDeg = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *GnssPosition) SetAltitudeM(v float64) {
	x.xxx_hidden_AltitudeM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *GnssPosition) SetSpeedKmh(v float64) {
	x.xxx_hidden_SpeedKmh = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *GnssPosition) HasTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GnssPosition) HasLatitude() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GnssPosition) HasLongitude() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GnssPosition) HasHeadingDeg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GnssPosition) HasAltitudeM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *GnssPosition) HasSpeedKmh() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *GnssPosition) ClearTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Time = 0
}

func (x *GnssPosition) ClearLatitude() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Latitude = 0
}

func (x *GnssPosition) ClearLongitude() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Longitude = 0
}

func (x *GnssPosition) ClearHeadingDeg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_HeadingDeg = 0
}

func (x *GnssPosition) ClearAltitudeM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AltitudeM = 0
}

func (x *GnssPosition) ClearSpeedKmh() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SpeedKmh = 0
}

type GnssPosition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The date and time the GNSS position was recorded. (Unix microseconds)
	Time *int64
	// The latitude of the vehicle. (WGS84 based)
	Latitude *float64
	// The longitude of the vehicle. (WGS84 based)
	Longitude *float64
	// The heading of the vehicle. (degrees) (0-359)
	HeadingDeg *float64
	// The altitude of the vehicle. (meters)
	// 0 is sea level, negative values below sea level, and positive above sea level.
	AltitudeM *float64
	// The speed of the vehicle. (km/h)
	SpeedKmh *float64
}

func (b0 GnssPosition_builder) Build() *GnssPosition {
	m0 := &GnssPosition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Time != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Time = *b.Time
	}
	if b.Latitude != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Latitude = *b.Latitude
	}
	if b.Longitude != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Longitude = *b.Longitude
	}
	if b.HeadingDeg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_HeadingDeg = *b.HeadingDeg
	}
	if b.AltitudeM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_AltitudeM = *b.AltitudeM
	}
	if b.SpeedKmh != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_SpeedKmh = *b.SpeedKmh
	}
	return m0
}

var File_wayplatform_rfms_v5_gnss_position_proto protoreflect.FileDescriptor

const file_wayplatform_rfms_v5_gnss_position_proto_rawDesc = "" +
	"\n" +
	"'wayplatform/rfms/v5/gnss_position.proto\x12\x13wayplatform.rfms.v5\"\xb9\x01\n" +
	"\fGnssPosition\x12\x12\n" +
	"\x04time\x18\x01 \x01(\x03R\x04time\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x1f\n" +
	"\vheading_deg\x18\x04 \x01(\x01R\n" +
	"headingDeg\x12\x1d\n" +
	"\n" +
	"altitude_m\x18\x05 \x01(\x01R\taltitudeM\x12\x1b\n" +
	"\tspeed_kmh\x18\x06 \x01(\x01R\bspeedKmhB\xdb\x01\n" +
	"\x17com.wayplatform.rfms.v5B\x11GnssPositionProtoP\x01Z?github.com/way-platform/proto/gen/go/wayplatform/rfms/v5;rfmsv5\xa2\x02\x03WRX\xaa\x02\x13Wayplatform.Rfms.V5\xca\x02\x13Wayplatform\\Rfms\\V5\xe2\x02\x1fWayplatform\\Rfms\\V5\\GPBMetadata\xea\x02\x15Wayplatform::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_rfms_v5_gnss_position_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_rfms_v5_gnss_position_proto_goTypes = []any{
	(*GnssPosition)(nil), // 0: wayplatform.rfms.v5.GnssPosition
}
var file_wayplatform_rfms_v5_gnss_position_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_rfms_v5_gnss_position_proto_init() }
func file_wayplatform_rfms_v5_gnss_position_proto_init() {
	if File_wayplatform_rfms_v5_gnss_position_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_rfms_v5_gnss_position_proto_rawDesc), len(file_wayplatform_rfms_v5_gnss_position_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_rfms_v5_gnss_position_proto_goTypes,
		DependencyIndexes: file_wayplatform_rfms_v5_gnss_position_proto_depIdxs,
		MessageInfos:      file_wayplatform_rfms_v5_gnss_position_proto_msgTypes,
	}.Build()
	File_wayplatform_rfms_v5_gnss_position_proto = out.File
	file_wayplatform_rfms_v5_gnss_position_proto_goTypes = nil
	file_wayplatform_rfms_v5_gnss_position_proto_depIdxs = nil
}
