// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/rfms/v5/fuel_type.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FuelType is a type of fuel usable by a vehicle.
type FuelType int32

const (
	// Default value. This value is not used.
	FuelType_FUEL_TYPE_UNSPECIFIED FuelType = 0
	// Unknown fuel type.
	FuelType_FUEL_TYPE_UNKNOWN FuelType = 1
	// Gasoline. 0x01 (GAS)
	FuelType_GASOLINE FuelType = 2
	// Methanol. 0x02 (METH)
	FuelType_METHANOL FuelType = 3
	// Ethanol. 0x03 (ETH)
	FuelType_ETHANOL FuelType = 4
	// Diesel. 0x04 (DSL)
	FuelType_DIESEL FuelType = 5
	// Liquefied petroleum gas. 0x05 (LPG)
	FuelType_LIQUEFIED_PETROLEUM_GAS FuelType = 6
	// Compressed natural gas. 0x06 (CNG)
	FuelType_COMPRESSED_NATURAL_GAS FuelType = 7
	// Propane. 0x07 (PROP)
	FuelType_PROPANE FuelType = 8
	// Battery electric. 0x08 (ELEC)
	FuelType_BATTERY_ELECTRIC FuelType = 9
	// Hydrogen fuel cell. 0x1D (H2FC)
	FuelType_HYDROGEN_FUEL_CELL FuelType = 10
	// Hydrogen internal combustion engine. 0x1E (H2ICE)
	FuelType_HYDROGEN_INTERNAL_COMBUSTION_ENGINE FuelType = 11
	// Kerosene. 0x1F (KER)
	FuelType_KEROSENE FuelType = 12
	// Heavy fuel oil. 0x20 (HFO)
	FuelType_HEAVY_FUEL_OIL FuelType = 13
)

// Enum value maps for FuelType.
var (
	FuelType_name = map[int32]string{
		0:  "FUEL_TYPE_UNSPECIFIED",
		1:  "FUEL_TYPE_UNKNOWN",
		2:  "GASOLINE",
		3:  "METHANOL",
		4:  "ETHANOL",
		5:  "DIESEL",
		6:  "LIQUEFIED_PETROLEUM_GAS",
		7:  "COMPRESSED_NATURAL_GAS",
		8:  "PROPANE",
		9:  "BATTERY_ELECTRIC",
		10: "HYDROGEN_FUEL_CELL",
		11: "HYDROGEN_INTERNAL_COMBUSTION_ENGINE",
		12: "KEROSENE",
		13: "HEAVY_FUEL_OIL",
	}
	FuelType_value = map[string]int32{
		"FUEL_TYPE_UNSPECIFIED":               0,
		"FUEL_TYPE_UNKNOWN":                   1,
		"GASOLINE":                            2,
		"METHANOL":                            3,
		"ETHANOL":                             4,
		"DIESEL":                              5,
		"LIQUEFIED_PETROLEUM_GAS":             6,
		"COMPRESSED_NATURAL_GAS":              7,
		"PROPANE":                             8,
		"BATTERY_ELECTRIC":                    9,
		"HYDROGEN_FUEL_CELL":                  10,
		"HYDROGEN_INTERNAL_COMBUSTION_ENGINE": 11,
		"KEROSENE":                            12,
		"HEAVY_FUEL_OIL":                      13,
	}
)

func (x FuelType) Enum() *FuelType {
	p := new(FuelType)
	*p = x
	return p
}

func (x FuelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FuelType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_rfms_v5_fuel_type_proto_enumTypes[0].Descriptor()
}

func (FuelType) Type() protoreflect.EnumType {
	return &file_wayplatform_rfms_v5_fuel_type_proto_enumTypes[0]
}

func (x FuelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_rfms_v5_fuel_type_proto protoreflect.FileDescriptor

const file_wayplatform_rfms_v5_fuel_type_proto_rawDesc = "" +
	"\n" +
	"#wayplatform/rfms/v5/fuel_type.proto\x12\x13wayplatform.rfms.v5*\xb0\x02\n" +
	"\bFuelType\x12\x19\n" +
	"\x15FUEL_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11FUEL_TYPE_UNKNOWN\x10\x01\x12\f\n" +
	"\bGASOLINE\x10\x02\x12\f\n" +
	"\bMETHANOL\x10\x03\x12\v\n" +
	"\aETHANOL\x10\x04\x12\n" +
	"\n" +
	"\x06DIESEL\x10\x05\x12\x1b\n" +
	"\x17LIQUEFIED_PETROLEUM_GAS\x10\x06\x12\x1a\n" +
	"\x16COMPRESSED_NATURAL_GAS\x10\a\x12\v\n" +
	"\aPROPANE\x10\b\x12\x14\n" +
	"\x10BATTERY_ELECTRIC\x10\t\x12\x16\n" +
	"\x12HYDROGEN_FUEL_CELL\x10\n" +
	"\x12'\n" +
	"#HYDROGEN_INTERNAL_COMBUSTION_ENGINE\x10\v\x12\f\n" +
	"\bKEROSENE\x10\f\x12\x12\n" +
	"\x0eHEAVY_FUEL_OIL\x10\rB\xdf\x01\n" +
	"\x17com.wayplatform.rfms.v5B\rFuelTypeProtoP\x01ZGgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/rfms/v5;rfmsv5\xa2\x02\x03WRX\xaa\x02\x13Wayplatform.Rfms.V5\xca\x02\x13Wayplatform\\Rfms\\V5\xe2\x02\x1fWayplatform\\Rfms\\V5\\GPBMetadata\xea\x02\x15Wayplatform::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_rfms_v5_fuel_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_rfms_v5_fuel_type_proto_goTypes = []any{
	(FuelType)(0), // 0: wayplatform.rfms.v5.FuelType
}
var file_wayplatform_rfms_v5_fuel_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_rfms_v5_fuel_type_proto_init() }
func file_wayplatform_rfms_v5_fuel_type_proto_init() {
	if File_wayplatform_rfms_v5_fuel_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_rfms_v5_fuel_type_proto_rawDesc), len(file_wayplatform_rfms_v5_fuel_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_rfms_v5_fuel_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_rfms_v5_fuel_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_rfms_v5_fuel_type_proto_enumTypes,
	}.Build()
	File_wayplatform_rfms_v5_fuel_type_proto = out.File
	file_wayplatform_rfms_v5_fuel_type_proto_goTypes = nil
	file_wayplatform_rfms_v5_fuel_type_proto_depIdxs = nil
}
