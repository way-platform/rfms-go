// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/rfms/v5/uptime_data.proto

package rfmsv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The state of an alternator.
type UptimeData_AlternatorInfo_State int32

const (
	UptimeData_AlternatorInfo_STATE_UNSPECIFIED   UptimeData_AlternatorInfo_State = 0
	UptimeData_AlternatorInfo_STATE_UNKNOWN       UptimeData_AlternatorInfo_State = 1
	UptimeData_AlternatorInfo_STATE_ERROR         UptimeData_AlternatorInfo_State = 2
	UptimeData_AlternatorInfo_STATE_NOT_AVAILABLE UptimeData_AlternatorInfo_State = 3
	UptimeData_AlternatorInfo_NOT_CHARGING        UptimeData_AlternatorInfo_State = 4
	UptimeData_AlternatorInfo_CHARGING            UptimeData_AlternatorInfo_State = 5
)

// Enum value maps for UptimeData_AlternatorInfo_State.
var (
	UptimeData_AlternatorInfo_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_UNKNOWN",
		2: "STATE_ERROR",
		3: "STATE_NOT_AVAILABLE",
		4: "NOT_CHARGING",
		5: "CHARGING",
	}
	UptimeData_AlternatorInfo_State_value = map[string]int32{
		"STATE_UNSPECIFIED":   0,
		"STATE_UNKNOWN":       1,
		"STATE_ERROR":         2,
		"STATE_NOT_AVAILABLE": 3,
		"NOT_CHARGING":        4,
		"CHARGING":            5,
	}
)

func (x UptimeData_AlternatorInfo_State) Enum() *UptimeData_AlternatorInfo_State {
	p := new(UptimeData_AlternatorInfo_State)
	*p = x
	return p
}

func (x UptimeData_AlternatorInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UptimeData_AlternatorInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_rfms_v5_uptime_data_proto_enumTypes[0].Descriptor()
}

func (UptimeData_AlternatorInfo_State) Type() protoreflect.EnumType {
	return &file_wayplatform_rfms_v5_uptime_data_proto_enumTypes[0]
}

func (x UptimeData_AlternatorInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Uptime data for a vehicle.
type UptimeData struct {
	state                                        protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_TellTaleInfo                      *[]*TellTale                  `protobuf:"bytes,1,rep,name=tell_tale_info,json=tellTaleInfo"`
	xxx_hidden_ServiceDistanceM                  float64                       `protobuf:"fixed64,2,opt,name=service_distance_m,json=serviceDistanceM"`
	xxx_hidden_EngineCoolantTemperatureC         float64                       `protobuf:"fixed64,3,opt,name=engine_coolant_temperature_c,json=engineCoolantTemperatureC"`
	xxx_hidden_HvessOutletCoolantTemperatureC    float64                       `protobuf:"fixed64,4,opt,name=hvess_outlet_coolant_temperature_c,json=hvessOutletCoolantTemperatureC"`
	xxx_hidden_HvessTemperatureC                 float64                       `protobuf:"fixed64,5,opt,name=hvess_temperature_c,json=hvessTemperatureC"`
	xxx_hidden_ServiceBrakeAirPressureCircuit1Pa float64                       `protobuf:"fixed64,6,opt,name=service_brake_air_pressure_circuit1_pa,json=serviceBrakeAirPressureCircuit1Pa"`
	xxx_hidden_ServiceBrakeAirPressureCircuit2Pa float64                       `protobuf:"fixed64,7,opt,name=service_brake_air_pressure_circuit2_pa,json=serviceBrakeAirPressureCircuit2Pa"`
	xxx_hidden_AtLeastOneDoorOpenDurationS       float64                       `protobuf:"fixed64,8,opt,name=at_least_one_door_open_duration_s,json=atLeastOneDoorOpenDurationS"`
	xxx_hidden_AlternatorInfo                    *[]*UptimeData_AlternatorInfo `protobuf:"bytes,9,rep,name=alternator_info,json=alternatorInfo"`
	xxx_hidden_BellowPressureFrontAxleLeftPa     float64                       `protobuf:"fixed64,10,opt,name=bellow_pressure_front_axle_left_pa,json=bellowPressureFrontAxleLeftPa"`
	xxx_hidden_BellowPressureFrontAxleRightPa    float64                       `protobuf:"fixed64,11,opt,name=bellow_pressure_front_axle_right_pa,json=bellowPressureFrontAxleRightPa"`
	xxx_hidden_BellowPressureRearAxleLeftPa      float64                       `protobuf:"fixed64,12,opt,name=bellow_pressure_rear_axle_left_pa,json=bellowPressureRearAxleLeftPa"`
	xxx_hidden_BellowPressureRearAxleRightPa     float64                       `protobuf:"fixed64,13,opt,name=bellow_pressure_rear_axle_right_pa,json=bellowPressureRearAxleRightPa"`
	XXX_raceDetectHookData                       protoimpl.RaceDetectHookData
	XXX_presence                                 [1]uint32
	unknownFields                                protoimpl.UnknownFields
	sizeCache                                    protoimpl.SizeCache
}

func (x *UptimeData) Reset() {
	*x = UptimeData{}
	mi := &file_wayplatform_rfms_v5_uptime_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UptimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UptimeData) ProtoMessage() {}

func (x *UptimeData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_rfms_v5_uptime_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UptimeData) GetTellTaleInfo() []*TellTale {
	if x != nil {
		if x.xxx_hidden_TellTaleInfo != nil {
			return *x.xxx_hidden_TellTaleInfo
		}
	}
	return nil
}

func (x *UptimeData) GetServiceDistanceM() float64 {
	if x != nil {
		return x.xxx_hidden_ServiceDistanceM
	}
	return 0
}

func (x *UptimeData) GetEngineCoolantTemperatureC() float64 {
	if x != nil {
		return x.xxx_hidden_EngineCoolantTemperatureC
	}
	return 0
}

func (x *UptimeData) GetHvessOutletCoolantTemperatureC() float64 {
	if x != nil {
		return x.xxx_hidden_HvessOutletCoolantTemperatureC
	}
	return 0
}

func (x *UptimeData) GetHvessTemperatureC() float64 {
	if x != nil {
		return x.xxx_hidden_HvessTemperatureC
	}
	return 0
}

func (x *UptimeData) GetServiceBrakeAirPressureCircuit1Pa() float64 {
	if x != nil {
		return x.xxx_hidden_ServiceBrakeAirPressureCircuit1Pa
	}
	return 0
}

func (x *UptimeData) GetServiceBrakeAirPressureCircuit2Pa() float64 {
	if x != nil {
		return x.xxx_hidden_ServiceBrakeAirPressureCircuit2Pa
	}
	return 0
}

func (x *UptimeData) GetAtLeastOneDoorOpenDurationS() float64 {
	if x != nil {
		return x.xxx_hidden_AtLeastOneDoorOpenDurationS
	}
	return 0
}

func (x *UptimeData) GetAlternatorInfo() []*UptimeData_AlternatorInfo {
	if x != nil {
		if x.xxx_hidden_AlternatorInfo != nil {
			return *x.xxx_hidden_AlternatorInfo
		}
	}
	return nil
}

func (x *UptimeData) GetBellowPressureFrontAxleLeftPa() float64 {
	if x != nil {
		return x.xxx_hidden_BellowPressureFrontAxleLeftPa
	}
	return 0
}

func (x *UptimeData) GetBellowPressureFrontAxleRightPa() float64 {
	if x != nil {
		return x.xxx_hidden_BellowPressureFrontAxleRightPa
	}
	return 0
}

func (x *UptimeData) GetBellowPressureRearAxleLeftPa() float64 {
	if x != nil {
		return x.xxx_hidden_BellowPressureRearAxleLeftPa
	}
	return 0
}

func (x *UptimeData) GetBellowPressureRearAxleRightPa() float64 {
	if x != nil {
		return x.xxx_hidden_BellowPressureRearAxleRightPa
	}
	return 0
}

func (x *UptimeData) SetTellTaleInfo(v []*TellTale) {
	x.xxx_hidden_TellTaleInfo = &v
}

func (x *UptimeData) SetServiceDistanceM(v float64) {
	x.xxx_hidden_ServiceDistanceM = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 13)
}

func (x *UptimeData) SetEngineCoolantTemperatureC(v float64) {
	x.xxx_hidden_EngineCoolantTemperatureC = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 13)
}

func (x *UptimeData) SetHvessOutletCoolantTemperatureC(v float64) {
	x.xxx_hidden_HvessOutletCoolantTemperatureC = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 13)
}

func (x *UptimeData) SetHvessTemperatureC(v float64) {
	x.xxx_hidden_HvessTemperatureC = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 13)
}

func (x *UptimeData) SetServiceBrakeAirPressureCircuit1Pa(v float64) {
	x.xxx_hidden_ServiceBrakeAirPressureCircuit1Pa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 13)
}

func (x *UptimeData) SetServiceBrakeAirPressureCircuit2Pa(v float64) {
	x.xxx_hidden_ServiceBrakeAirPressureCircuit2Pa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 13)
}

func (x *UptimeData) SetAtLeastOneDoorOpenDurationS(v float64) {
	x.xxx_hidden_AtLeastOneDoorOpenDurationS = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 13)
}

func (x *UptimeData) SetAlternatorInfo(v []*UptimeData_AlternatorInfo) {
	x.xxx_hidden_AlternatorInfo = &v
}

func (x *UptimeData) SetBellowPressureFrontAxleLeftPa(v float64) {
	x.xxx_hidden_BellowPressureFrontAxleLeftPa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 13)
}

func (x *UptimeData) SetBellowPressureFrontAxleRightPa(v float64) {
	x.xxx_hidden_BellowPressureFrontAxleRightPa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 13)
}

func (x *UptimeData) SetBellowPressureRearAxleLeftPa(v float64) {
	x.xxx_hidden_BellowPressureRearAxleLeftPa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 13)
}

func (x *UptimeData) SetBellowPressureRearAxleRightPa(v float64) {
	x.xxx_hidden_BellowPressureRearAxleRightPa = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 13)
}

func (x *UptimeData) HasServiceDistanceM() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UptimeData) HasEngineCoolantTemperatureC() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UptimeData) HasHvessOutletCoolantTemperatureC() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UptimeData) HasHvessTemperatureC() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UptimeData) HasServiceBrakeAirPressureCircuit1Pa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UptimeData) HasServiceBrakeAirPressureCircuit2Pa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *UptimeData) HasAtLeastOneDoorOpenDurationS() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *UptimeData) HasBellowPressureFrontAxleLeftPa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *UptimeData) HasBellowPressureFrontAxleRightPa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *UptimeData) HasBellowPressureRearAxleLeftPa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *UptimeData) HasBellowPressureRearAxleRightPa() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *UptimeData) ClearServiceDistanceM() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ServiceDistanceM = 0
}

func (x *UptimeData) ClearEngineCoolantTemperatureC() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EngineCoolantTemperatureC = 0
}

func (x *UptimeData) ClearHvessOutletCoolantTemperatureC() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_HvessOutletCoolantTemperatureC = 0
}

func (x *UptimeData) ClearHvessTemperatureC() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_HvessTemperatureC = 0
}

func (x *UptimeData) ClearServiceBrakeAirPressureCircuit1Pa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ServiceBrakeAirPressureCircuit1Pa = 0
}

func (x *UptimeData) ClearServiceBrakeAirPressureCircuit2Pa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ServiceBrakeAirPressureCircuit2Pa = 0
}

func (x *UptimeData) ClearAtLeastOneDoorOpenDurationS() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_AtLeastOneDoorOpenDurationS = 0
}

func (x *UptimeData) ClearBellowPressureFrontAxleLeftPa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_BellowPressureFrontAxleLeftPa = 0
}

func (x *UptimeData) ClearBellowPressureFrontAxleRightPa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_BellowPressureFrontAxleRightPa = 0
}

func (x *UptimeData) ClearBellowPressureRearAxleLeftPa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_BellowPressureRearAxleLeftPa = 0
}

func (x *UptimeData) ClearBellowPressureRearAxleRightPa() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_BellowPressureRearAxleRightPa = 0
}

type UptimeData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of tell tales with the actual state for each tell tale.
	TellTaleInfo []*TellTale
	// The distance in meter to the next service. (m)
	ServiceDistanceM *float64
	// The temperature of the coolant liquid. (°C)
	EngineCoolantTemperatureC *float64
	// The temperature of the battery pack coolant. (°C)
	// HVESS - High Voltage Energy Storage System.
	HvessOutletCoolantTemperatureC *float64
	// The temperature of the battery pack. (°C)
	// HVESS - High Voltage Energy Storage System.
	HvessTemperatureC *float64
	// The pressure of the service brake air pressure circuit 1. (Pa)
	ServiceBrakeAirPressureCircuit1Pa *float64
	// The pressure of the service brake air pressure circuit 2. (Pa)
	ServiceBrakeAirPressureCircuit2Pa *float64
	// The total time at least one door has been opened in the bus. (s)
	// Used mainly for buses.
	AtLeastOneDoorOpenDurationS *float64
	// The alternator status of up to 4 alternators.
	// Used mainly for buses.
	AlternatorInfo []*UptimeData_AlternatorInfo
	// The pressure of the bellow pressure front axle left. (Pa)
	// Used mainly for buses.
	BellowPressureFrontAxleLeftPa *float64
	// The pressure of the bellow pressure front axle right. (Pa)
	// Used mainly for buses.
	BellowPressureFrontAxleRightPa *float64
	// The pressure of the bellow pressure rear axle left. (Pa)
	// Used mainly for buses.
	BellowPressureRearAxleLeftPa *float64
	// The pressure of the bellow pressure rear axle right. (Pa)
	// Used mainly for buses.
	BellowPressureRearAxleRightPa *float64
}

func (b0 UptimeData_builder) Build() *UptimeData {
	m0 := &UptimeData{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TellTaleInfo = &b.TellTaleInfo
	if b.ServiceDistanceM != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 13)
		x.xxx_hidden_ServiceDistanceM = *b.ServiceDistanceM
	}
	if b.EngineCoolantTemperatureC != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 13)
		x.xxx_hidden_EngineCoolantTemperatureC = *b.EngineCoolantTemperatureC
	}
	if b.HvessOutletCoolantTemperatureC != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 13)
		x.xxx_hidden_HvessOutletCoolantTemperatureC = *b.HvessOutletCoolantTemperatureC
	}
	if b.HvessTemperatureC != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 13)
		x.xxx_hidden_HvessTemperatureC = *b.HvessTemperatureC
	}
	if b.ServiceBrakeAirPressureCircuit1Pa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 13)
		x.xxx_hidden_ServiceBrakeAirPressureCircuit1Pa = *b.ServiceBrakeAirPressureCircuit1Pa
	}
	if b.ServiceBrakeAirPressureCircuit2Pa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 13)
		x.xxx_hidden_ServiceBrakeAirPressureCircuit2Pa = *b.ServiceBrakeAirPressureCircuit2Pa
	}
	if b.AtLeastOneDoorOpenDurationS != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 13)
		x.xxx_hidden_AtLeastOneDoorOpenDurationS = *b.AtLeastOneDoorOpenDurationS
	}
	x.xxx_hidden_AlternatorInfo = &b.AlternatorInfo
	if b.BellowPressureFrontAxleLeftPa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 13)
		x.xxx_hidden_BellowPressureFrontAxleLeftPa = *b.BellowPressureFrontAxleLeftPa
	}
	if b.BellowPressureFrontAxleRightPa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 13)
		x.xxx_hidden_BellowPressureFrontAxleRightPa = *b.BellowPressureFrontAxleRightPa
	}
	if b.BellowPressureRearAxleLeftPa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 13)
		x.xxx_hidden_BellowPressureRearAxleLeftPa = *b.BellowPressureRearAxleLeftPa
	}
	if b.BellowPressureRearAxleRightPa != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 13)
		x.xxx_hidden_BellowPressureRearAxleRightPa = *b.BellowPressureRearAxleRightPa
	}
	return m0
}

// An alternator.
type UptimeData_AlternatorInfo struct {
	state                   protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Number       int32                           `protobuf:"varint,1,opt,name=number"`
	xxx_hidden_State        UptimeData_AlternatorInfo_State `protobuf:"varint,2,opt,name=state,enum=wayplatform.rfms.v5.UptimeData_AlternatorInfo_State"`
	xxx_hidden_UnknownState *string                         `protobuf:"bytes,3,opt,name=unknown_state,json=unknownState"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UptimeData_AlternatorInfo) Reset() {
	*x = UptimeData_AlternatorInfo{}
	mi := &file_wayplatform_rfms_v5_uptime_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UptimeData_AlternatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UptimeData_AlternatorInfo) ProtoMessage() {}

func (x *UptimeData_AlternatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_rfms_v5_uptime_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UptimeData_AlternatorInfo) GetNumber() int32 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *UptimeData_AlternatorInfo) GetState() UptimeData_AlternatorInfo_State {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_State
		}
	}
	return UptimeData_AlternatorInfo_STATE_UNSPECIFIED
}

func (x *UptimeData_AlternatorInfo) GetUnknownState() string {
	if x != nil {
		if x.xxx_hidden_UnknownState != nil {
			return *x.xxx_hidden_UnknownState
		}
		return ""
	}
	return ""
}

func (x *UptimeData_AlternatorInfo) SetNumber(v int32) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UptimeData_AlternatorInfo) SetState(v UptimeData_AlternatorInfo_State) {
	x.xxx_hidden_State = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UptimeData_AlternatorInfo) SetUnknownState(v string) {
	x.xxx_hidden_UnknownState = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UptimeData_AlternatorInfo) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UptimeData_AlternatorInfo) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UptimeData_AlternatorInfo) HasUnknownState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UptimeData_AlternatorInfo) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Number = 0
}

func (x *UptimeData_AlternatorInfo) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_State = UptimeData_AlternatorInfo_STATE_UNSPECIFIED
}

func (x *UptimeData_AlternatorInfo) ClearUnknownState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UnknownState = nil
}

type UptimeData_AlternatorInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The number of the alternator.
	Number *int32
	// The status of the alternator.
	State *UptimeData_AlternatorInfo_State
	// The unknown state of the alternator.
	// Used when the state is STATE_UNKNOWN.
	UnknownState *string
}

func (b0 UptimeData_AlternatorInfo_builder) Build() *UptimeData_AlternatorInfo {
	m0 := &UptimeData_AlternatorInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Number = *b.Number
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_State = *b.State
	}
	if b.UnknownState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_UnknownState = b.UnknownState
	}
	return m0
}

var File_wayplatform_rfms_v5_uptime_data_proto protoreflect.FileDescriptor

const file_wayplatform_rfms_v5_uptime_data_proto_rawDesc = "" +
	"\n" +
	"%wayplatform/rfms/v5/uptime_data.proto\x12\x13wayplatform.rfms.v5\x1a#wayplatform/rfms/v5/tell_tale.proto\"\xc8\t\n" +
	"\n" +
	"UptimeData\x12C\n" +
	"\x0etell_tale_info\x18\x01 \x03(\v2\x1d.wayplatform.rfms.v5.TellTaleR\ftellTaleInfo\x12,\n" +
	"\x12service_distance_m\x18\x02 \x01(\x01R\x10serviceDistanceM\x12?\n" +
	"\x1cengine_coolant_temperature_c\x18\x03 \x01(\x01R\x19engineCoolantTemperatureC\x12J\n" +
	"\"hvess_outlet_coolant_temperature_c\x18\x04 \x01(\x01R\x1ehvessOutletCoolantTemperatureC\x12.\n" +
	"\x13hvess_temperature_c\x18\x05 \x01(\x01R\x11hvessTemperatureC\x12Q\n" +
	"&service_brake_air_pressure_circuit1_pa\x18\x06 \x01(\x01R!serviceBrakeAirPressureCircuit1Pa\x12Q\n" +
	"&service_brake_air_pressure_circuit2_pa\x18\a \x01(\x01R!serviceBrakeAirPressureCircuit2Pa\x12F\n" +
	"!at_least_one_door_open_duration_s\x18\b \x01(\x01R\x1batLeastOneDoorOpenDurationS\x12W\n" +
	"\x0falternator_info\x18\t \x03(\v2..wayplatform.rfms.v5.UptimeData.AlternatorInfoR\x0ealternatorInfo\x12I\n" +
	"\"bellow_pressure_front_axle_left_pa\x18\n" +
	" \x01(\x01R\x1dbellowPressureFrontAxleLeftPa\x12K\n" +
	"#bellow_pressure_front_axle_right_pa\x18\v \x01(\x01R\x1ebellowPressureFrontAxleRightPa\x12G\n" +
	"!bellow_pressure_rear_axle_left_pa\x18\f \x01(\x01R\x1cbellowPressureRearAxleLeftPa\x12I\n" +
	"\"bellow_pressure_rear_axle_right_pa\x18\r \x01(\x01R\x1dbellowPressureRearAxleRightPa\x1a\x96\x02\n" +
	"\x0eAlternatorInfo\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\x12J\n" +
	"\x05state\x18\x02 \x01(\x0e24.wayplatform.rfms.v5.UptimeData.AlternatorInfo.StateR\x05state\x12#\n" +
	"\runknown_state\x18\x03 \x01(\tR\funknownState\"{\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSTATE_UNKNOWN\x10\x01\x12\x0f\n" +
	"\vSTATE_ERROR\x10\x02\x12\x17\n" +
	"\x13STATE_NOT_AVAILABLE\x10\x03\x12\x10\n" +
	"\fNOT_CHARGING\x10\x04\x12\f\n" +
	"\bCHARGING\x10\x05B\xe1\x01\n" +
	"\x17com.wayplatform.rfms.v5B\x0fUptimeDataProtoP\x01ZGgithub.com/way-platform/rfms-go/proto/gen/go/wayplatform/rfms/v5;rfmsv5\xa2\x02\x03WRX\xaa\x02\x13Wayplatform.Rfms.V5\xca\x02\x13Wayplatform\\Rfms\\V5\xe2\x02\x1fWayplatform\\Rfms\\V5\\GPBMetadata\xea\x02\x15Wayplatform::Rfms::V5b\beditionsp\xe8\a"

var file_wayplatform_rfms_v5_uptime_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_rfms_v5_uptime_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_rfms_v5_uptime_data_proto_goTypes = []any{
	(UptimeData_AlternatorInfo_State)(0), // 0: wayplatform.rfms.v5.UptimeData.AlternatorInfo.State
	(*UptimeData)(nil),                   // 1: wayplatform.rfms.v5.UptimeData
	(*UptimeData_AlternatorInfo)(nil),    // 2: wayplatform.rfms.v5.UptimeData.AlternatorInfo
	(*TellTale)(nil),                     // 3: wayplatform.rfms.v5.TellTale
}
var file_wayplatform_rfms_v5_uptime_data_proto_depIdxs = []int32{
	3, // 0: wayplatform.rfms.v5.UptimeData.tell_tale_info:type_name -> wayplatform.rfms.v5.TellTale
	2, // 1: wayplatform.rfms.v5.UptimeData.alternator_info:type_name -> wayplatform.rfms.v5.UptimeData.AlternatorInfo
	0, // 2: wayplatform.rfms.v5.UptimeData.AlternatorInfo.state:type_name -> wayplatform.rfms.v5.UptimeData.AlternatorInfo.State
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_wayplatform_rfms_v5_uptime_data_proto_init() }
func file_wayplatform_rfms_v5_uptime_data_proto_init() {
	if File_wayplatform_rfms_v5_uptime_data_proto != nil {
		return
	}
	file_wayplatform_rfms_v5_tell_tale_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_rfms_v5_uptime_data_proto_rawDesc), len(file_wayplatform_rfms_v5_uptime_data_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_rfms_v5_uptime_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_rfms_v5_uptime_data_proto_depIdxs,
		EnumInfos:         file_wayplatform_rfms_v5_uptime_data_proto_enumTypes,
		MessageInfos:      file_wayplatform_rfms_v5_uptime_data_proto_msgTypes,
	}.Build()
	File_wayplatform_rfms_v5_uptime_data_proto = out.File
	file_wayplatform_rfms_v5_uptime_data_proto_goTypes = nil
	file_wayplatform_rfms_v5_uptime_data_proto_depIdxs = nil
}
