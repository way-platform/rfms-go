overlay: 1.0.0

info:
  title: Overlay for the rFMS v4.0 API
  version: 1.0.0

actions:

- target: $.paths
  description: "Skip code generation for requests"
  remove: true

- target: $.components.responses
  description: "Skip code generation for responses"
  remove: true

- target: $.components.securitySchemes
  description: "Skip code generation for security schemes"
  remove: true

- target: $.components.parameters
  description: "Skip code generation for request parameters"
  remove: true

# Inline VinProperty in all references
- target: $.components.schemas.Vehicle.properties.vin
  description: "Inline VinProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: vehicle identification number. See ISO 3779 (17 characters)
    example: ABC12345678901234

- target: $.components.schemas.VehiclePosition.properties.vin
  description: "Inline VinProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: vehicle identification number. See ISO 3779 (17 characters)
    example: ABC12345678901234

- target: $.components.schemas.VehicleStatus.properties.vin
  description: "Inline VinProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: vehicle identification number. See ISO 3779 (17 characters)
    example: ABC12345678901234

# Inline CreatedDateTimeProperty in all references
- target: $.components.schemas.VehiclePosition.properties.createdDateTime
  description: "Inline CreatedDateTimeProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: When the data was retrieved in the vehicle in iso8601 format.
    format: date-time
    x-go-type: Time

- target: $.components.schemas.VehicleStatus.properties.createdDateTime
  description: "Inline CreatedDateTimeProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: When the data was retrieved in the vehicle in iso8601 format.
    format: date-time
    x-go-type: Time

# Inline ReceivedDateTimeProperty in all references
- target: $.components.schemas.VehiclePosition.properties.receivedDateTime
  description: "Inline ReceivedDateTimeProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: Reception at Server. To be used for handling of "more data available" in iso8601 format.
    format: date-time
    x-go-type: Time

- target: $.components.schemas.VehicleStatus.properties.receivedDateTime
  description: "Inline ReceivedDateTimeProperty definition"
  update:
    $ref: '' # Remove existing ref
    type: string
    description: Reception at Server. To be used for handling of "more data available" in iso8601 format.
    format: date-time
    x-go-type: Time

# Remove inlined component schemas
- target: $.components.schemas.VinProperty
  description: "Remove inlined component schema"
  remove: true

- target: $.components.schemas.CreatedDateTimeProperty
  description: "Remove inlined component schema"
  remove: true

- target: $.components.schemas.ReceivedDateTimeProperty
  description: "Remove inlined component schema"
  remove: true

- target: $.components.schemas
  description: "Add Scania-specific fields"
  update:
    Vehicle:
      properties:
        registrationNumber:
          type: string
          description: "The registration number (license plate) of the vehicle. This is a Scania-specific field."
          example: "ABC123"
    SnapshotData:
      properties:
        ignition:
          $ref: '#/components/schemas/IgnitionState'
    IgnitionState:
      type: string
      description: "The ignition state of the vehicle. This is a Scania-specific field."
      enum:
        - ON
        - OFF
        - ERROR
        - NOT_AVAILABLE

- target: $.components.schemas
  description: "Add Date component"
  update:
    Date:
      type: object
      properties:
        day:
          type: integer
          description: Day of the month where first day of the month is 1
          format: int32
          example: 1
        month:
          type: integer
          description: Month of the year, where January is value 1
          format: int32
          example: 4
        year:
          type: integer
          format: int32
          example: 2018
      description: Indicates when the vehicle was produced.
    Vehicle:
      properties:
        productionDate:
          $ref: '#/components/schemas/Date'

# TachoDriverIdentification component
- target: $.components.schemas
  description: "Add TachoDriverIdentification component"
  update:
    TachoDriverIdentification:
      required:
      - cardIssuingMemberState
      - driverIdentification
      type: object
      properties:
        driverIdentification:
          type: string
          description: The unique identification of a driver in a Member State. This fields is formatted according the definition for driverIdentification in COMMISSION REGULATION (EC) No 1360/2002 Annex 1b
          example: "12345678901234"
        cardIssuingMemberState:
          type: string
          description: The country alpha code of the Member State having issued the card. This fields is formatted according the definition for NationAlpha in COMMISSION REGULATION (EC) No 1360/2002 Annex 1b
          example: S
        driverAuthenticationEquipment:
          $ref: '#/components/schemas/DriverAuthenticationType'
        cardReplacementIndex:
          type: string
          description: 'A card replacement index. This fields is formatted according the definition for CardReplacementIndex (chap 2.26) in: COMMISSION REGULATION (EC) No 1360/2002 Annex 1b'
          example: "0"
        cardRenewalIndex:
          type: string
          description: 'A card renewal index. This fields is formatted according the definition for CardRenewalIndex (chap 2.25) in: COMMISSION REGULATION (EC) No 1360/2002 Annex 1b'
          example: "0"
    DriverId:
      properties:
        tachoDriverIdentification:
          $ref: '#/components/schemas/TachoDriverIdentification'

# OemDriverIdentification component
- target: $.components.schemas
  update:
    OemDriverIdentification:
      type: object
      properties:
        idType:
          type: string
          description: Contains an optional id type (e.g. pin, USB, encrypted EU id...)
          example: USB
        oemDriverIdentification:
          type: string
          description: An OEM specific driver id.
          example: ABC-123-DEF

- target: $.components.schemas.DriverId.properties
  update:
    oemDriverIdentification:
      $ref: '#/components/schemas/OemDriverIdentification'

# DoorStatus component
- target: $.components.schemas
  update:
    DoorStatus:
      type: object
      properties:
        DoorEnabledStatus:
          $ref: '#/components/schemas/DoorEnabledStatus'
        DoorOpenStatus:
          $ref: '#/components/schemas/DoorOpenStatus'
        DoorLockStatus:
          $ref: '#/components/schemas/DoorLockStatus'
        DoorNumber:
          type: integer
          example: 1

- target: $.components.schemas.VehicleStatus.properties
  update:
    doorStatus:
      type: array
      description: Individual status for each door. Bus specific parameter
      items:
        $ref: '#/components/schemas/DoorStatus'

# AlternatorInfo component
- target: $.components.schemas
  update:
    AlternatorInfo:
      type: object
      properties:
        alternatorStatus:
          $ref: '#/components/schemas/AlternatorStatus'
        alternatorNumber:
          type: integer
          format: int64
          example: 1
      description: The alternator status of the up to 4 alternators. Used mainly for buses.

- target: $.components.schemas.UptimeData.properties
  update:
    alternatorInfo:
      $ref: '#/components/schemas/AlternatorInfo'

# ChargingStatusInfo component
- target: $.components.schemas
  update:
    ChargingStatusInfo:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ChargingStatusEvent'
        eventDetail:
          type: string
          description: Details regarding the event. Content is OEM specific
          example: NOT_ALLOWED_TO_CHARGE
      description: Additional information can be provided if the trigger type is BATTERY_PACK_CHARGING_STATUS_CHANGE.

- target: $.components.schemas.Trigger.properties
  update:
    chargingStatusInfo:
      $ref: '#/components/schemas/ChargingStatusInfo'

# ChargingConnectionStatusInfo component
- target: $.components.schemas
  update:
    ChargingConnectionStatusInfo:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ChargingConnectionStatusEvent'
        eventDetail:
          type: string
          description: Details regarding the event. Content is OEM specific
          example: VEHICLE_NOT_IN_POSITION
      description: Additional information can be provided if the trigger type is BATTERY_PACK_CHARGING_CONNECTION_STATUS_CHANGE.

- target: $.components.schemas.Trigger.properties
  update:
    chargingConnectionStatusInfo:
      $ref: '#/components/schemas/ChargingConnectionStatusInfo'

# TrailerAxle component
- target: $.components.schemas
  update:
    TrailerAxle:
      type: object
      properties:
        trailerAxlePosition:
          type: integer
          description: Axle position from 1 to 15, 1 being in the front closest to the truck, according to ISO 11992-2.
          example: 1
        trailerAxleLoad:
          type: number
          description: The static vertical load of a trailer axle in kilograms. The load is sent in the RGE22 message of ISO11992-2.
          example: 456.5

- target: $.components.schemas
  update:
    Trailer:
      type: object
      properties:
        trailerNo:
          type: integer
          description: Trailer number from 1 to 5, 1 being closest to the truck, according to ISO 11992-2.
          example: 1.0
        trailerIdentificationData:
          type: string
          description: The identification data sent by the trailer to the truck in the RGE23 message of ISO 11992-2. An alternative source is the DID (Data identifier definition) record VIN, as specified in ISO 11992-4. Even though both ISO 11992-2 and ISO 11992-4 specifies this as a VIN, the actual data sent from a trailer is not always the true VIN of the trailer.
          example: ABC12345678901234
        trailerVin:
          type: string
          description: The vehicle identification number of the trailer. See ISO 3779 (17 characters) If the trailerIdentificationData is reporting a true VIN, trailerVin will have the same value. If it is possible to map the trailerIdentificationData to a true VIN using other sources, the value can be provided here.
          example: ABC12345678901234
        customerTrailerName:
          type: string
          description: The customer's name for the trailer
          example: Fridge trailer 5
        trailerType:
          $ref: '#/components/schemas/TrailerType'
        trailerAxleLoadSum:
          type: integer
          description: The sum of the static vertical loads of the trailer axles in kilograms. The load is sent in the EBS22 message of ISO 11992-2.
          example: 16200
        trailerAxles:
          type: array
          description: A list of trailer axles
          items:
            $ref: '#/components/schemas/TrailerAxle'

- target: $.components.schemas.SnapshotData.properties
  update:
    trailers:
      type: array
      description: List of trailers connected to the truck.
      items:
        $ref: '#/components/schemas/Trailer'

# EstimatedDistanceToEmpty component
- target: $.components.schemas
  update:
    EstimatedDistanceToEmpty:
      type: object
      description: Estimated distance to empty (tanks and/or battery packs) in meters
      properties:
        total:
          type: integer
          description: Estimated distance to empty, summarizing fuel, gas and battery in meters
          format: int64
          example: 503700
        fuel:
          type: integer
          description: Estimated distance to empty, fuel tank, in meters
          format: int64
          example: 457600
        gas:
          type: integer
          description: Estimated distance to empty, gas tank, in meters
          format: int64
          example: 299200
        batteryPack:
          type: integer
          description: Estimated distance to empty, battery pack, in meters
          format: int64
          example: 150900

- target: $.components.schemas.SnapshotData.properties
  update:
    estimatedDistanceToEmpty:
      $ref: '#/components/schemas/EstimatedDistanceToEmpty'

# VehicleAxle component
- target: $.components.schemas
  update:
    VehicleAxle:
      type: object
      properties:
        vehicleAxlePosition:
          type: integer
          description: Axle position from 1 to 15, 1 being in the front of the truck
          example: 1
        vehicleAxleLoad:
          type: number
          description: The static vertical load of a vehicle axle in kilograms.
          example: 4556.5

- target: $.components.schemas.SnapshotData.properties
  update:
    vehicleAxles:
      type: array
      description: A list of vehicle axles
      items:
        $ref: '#/components/schemas/VehicleAxle'

# TriggerType enum
- target: $.components.schemas
  update:
    TriggerType:
      type: string
      description: "Trigger types for Context=RFMS:\n
        TIMER - Data was sent due to a timer trigger. (Timer value set outside rFMS scope)\n
        IGNITION_ON - Data was sent due to an ignition on\n
        IGNITION_OFF - Data was sent due to an ignition off\n
        PTO_ENABLED - Data was sent due to that a PTO was enabled, will be sent for each PTO that gets enabled\n
        PTO_DISABLED - Data was sent due to that a PTO was disabled, will be sent for each PTO that gets disabled.\n
        DRIVER_LOGIN - Data was sent due to a successful driver login.\n
        DRIVER_LOGOUT - Data was sent due to a driver logout\n
        TELL_TALE - Data was sent due to that at least one tell tale changed state\n
        ENGINE_ON - Data was sent due to an engine on. For electric motor crank is on\n
        ENGINE_OFF - Data was sent due to an engine off. For electric motor crank is off\n
        DRIVER_1_WORKING_STATE_CHANGED - Data was sent due to that driver 1 changed working state\n
        DRIVER_2_WORKING_STATE_CHANGED - Data was sent due to that driver 2 changed working state\n
        DISTANCE_TRAVELLED - Data was sent due to that a set distance was travelled. (Distance set outside rFMS scope)\n
        FUEL_TYPE_CHANGE - Data was sent due to that the type of fuel currently being utilized by the vehicle changed\n
        PARKING_BRAKE_SWITCH_CHANGE - Data was sent due to that the parking brake state has changed\n
        BATTERY_PACK_CHARGING_STATUS_CHANGE - Data was sent due to a change in the battery pack charging status.\n
        BATTERY_PACK_CHARGING_CONNECTION_STATUS_CHANGE - Data was sent due to a change in the battery pack charging connection status.\n
        TRAILER_CONNECTED - One or several trailers were connected\n
        TRAILER_DISCONNECTED - One or several trailers were disconnected"
      enum:
        - TIMER
        - TELL_TALE
        - DRIVER_LOGIN
        - DRIVER_LOGOUT
        - IGNITION_ON
        - IGNITION_OFF
        - ENGINE_ON
        - ENGINE_OFF
        - PTO_ENABLED
        - PTO_DISABLED
        - DISTANCE_TRAVELLED
        - DRIVER_1_WORKING_STATE_CHANGED
        - DRIVER_2_WORKING_STATE_CHANGED
        - FUEL_TYPE_CHANGE
        - PARKING_BRAKE_SWITCH_CHANGE
        - BATTERY_PACK_CHARGING_STATUS_CHANGE
        - BATTERY_PACK_CHARGING_CONNECTION_STATUS_CHANGE
        - TRAILER_CONNECTED
        - TRAILER_DISCONNECTED
        - IGNITION_CHANGE # Scania-specific
        - TRAILER_CONNECTION_CHANGE # Scania-specific
      example: IGNITION_ON

- target: $.components.schemas.Trigger.properties
  update:
    triggerType:
      $ref: '#/components/schemas/TriggerType'

# Status2OfDoors enum
- target: $.components.schemas
  update:
    Status2OfDoors:
      type: string
      description: Composite indication of all bus door statuses. Bus specific parameter
      enum:
        - ALL_DOORS_DISABLED
        - AT_LEAST_ONE_DOOR_ENABLED
        - ERROR
        - NOT_AVAILABLE
      example: ALL_DOORS_DISABLED

- target: $.components.schemas.VehicleStatus.properties
  update:
    status2OfDoors:
      $ref: '#/components/schemas/Status2OfDoors'

# Door status enums
- target: $.components.schemas
  update:
    DoorEnabledStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ERROR
        - NOT_AVAILABLE
      example: ENABLED

- target: $.components.schemas
  update:
    DoorOpenStatus:
      type: string
      enum:
        - CLOSED
        - OPEN
        - ERROR
        - NOT_AVAILABLE
      example: CLOSED

- target: $.components.schemas
  update:
    DoorLockStatus:
      type: string
      enum:
        - UNLOCKED
        - LOCKED
        - ERROR
        - NOT_AVAILABLE
      example: UNLOCKED

# Battery charging status enums
- target: $.components.schemas
  update:
    BatteryPackChargingStatus:
      type: string
      description: "Indicates the charging status of the battery pack. Recuperation is excluded.\n
        Not charging - No charging\n
        Charging - Charging ongoing (AC or DC is unknown)\n
        Charging AC - AC charging ongoing\n
        Charging DC - DC charging ongoing\n
        Error - An error occurred when charging\n
        Not available - Charging status is not available"
      enum:
        - NOT_CHARGING
        - CHARGING
        - CHARGING_AC
        - CHARGING_DC
        - ERROR
        - NOT_AVAILABLE
      example: CHARGING

- target: $.components.schemas.SnapshotData.properties
  update:
    batteryPackChargingStatus:
      $ref: '#/components/schemas/BatteryPackChargingStatus'

- target: $.components.schemas
  update:
    BatteryPackChargingConnectionStatus:
      type: string
      description: "Indicates the charging connection status of the battery pack.\n
        Connecting - A charger is being connected\n
        Connected - A charger is connected\n
        Disconnecting - A charger is being disconnected\n
        Disconnected - No charger is connected\n
        Error - An error occurred when connecting or disconnecting\n
        Not available - Charging connection status is not available"
      enum:
        - CONNECTING
        - CONNECTED
        - DISCONNECTING
        - DISCONNECTED
        - ERROR
        - NOT_AVAILABLE
      example: ERROR

- target: $.components.schemas.SnapshotData.properties
  update:
    batteryPackChargingConnectionStatus:
      $ref: '#/components/schemas/BatteryPackChargingConnectionStatus'

# Driver working state
- target: $.components.schemas
  update:
    DriverWorkingState:
      type: string
      description: Tachograph Working state of the driver
      enum:
        - REST
        - DRIVER_AVAILABLE
        - WORK
        - DRIVE
        - ERROR
        - NOT_AVAILABLE
      example: DRIVE

- target: $.components.schemas
  update:
    DriverWorkingStateProperty:
      $ref: '#/components/schemas/DriverWorkingState'

# Driver authentication equipment
- target: $.components.schemas
  update:
    DriverAuthenticationType:
      type: string
      description: Code to distinguish different types of equipment for the tachograph application. See description of the field 'DriverAuthenticationEquipment' in COMMISSION REGULATION (EC) No 1360/2002 Annex 1b
      enum:
        - RESERVED
        - DRIVER_CARD
        - CONTROL_CARD
        - COMPANY_CARD
        - MANUFACTURING_CARD
        - VEHICLE_UNIT
        - MOTION_SENSOR
      example: DRIVER_CARD

# TellTale enums
- target: $.components.schemas
  update:
    TellTaleType:
      type: string
      enum:
        - COOLING_AIR_CONDITIONING
        - HIGH_BEAM_MAIN_BEAM
        - LOW_BEAM_DIPPED_BEAM
        - TURN_SIGNALS
        - HAZARD_WARNING
        - PROVISIONING_HANDICAPPED_PERSON
        - PARKING_BRAKE
        - BRAKE_MALFUNCTION
        - HATCH_OPEN
        - FUEL_LEVEL
        - ENGINE_COOLANT_TEMPERATURE
        - BATTERY_CHARGING_CONDITION
        - ENGINE_OIL
        - POSITION_LIGHTS
        - FRONT_FOG_LIGHT
        - REAR_FOG_LIGHT
        - PARKING_HEATER
        - ENGINE_MIL_INDICATOR
        - SERVICE_CALL_FOR_MAINTENANCE
        - TRANSMISSION_FLUID_TEMPERATURE
        - TRANSMISSION_MALFUNCTION
        - ANTI_LOCK_BRAKE_FAILURE
        - WORN_BRAKE_LININGS
        - WINDSCREEN_WASHER_FLUID
        - TIRE_MALFUNCTION
        - GENERAL_FAILURE
        - ENGINE_OIL_TEMPERATURE
        - ENGINE_OIL_LEVEL
        - ENGINE_COOLANT_LEVEL
        - STEERING_FLUID_LEVEL
        - STEERING_FAILURE
        - HEIGHT_CONTROL
        - RETARDER
        - ENGINE_EMISSION_FAILURE
        - ESC_INDICATOR
        - BRAKE_LIGHTS
        - ARTICULATION
        - STOP_REQUEST
        - PRAM_REQUEST
        - BUS_STOP_BRAKE
        - ADBLUE_LEVEL
        - RAISING
        - LOWERING
        - KNEELING
        - ENGINE_COMPARTMENT_TEMPERATURE
        - AUXILLARY_AIR_PRESSURE
        - AIR_FILTER_CLOGGED
        - FUEL_FILTER_DIFF_PRESSURE
        - SEAT_BELT
        - EBS
        - LANE_DEPARTURE_INDICATOR
        - ADVANCED_EMERGENCY_BREAKING
        - ACC
        - TRAILER_CONNECTED
        - ABS_TRAILER
        - AIRBAG
        - EBS_TRAILER_1_2
        - TACHOGRAPH_INDICATOR
        - ESC_SWITCHED_OFF
        - LANE_DEPARTURE_WARNING_SWITCHED_OFF
        - ENGINE_EMISSION_FILTER_SOOT_FILTER
        - ELECTRIC_MOTOR_FAILURES
        - ADBLUE_TAMPERING
        - MULTIPLEX_SYSTEM
        - BATTERY_PACK
        - HIGH_VOLTAGE_SYSTEM_CAUTION
        - BATTERY_PACK_TEMPERATURE
        - LIMITED_PERFORMANCE_ELECTRIC_MOTOR
        - BATTERY_PACK_COOLING
        - OEM_SPECIFIC_TELL_TALE
      example: FUEL_LEVEL

- target: $.components.schemas.TellTaleInfo.properties
  update:
    tellTale:
      $ref: '#/components/schemas/TellTaleType'

- target: $.components.schemas
  update:
    TellTaleState:
      type: string
      description: The current state of the tell tale.
      enum:
        - RED
        - YELLOW
        - INFO
        - OFF
        - RESERVED_4
        - RESERVED_5
        - RESERVED_6
        - NOT_AVAILABLE
      example: YELLOW

- target: $.components.schemas.TellTaleInfo.properties
  update:
    state:
      $ref: '#/components/schemas/TellTaleState'

# Trailer type enum
- target: $.components.schemas
  update:
    TrailerType:
      type: string
      description: Indicates the type of the trailer. The type is sent in the EBS24 message of ISO 11992-2.
      enum:
        - SEMI_TRAILER
        - CENTRE_AXLE_TRAILER
        - FULL_TRAILER
        - CONVERTER_DOLLY
        - LINK_TRAILER
        - TOWING_SEMI_TRAILER
        - TOWING_CENTRE_AXLE_TRAILER
        - TOWING_FULL_TRAILER
        - UNKNOWN
      example: SEMI_TRAILER

# Charging status event enums
- target: $.components.schemas
  update:
    ChargingStatusEvent:
      type: string
      description: "CHARGING_STARTED - Charging has started\n
        CHARGING_COMPLETED - Charging is completed\n
        CHARGING_INTERRUPTED - Charging has been interrupted (no error)\n
        ERROR - An error occurred when charging\n
        ESTIMATED_COMPLETION_TIME_CHANGED - The estimated time for completed charging has changed. (Threshold is outside scope of rFMS)\n
        TIMER - A predefined time has passed since last charge status update. (Frequency is outside the scope of rFMS)\n
        CHARGING_LEVEL - The charging level has reached a predefined level. (Charging levels are outside the scope of rFMS)"
      enum:
        - CHARGING_STARTED
        - CHARGING_COMPLETED
        - CHARGING_INTERRUPTED
        - ERROR
        - ESTIMATED_COMPLETION_TIME_CHANGED
        - TIMER
        - CHARGING_LEVEL
      example: ERROR

- target: $.components.schemas
  update:
    ChargingConnectionStatusEvent:
      type: string
      description: "CONNECTING - Vehicle is being connected to a charger\n
        CONNECTED - Vehicle is connected to a charger\n
        DISCONNECTING - Vehicle is being disconnected from the charger\n
        DISCONNECTED - Vehicle is not connected to a charger\n
        ERROR - An error occurred"
      enum:
        - CONNECTING
        - CONNECTED
        - DISCONNECTING
        - DISCONNECTED
        - ERROR
      example: ERROR

# Alternator status enum
- target: $.components.schemas
  update:
    AlternatorStatus:
      type: string
      enum:
        - NOT_CHARGING
        - CHARGING
        - ERROR
        - NOT_AVAILABLE
      example: CHARGING

- target: $.components.schemas.GNSSPosition.properties.heading
  update:
    x-go-type: Int

- target: $..[?(@.type=="array")]
  description: "Skip pointer to Go slices"
  update:
    x-go-type-skip-optional-pointer: true

- target: $..[?(@.required)]
  description: "Remove required from all fields"
  update:
    required: null

- target: $..[?(@.type=="integer" && !@.format)]
  description: "Default integers to int32 if no format is provided"
  update:
    format: int32

- target: $..[?(@.type=="string" && @.format=="date-time")]
  description: "Use custom type to handle non-conformance with RFC3339"
  update:
    x-go-type: Time

- target: $..[?(@.type=="string")]
  description: "Skip optional pointer for strings"
  update:
    x-go-type-skip-optional-pointer: true

- target: $.components.schemas
  description: "Skip optional pointer on request fields"
  update:
    VehiclesResponse:
      properties:
        vehicleResponse:
          x-go-type-skip-optional-pointer: true
        moreDataAvailable:
          x-go-type-skip-optional-pointer: true
    VehicleStatusesResponse:
      properties:
        vehicleStatusResponse:
          x-go-type-skip-optional-pointer: true
        moreDataAvailable:
          x-go-type-skip-optional-pointer: true
    VehiclePositionsResponse:
      properties:
        vehiclePositionResponse:
          x-go-type-skip-optional-pointer: true
        moreDataAvailable:
          x-go-type-skip-optional-pointer: true
