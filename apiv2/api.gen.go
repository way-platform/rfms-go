// Package apiv2 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package apiv2

import (
	"time"
)

const (
	BasicAuthScopes = "basicAuth.Scopes"
)

// Defines values for ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus.
const (
	ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatusCHARGING     ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus = "CHARGING"
	ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatusERROR        ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus = "ERROR"
	ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatusNOTAVAILABLE ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus = "NOT_AVAILABLE"
	ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatusNOTCHARGING  ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus = "NOT_CHARGING"
)

// Defines values for ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus.
const (
	ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatusDISABLED     ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus = "DISABLED"
	ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatusENABLED      ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus = "ENABLED"
	ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatusERROR        ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus = "ERROR"
	ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatusNOTAVAILABLE ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus = "NOT_AVAILABLE"
)

// Defines values for ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus.
const (
	ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatusERROR        ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus = "ERROR"
	ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatusLOCKED       ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus = "LOCKED"
	ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatusNOTAVAILABLE ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus = "NOT_AVAILABLE"
	ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatusUNLOCKED     ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus = "UNLOCKED"
)

// Defines values for ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus.
const (
	ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatusCLOSED       ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus = "CLOSED"
	ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatusERROR        ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus = "ERROR"
	ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatusNOTAVAILABLE ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus = "NOT_AVAILABLE"
	ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatusOPEN         ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus = "OPEN"
)

// Defines values for ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState.
const (
	ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingStateDRIVE           ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState = "DRIVE"
	ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingStateDRIVERAVAILABLE ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState = "DRIVER_AVAILABLE"
	ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingStateERROR           ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState = "ERROR"
	ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingStateNOTAVAILABLE    ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState = "NOT_AVAILABLE"
	ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingStateREST            ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState = "REST"
	ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingStateWORK            ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState = "WORK"
)

// Defines values for ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState.
const (
	ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingStateDRIVE           ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState = "DRIVE"
	ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingStateDRIVERAVAILABLE ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState = "DRIVER_AVAILABLE"
	ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingStateERROR           ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState = "ERROR"
	ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingStateNOTAVAILABLE    ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState = "NOT_AVAILABLE"
	ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingStateREST            ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState = "REST"
	ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingStateWORK            ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState = "WORK"
)

// Defines values for ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment.
const (
	COMPANYCARD       ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "COMPANY_CARD"
	CONTROLCARD       ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "CONTROL_CARD"
	DRIVERCARD        ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "DRIVER_CARD"
	MANUFACTURINGCARD ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "MANUFACTURING_CARD"
	MOTIONSENSOR      ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "MOTION_SENSOR"
	RESERVED          ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "RESERVED"
	VEHICLEUNIT       ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment = "VEHICLE_UNIT"
)

// Defines values for ComFmsStandardRfmsV21TellTaleInfoTypeState.
const (
	ComFmsStandardRfmsV21TellTaleInfoTypeStateINFO         ComFmsStandardRfmsV21TellTaleInfoTypeState = "INFO"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateNOTAVAILABLE ComFmsStandardRfmsV21TellTaleInfoTypeState = "NOT_AVAILABLE"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateOFF          ComFmsStandardRfmsV21TellTaleInfoTypeState = "OFF"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateRED          ComFmsStandardRfmsV21TellTaleInfoTypeState = "RED"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateRESERVED4    ComFmsStandardRfmsV21TellTaleInfoTypeState = "RESERVED_4"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateRESERVED5    ComFmsStandardRfmsV21TellTaleInfoTypeState = "RESERVED_5"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateRESERVED6    ComFmsStandardRfmsV21TellTaleInfoTypeState = "RESERVED_6"
	ComFmsStandardRfmsV21TellTaleInfoTypeStateYELLOW       ComFmsStandardRfmsV21TellTaleInfoTypeState = "YELLOW"
)

// Defines values for ComFmsStandardRfmsV21TellTaleInfoTypeTellTale.
const (
	ABSTRAILER                      ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ABS_TRAILER"
	ACC                             ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ACC"
	ADBLUELEVEL                     ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ADBLUE_LEVEL"
	ADVANCEDEMERGENCYBREAKING       ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ADVANCED_EMERGENCY_BREAKING"
	AIRBAG                          ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "AIRBAG"
	AIRFILTERCLOGGED                ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "AIR_FILTER_CLOGGED"
	ANTILOCKBRAKEFAILURE            ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ANTI_LOCK_BRAKE_FAILURE"
	ARTICULATION                    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ARTICULATION"
	AUXILLARYAIRPRESSURE            ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "AUXILLARY_AIR_PRESSURE"
	BATTERYCHARGINGCONDITION        ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "BATTERY_CHARGING_CONDITION"
	BRAKELIGHTS                     ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "BRAKE_LIGHTS"
	BRAKEMALFUNCTION                ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "BRAKE_MALFUNCTION"
	BUSSTOPBRAKE                    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "BUS_STOP_BRAKE"
	COOLINGAIRCONDITIONING          ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "COOLING_AIR_CONDITIONING"
	EBS                             ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "EBS"
	EBSTRAILER12                    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "EBS_TRAILER_1_2"
	ENGINECOMPARTMENTTEMPERATURE    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_COMPARTMENT_TEMPERATURE"
	ENGINECOOLANTLEVEL              ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_COOLANT_LEVEL"
	ENGINECOOLANTTEMPERATURE        ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_COOLANT_TEMPERATURE"
	ENGINEEMISSIONFAILURE           ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_EMISSION_FAILURE"
	ENGINEMILINDICATOR              ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_MIL_INDICATOR"
	ENGINEOIL                       ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_OIL"
	ENGINEOILLEVEL                  ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_OIL_LEVEL"
	ENGINEOILTEMPERATURE            ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ENGINE_OIL_TEMPERATURE"
	ESCINDICATOR                    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ESC_INDICATOR"
	ESCSWITCHEDOFF                  ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "ESC_SWITCHED_OFF"
	FRONTFOGLIGHT                   ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "FRONT_FOG_LIGHT"
	FUELFILTERDIFFPRESSURE          ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "FUEL_FILTER_DIFF_PRESSURE"
	FUELLEVEL                       ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "FUEL_LEVEL"
	GENERALFAILURE                  ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "GENERAL_FAILURE"
	HATCHOPEN                       ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "HATCH_OPEN"
	HAZARDWARNING                   ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "HAZARD_WARNING"
	HEIGHTCONTROL                   ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "HEIGHT_CONTROL"
	HIGHBEAMMAINBEAM                ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "HIGH_BEAM_MAIN_BEAM"
	KNEELING                        ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "KNEELING"
	LANEDEPARTUREINDICATOR          ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "LANE_DEPARTURE_INDICATOR"
	LANEDEPARTUREWARNINGSWITCHEDOFF ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "LANE_DEPARTURE_WARNING_SWITCHED_OFF"
	LOWBEAMDIPPEDBEAM               ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "LOW_BEAM_DIPPED_BEAM"
	LOWERING                        ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "LOWERING"
	OEMSPECIFICTELLTALE             ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "OEM_SPECIFIC_TELL_TALE"
	PARKINGBRAKE                    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "PARKING_BRAKE"
	PARKINGHEATER                   ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "PARKING_HEATER"
	POSITIONLIGHTS                  ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "POSITION_LIGHTS"
	PRAMREQUEST                     ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "PRAM_REQUEST"
	PROVISIONINGHANDICAPPEDPERSON   ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "PROVISIONING_HANDICAPPED_PERSON"
	RAISING                         ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "RAISING"
	REARFOGLIGHT                    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "REAR_FOG_LIGHT"
	RETARDER                        ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "RETARDER"
	SEATBELT                        ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "SEAT_BELT"
	SERVICECALLFORMAINTENANCE       ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "SERVICE_CALL_FOR_MAINTENANCE"
	STEERINGFAILURE                 ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "STEERING_FAILURE"
	STEERINGFLUIDLEVEL              ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "STEERING_FLUID_LEVEL"
	STOPREQUEST                     ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "STOP_REQUEST"
	TACHOGRAPHINDICATOR             ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "TACHOGRAPH_INDICATOR"
	TIREMALFUNCTION                 ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "TIRE_MALFUNCTION"
	TRAILERCONNECTED                ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "TRAILER_CONNECTED"
	TRANSMISSIONFLUIDTEMPERATURE    ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "TRANSMISSION_FLUID_TEMPERATURE"
	TRANSMISSIONMALFUNCTION         ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "TRANSMISSION_MALFUNCTION"
	TURNSIGNALS                     ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "TURN_SIGNALS"
	WINDSCREENWASHERFLUID           ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "WINDSCREEN_WASHER_FLUID"
	WORNBRAKELININGS                ComFmsStandardRfmsV21TellTaleInfoTypeTellTale = "WORN_BRAKE_LININGS"
)

// Defines values for ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors.
const (
	ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoorsALLDOORSDISABLED      ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors = "ALL_DOORS_DISABLED"
	ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoorsATLEASTONEDOORENABLED ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors = "AT_LEAST_ONE_DOOR_ENABLED"
	ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoorsERROR                 ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors = "ERROR"
	ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoorsNOTAVAILABLE          ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors = "NOT_AVAILABLE"
)

// ComFmsStandardRfmsV21AccumulatedType defines model for com.fms_standard.rfms.v2_1.AccumulatedType.
type ComFmsStandardRfmsV21AccumulatedType struct {
	AccelerationClass                     *ComFmsStandardRfmsV21FromToClassesType `json:"AccelerationClass,omitempty"`
	AccelerationDuringBrakeClass          *ComFmsStandardRfmsV21FromToClassesType `json:"AccelerationDuringBrakeClass,omitempty"`
	AccelerationPedalPositionClass        *ComFmsStandardRfmsV21FromToClassesType `json:"AccelerationPedalPositionClass,omitempty"`
	BrakePedalCounterSpeedOverZero        *int64                                  `json:"BrakePedalCounterSpeedOverZero,omitempty"`
	ChairliftCounter                      *int64                                  `json:"ChairliftCounter,omitempty"`
	CurrentGearClass                      *ComFmsStandardRfmsV21LabelClassesType  `json:"CurrentGearClass,omitempty"`
	DistanceBrakePedalActiveSpeedOverZero *int64                                  `json:"DistanceBrakePedalActiveSpeedOverZero,omitempty"`
	DistanceCruiseControlActive           *int64                                  `json:"DistanceCruiseControlActive,omitempty"`
	DrivingWithoutTorqueClass             *ComFmsStandardRfmsV21LabelClassesType  `json:"DrivingWithoutTorqueClass,omitempty"`
	DurationCruiseControlActive           *int64                                  `json:"DurationCruiseControlActive,omitempty"`
	DurationWheelbaseSpeedOverZero        *int64                                  `json:"DurationWheelbaseSpeedOverZero,omitempty"`
	DurationWheelbaseSpeedZero            *int64                                  `json:"DurationWheelbaseSpeedZero,omitempty"`
	EngineSpeedClass                      *ComFmsStandardRfmsV21FromToClassesType `json:"EngineSpeedClass,omitempty"`
	EngineTorqueAtCurrentSpeedClass       *ComFmsStandardRfmsV21FromToClassesType `json:"EngineTorqueAtCurrentSpeedClass,omitempty"`
	EngineTorqueClass                     *ComFmsStandardRfmsV21FromToClassesType `json:"EngineTorqueClass,omitempty"`
	FuelConsumptionCruiseControlActive    *int64                                  `json:"FuelConsumptionCruiseControlActive,omitempty"`
	FuelWheelbaseSpeedOverZero            *int64                                  `json:"FuelWheelbaseSpeedOverZero,omitempty"`
	FuelWheelbaseSpeedZero                *int64                                  `json:"FuelWheelbaseSpeedZero,omitempty"`
	HighAccelerationClass                 *ComFmsStandardRfmsV21FromToClassesType `json:"HighAccelerationClass,omitempty"`
	KneelingCounter                       *int64                                  `json:"KneelingCounter,omitempty"`
	PramRequestCounter                    *int64                                  `json:"PramRequestCounter,omitempty"`
	PtoActiveClass                        *ComFmsStandardRfmsV21LabelClassesType  `json:"PtoActiveClass,omitempty"`
	RetarderTorqueClass                   *ComFmsStandardRfmsV21FromToClassesType `json:"RetarderTorqueClass,omitempty"`
	SelectedGearClass                     *ComFmsStandardRfmsV21LabelClassesType  `json:"SelectedGearClass,omitempty"`
	StopRequestCounter                    *int64                                  `json:"StopRequestCounter,omitempty"`
	VehicleSpeedClass                     *ComFmsStandardRfmsV21FromToClassesType `json:"VehicleSpeedClass,omitempty"`
}

// ComFmsStandardRfmsV21AlternatorInfoType defines model for com.fms_standard.rfms.v2_1.AlternatorInfoType.
type ComFmsStandardRfmsV21AlternatorInfoType struct {
	AlternatorNumber *int64                                                  `json:"AlternatorNumber,omitempty"`
	AlternatorStatus ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus `json:"AlternatorStatus"`
}

// ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus defines model for ComFmsStandardRfmsV21AlternatorInfoType.AlternatorStatus.
type ComFmsStandardRfmsV21AlternatorInfoTypeAlternatorStatus string

// ComFmsStandardRfmsV21DoorStatusType defines model for com.fms_standard.rfms.v2_1.DoorStatusType.
type ComFmsStandardRfmsV21DoorStatusType struct {
	DoorEnabledStatus *ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus `json:"DoorEnabledStatus,omitempty"`
	DoorLockStatus    *ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus    `json:"DoorLockStatus,omitempty"`
	DoorNumber        *int64                                                `json:"DoorNumber,omitempty"`
	DoorOpenStatus    *ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus    `json:"DoorOpenStatus,omitempty"`
}

// ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus defines model for ComFmsStandardRfmsV21DoorStatusType.DoorEnabledStatus.
type ComFmsStandardRfmsV21DoorStatusTypeDoorEnabledStatus string

// ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus defines model for ComFmsStandardRfmsV21DoorStatusType.DoorLockStatus.
type ComFmsStandardRfmsV21DoorStatusTypeDoorLockStatus string

// ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus defines model for ComFmsStandardRfmsV21DoorStatusType.DoorOpenStatus.
type ComFmsStandardRfmsV21DoorStatusTypeDoorOpenStatus string

// ComFmsStandardRfmsV21DriverIdType defines model for com.fms_standard.rfms.v2_1.DriverIdType.
type ComFmsStandardRfmsV21DriverIdType struct {
	OemDriverIdentification   *ComFmsStandardRfmsV21OemDriverIdentificationType   `json:"OemDriverIdentification,omitempty"`
	TachoDriverIdentification *ComFmsStandardRfmsV21TachoDriverIdentificationType `json:"TachoDriverIdentification,omitempty"`
}

// ComFmsStandardRfmsV21FromToClassType defines model for com.fms_standard.rfms.v2_1.FromToClassType.
type ComFmsStandardRfmsV21FromToClassType struct {
	From        *float64 `json:"From,omitempty"`
	Meters      *int64   `json:"Meters,omitempty"`
	MilliLitres *int64   `json:"MilliLitres,omitempty"`
	Seconds     *int64   `json:"Seconds,omitempty"`
	To          *float64 `json:"To,omitempty"`
}

// ComFmsStandardRfmsV21FromToClassesType defines model for com.fms_standard.rfms.v2_1.FromToClassesType.
type ComFmsStandardRfmsV21FromToClassesType struct {
	Value *[]ComFmsStandardRfmsV21FromToClassType `json:"Value,omitempty"`
}

// ComFmsStandardRfmsV21GNSSPositionType defines model for com.fms_standard.rfms.v2_1.GNSSPositionType.
type ComFmsStandardRfmsV21GNSSPositionType struct {
	Altitude         *int64    `json:"Altitude,omitempty"`
	Heading          *int32    `json:"Heading,omitempty"`
	Latitude         *float64  `json:"Latitude,omitempty"`
	Longitude        *float64  `json:"Longitude,omitempty"`
	PositionDateTime time.Time `json:"PositionDateTime"`
	Speed            *float64  `json:"Speed,omitempty"`
}

// ComFmsStandardRfmsV21LabelClassType defines model for com.fms_standard.rfms.v2_1.LabelClassType.
type ComFmsStandardRfmsV21LabelClassType struct {
	Label       string `json:"Label"`
	Meters      *int64 `json:"Meters,omitempty"`
	MilliLitres *int64 `json:"MilliLitres,omitempty"`
	Seconds     *int64 `json:"Seconds,omitempty"`
}

// ComFmsStandardRfmsV21LabelClassesType defines model for com.fms_standard.rfms.v2_1.LabelClassesType.
type ComFmsStandardRfmsV21LabelClassesType struct {
	Value *[]ComFmsStandardRfmsV21LabelClassType `json:"Value,omitempty"`
}

// ComFmsStandardRfmsV21OemDriverIdentificationType defines model for com.fms_standard.rfms.v2_1.OemDriverIdentificationType.
type ComFmsStandardRfmsV21OemDriverIdentificationType struct {
	IdType                  *string `json:"IdType,omitempty"`
	OemDriverIdentification string  `json:"OemDriverIdentification"`
}

// ComFmsStandardRfmsV21ProductionDateType defines model for com.fms_standard.rfms.v2_1.ProductionDateType.
type ComFmsStandardRfmsV21ProductionDateType struct {
	Day   *int32 `json:"Day,omitempty"`
	Month *int32 `json:"Month,omitempty"`
	Year  *int32 `json:"Year,omitempty"`
}

// ComFmsStandardRfmsV21SnapshotType defines model for com.fms_standard.rfms.v2_1.SnapshotType.
type ComFmsStandardRfmsV21SnapshotType struct {
	AmbientAirTemperature *float64                                              `json:"AmbientAirTemperature,omitempty"`
	CatalystFuelLevel     *float64                                              `json:"CatalystFuelLevel,omitempty"`
	Driver1WorkingState   *ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState `json:"Driver1WorkingState,omitempty"`
	Driver2Id             *ComFmsStandardRfmsV21DriverIdType                    `json:"Driver2Id,omitempty"`
	Driver2WorkingState   *ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState `json:"Driver2WorkingState,omitempty"`
	EngineSpeed           *float64                                              `json:"EngineSpeed,omitempty"`
	FuelLevel1            *float64                                              `json:"FuelLevel1,omitempty"`
	GNSSPosition          *ComFmsStandardRfmsV21GNSSPositionType                `json:"GNSSPosition,omitempty"`
	TachographSpeed       *float64                                              `json:"TachographSpeed,omitempty"`
	WheelBasedSpeed       *float64                                              `json:"WheelBasedSpeed,omitempty"`
}

// ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState defines model for ComFmsStandardRfmsV21SnapshotType.Driver1WorkingState.
type ComFmsStandardRfmsV21SnapshotTypeDriver1WorkingState string

// ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState defines model for ComFmsStandardRfmsV21SnapshotType.Driver2WorkingState.
type ComFmsStandardRfmsV21SnapshotTypeDriver2WorkingState string

// ComFmsStandardRfmsV21TachoDriverIdentificationType defines model for com.fms_standard.rfms.v2_1.TachoDriverIdentificationType.
type ComFmsStandardRfmsV21TachoDriverIdentificationType struct {
	CardIssuingMemberState        string                                                                           `json:"CardIssuingMemberState"`
	CardRenewalIndex              *string                                                                          `json:"CardRenewalIndex,omitempty"`
	CardReplacementIndex          *string                                                                          `json:"CardReplacementIndex,omitempty"`
	DriverAuthenticationEquipment *ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment `json:"DriverAuthenticationEquipment,omitempty"`
	DriverIdentification          string                                                                           `json:"DriverIdentification"`
}

// ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment defines model for ComFmsStandardRfmsV21TachoDriverIdentificationType.DriverAuthenticationEquipment.
type ComFmsStandardRfmsV21TachoDriverIdentificationTypeDriverAuthenticationEquipment string

// ComFmsStandardRfmsV21TellTaleInfoType defines model for com.fms_standard.rfms.v2_1.TellTaleInfoType.
type ComFmsStandardRfmsV21TellTaleInfoType struct {
	State    ComFmsStandardRfmsV21TellTaleInfoTypeState    `json:"State"`
	TellTale ComFmsStandardRfmsV21TellTaleInfoTypeTellTale `json:"TellTale"`
}

// ComFmsStandardRfmsV21TellTaleInfoTypeState defines model for ComFmsStandardRfmsV21TellTaleInfoType.State.
type ComFmsStandardRfmsV21TellTaleInfoTypeState string

// ComFmsStandardRfmsV21TellTaleInfoTypeTellTale defines model for ComFmsStandardRfmsV21TellTaleInfoType.TellTale.
type ComFmsStandardRfmsV21TellTaleInfoTypeTellTale string

// ComFmsStandardRfmsV21TriggerType defines model for com.fms_standard.rfms.v2_1.TriggerType.
type ComFmsStandardRfmsV21TriggerType struct {
	Context      string                                   `json:"Context"`
	DriverId     *ComFmsStandardRfmsV21DriverIdType       `json:"DriverId,omitempty"`
	PtoId        *string                                  `json:"PtoId,omitempty"`
	TellTaleInfo *[]ComFmsStandardRfmsV21TellTaleInfoType `json:"TellTaleInfo,omitempty"`
	TriggerInfo  *[]string                                `json:"TriggerInfo,omitempty"`
	TriggerType  string                                   `json:"TriggerType"`
}

// ComFmsStandardRfmsV21UptimeType defines model for com.fms_standard.rfms.v2_1.UptimeType.
type ComFmsStandardRfmsV21UptimeType struct {
	AlternatorInfo                  *[]ComFmsStandardRfmsV21AlternatorInfoType `json:"AlternatorInfo,omitempty"`
	BellowPressureFrontAxleLeft     *int64                                     `json:"BellowPressureFrontAxleLeft,omitempty"`
	BellowPressureFrontAxleRight    *int64                                     `json:"BellowPressureFrontAxleRight,omitempty"`
	BellowPressureRearAxleLeft      *int64                                     `json:"BellowPressureRearAxleLeft,omitempty"`
	BellowPressureRearAxleRight     *int64                                     `json:"BellowPressureRearAxleRight,omitempty"`
	DurationAtLeastOneDoorOpen      *int64                                     `json:"DurationAtLeastOneDoorOpen,omitempty"`
	EngineCoolantTemperature        *float64                                   `json:"EngineCoolantTemperature,omitempty"`
	ServiceBrakeAirPressureCircuit1 *int64                                     `json:"ServiceBrakeAirPressureCircuit1,omitempty"`
	ServiceBrakeAirPressureCircuit2 *int64                                     `json:"ServiceBrakeAirPressureCircuit2,omitempty"`
	ServiceDistance                 *int64                                     `json:"ServiceDistance,omitempty"`
	TellTaleInfo                    *[]ComFmsStandardRfmsV21TellTaleInfoType   `json:"TellTaleInfo,omitempty"`
}

// ComFmsStandardRfmsV21VehiclePositionType defines model for com.fms_standard.rfms.v2_1.VehiclePositionType.
type ComFmsStandardRfmsV21VehiclePositionType struct {
	CreatedDateTime  time.Time                              `json:"CreatedDateTime"`
	GNSSPosition     *ComFmsStandardRfmsV21GNSSPositionType `json:"GNSSPosition,omitempty"`
	ReceivedDateTime time.Time                              `json:"ReceivedDateTime"`
	TachographSpeed  *float64                               `json:"TachographSpeed,omitempty"`
	TriggerType      ComFmsStandardRfmsV21TriggerType       `json:"TriggerType"`
	VIN              string                                 `json:"VIN"`
	WheelBasedSpeed  *float64                               `json:"WheelBasedSpeed,omitempty"`
}

// ComFmsStandardRfmsV21VehiclePositions defines model for com.fms_standard.rfms.v2_1.VehiclePositions.
type ComFmsStandardRfmsV21VehiclePositions struct {
	MoreDataAvailable     *bool                                       `json:"MoreDataAvailable,omitempty"`
	RequestServerDateTime time.Time                                   `json:"RequestServerDateTime"`
	VehiclePosition       *[]ComFmsStandardRfmsV21VehiclePositionType `json:"VehiclePosition,omitempty"`
}

// ComFmsStandardRfmsV21VehicleStatusType defines model for com.fms_standard.rfms.v2_1.VehicleStatusType.
type ComFmsStandardRfmsV21VehicleStatusType struct {
	AccumulatedData               *ComFmsStandardRfmsV21AccumulatedType                 `json:"AccumulatedData,omitempty"`
	CreatedDateTime               time.Time                                             `json:"CreatedDateTime"`
	DoorStatus                    *[]ComFmsStandardRfmsV21DoorStatusType                `json:"DoorStatus,omitempty"`
	Driver1Id                     *ComFmsStandardRfmsV21DriverIdType                    `json:"Driver1Id,omitempty"`
	EngineTotalFuelUsed           *int64                                                `json:"EngineTotalFuelUsed,omitempty"`
	GrossCombinationVehicleWeight *int                                                  `json:"GrossCombinationVehicleWeight,omitempty"`
	HRTotalVehicleDistance        *int64                                                `json:"HRTotalVehicleDistance,omitempty"`
	ReceivedDateTime              time.Time                                             `json:"ReceivedDateTime"`
	SnapshotData                  *ComFmsStandardRfmsV21SnapshotType                    `json:"SnapshotData,omitempty"`
	Status2OfDoors                *ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors `json:"Status2OfDoors,omitempty"`
	TotalEngineHours              *float64                                              `json:"TotalEngineHours,omitempty"`
	TriggerType                   ComFmsStandardRfmsV21TriggerType                      `json:"TriggerType"`
	UptimeData                    *ComFmsStandardRfmsV21UptimeType                      `json:"UptimeData,omitempty"`
	Vin                           string                                                `json:"Vin"`
}

// ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors defines model for ComFmsStandardRfmsV21VehicleStatusType.Status2OfDoors.
type ComFmsStandardRfmsV21VehicleStatusTypeStatus2OfDoors string

// ComFmsStandardRfmsV21VehicleStatuses defines model for com.fms_standard.rfms.v2_1.VehicleStatuses.
type ComFmsStandardRfmsV21VehicleStatuses struct {
	MoreDataAvailable     *bool                                     `json:"MoreDataAvailable,omitempty"`
	RequestServerDateTime time.Time                                 `json:"RequestServerDateTime"`
	VehicleStatus         *[]ComFmsStandardRfmsV21VehicleStatusType `json:"VehicleStatus,omitempty"`
}

// ComFmsStandardRfmsV21VehicleType defines model for com.fms_standard.rfms.v2_1.VehicleType.
type ComFmsStandardRfmsV21VehicleType struct {
	BodyType            *string                                  `json:"BodyType,omitempty"`
	Brand               *string                                  `json:"Brand,omitempty"`
	ChassisType         *string                                  `json:"ChassisType,omitempty"`
	CustomerVehicleName *string                                  `json:"CustomerVehicleName,omitempty"`
	DoorConfiguration   *[]int32                                 `json:"DoorConfiguration,omitempty"`
	EmissionLevel       *string                                  `json:"EmissionLevel,omitempty"`
	GearboxType         *string                                  `json:"GearboxType,omitempty"`
	HasRampOrLift       *bool                                    `json:"HasRampOrLift,omitempty"`
	Model               *string                                  `json:"Model,omitempty"`
	NoOfAxles           *int32                                   `json:"NoOfAxles,omitempty"`
	PossibleFuelType    *[]string                                `json:"PossibleFuelType,omitempty"`
	ProductionDate      *ComFmsStandardRfmsV21ProductionDateType `json:"ProductionDate,omitempty"`
	TachographType      *string                                  `json:"TachographType,omitempty"`
	TellTaleCode        *string                                  `json:"TellTaleCode,omitempty"`
	TotalFuelTankVolume *int64                                   `json:"TotalFuelTankVolume,omitempty"`
	Type                *string                                  `json:"Type,omitempty"`
	VIN                 string                                   `json:"VIN"`
}

// ComFmsStandardRfmsV21Vehicles defines model for com.fms_standard.rfms.v2_1.Vehicles.
type ComFmsStandardRfmsV21Vehicles struct {
	MoreDataAvailable *bool                               `json:"MoreDataAvailable,omitempty"`
	Vehicle           *[]ComFmsStandardRfmsV21VehicleType `json:"Vehicle,omitempty"`
}

// GetVehiclePosition210UsingGET1Params defines parameters for GetVehiclePosition210UsingGET1.
type GetVehiclePosition210UsingGET1Params struct {
	// Vin Vehicle Identification Number, 17 characters.
	Vin *string `form:"vin,omitempty" json:"vin,omitempty"`

	// Starttime Only the data created/received after this time should be returned. Format: yyyy-MM-dd'T'HH:mm:ss'Z'
	Starttime *string `form:"starttime,omitempty" json:"starttime,omitempty"`

	// Stoptime Only the data created/received before this time should be returned. Format: yyyy-MM-dd'T'HH:mm:ss'Z'
	Stoptime *string `form:"stoptime,omitempty" json:"stoptime,omitempty"`

	// Datetype The start/stop times are compared to the created or received time of the position reports. If this isn’t supplied all times are received times.Possible values are: 'created/received'
	Datetype *string `form:"datetype,omitempty" json:"datetype,omitempty"`

	// TriggerFilter Will only return data reports that were triggered by the trigger
	// defined by the filter. Possible values are:
	//  * TIMER
	//  * TELL_TALE
	//  * DRIVER_LOGIN
	//  * DRIVER_LOGOUT
	//  * IGNITION_ON
	//  * IGNITION_OFF
	//  * ENGINE_ON
	//  * ENGINE_OFF
	//  * PTO_ENABLED
	//  * PTO_DISABLED
	//  * DISTANCE_TRAVELLED
	//  * DRIVER_1_WORKING_STATE_CHANGED
	//  * DRIVER_2_WORKING_STATE_CHANGED
	//
	// If several values are used in the filter they should be in
	// a comma-separated list (Ex: triggerFilter=DRIVER_LOGIN,TIMER). If
	// this filter parameter isn’t supplied the returned data reports
	// contain data reports triggered by any trigger.
	TriggerFilter *string `form:"triggerFilter,omitempty" json:"triggerFilter,omitempty"`

	// LatestOnly If this value is set to true only the last vehicle status event is returned for each vehicle in the response. If this value is set to false (or not present) all vehicle status events matching the starttime/stoptime criteria is returned for each vehicle in the response.
	LatestOnly *bool `form:"latestOnly,omitempty" json:"latestOnly,omitempty"`
}

// GetVehicles210UsingGET1Params defines parameters for GetVehicles210UsingGET1.
type GetVehicles210UsingGET1Params struct {
	// LastVin Mandatory if moreDataAvailable parameter was set to true in previous request for vehicles. It should be set to the VIN of the last vehicle in the result set of this message. The response will return the next block of vehicles not including the one with the given VIN. If moreDataAvailable parameter is set to true the VIN of the last item in the vehicle list in the response is set to lastVin parameter in the next call.
	LastVin *string `form:"lastVin,omitempty" json:"lastVin,omitempty"`
}

// GetVehicleStatus210UsingGET1Params defines parameters for GetVehicleStatus210UsingGET1.
type GetVehicleStatus210UsingGET1Params struct {
	// Vin Vehicle Identification Number, 17 characters.
	Vin *string `form:"vin,omitempty" json:"vin,omitempty"`

	// Starttime Only the data created/received after or equal to this time should be returned. Format: yyyy-MM-dd'T'HH:mm:ss'Z'
	Starttime *string `form:"starttime,omitempty" json:"starttime,omitempty"`

	// Stoptime Only the data created/received before this time should be returned. Format: yyyy-MM-dd'T'HH:mm:ss'Z'
	Stoptime *string `form:"stoptime,omitempty" json:"stoptime,omitempty"`

	// Datetype The start/stop times are compared to the created or received time of the position reports. If this isn’t supplied all times are received times.Possible values are: 'created/received'
	Datetype *string `form:"datetype,omitempty" json:"datetype,omitempty"`

	// ContentFilter Will only return data reports that contain information in the area
	// defined by the filters. Possible values are:
	// 'SNAPSHOT/ACCUMULATED/UPTIME'. If several values are used in the
	// filter they should be in a comma-separated list (E.g.:
	// contentFilter=ACCUMULATED,SNAPSHOT).  If this filter parameter isn’t
	// supplied the returned reports contain all available blocks.
	//
	// Both sub type ACCUMULATED and UPTIME produces a lot of information in
	// response payload. If such data is not used in consuming application it
	// can be good to optimize requests by not querying such data to reduce
	// data size in payloads and response time. When content filter is used,
	// only data parameters provided at the triggered event is included in
	// content and only triggered events that contains parameters matching
	// the content filter are part of response. When content filter is not
	// used an aggregated view of all parameters and its state at each given
	// event is provided.
	ContentFilter *string `form:"contentFilter,omitempty" json:"contentFilter,omitempty"`

	// TriggerFilter Will only return data reports that were triggered by the trigger
	// defined by the filter. Possible values are:
	//  * TIMER
	//  * TELL_TALE
	//  * DRIVER_LOGIN
	//  * DRIVER_LOGOUT
	//  * IGNITION_ON
	//  * IGNITION_OFF
	//  * ENGINE_ON
	//  * ENGINE_OFF
	//  * PTO_ENABLED
	//  * PTO_DISABLED
	//  * DISTANCE_TRAVELLED
	//  * DRIVER_1_WORKING_STATE_CHANGED
	//  * DRIVER_2_WORKING_STATE_CHANGED
	//
	// If several values are used in the filter they should be in
	// a comma-separated list (Ex: triggerFilter=DRIVER_LOGIN,TIMER). If
	// this filter parameter isn’t supplied the returned data reports
	// contain data reports triggered by any trigger.
	TriggerFilter *string `form:"triggerFilter,omitempty" json:"triggerFilter,omitempty"`

	// LatestOnly If this value is set to true only the last vehicle status event is returned for each vehicle in the response. If this value is set to false (or not present) all vehicle status events matching the starttime/stoptime criteria is returned for each vehicle in the response.
	LatestOnly *bool `form:"latestOnly,omitempty" json:"latestOnly,omitempty"`
}
